//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace iTellerBranch.CustomerDetailsService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DepotelCustomerDetailsSoap", Namespace="http://tempuri.org/")]
    public partial class DepotelCustomerDetails : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ValidateAccountNumber2AvoidRestrictionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostReturnOutwardSterlingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseOutwardChequePostingOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostReturnInwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckIfAlreadyPostedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostReturnInward4AcknowledgmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback newperformTokenAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListReset4ReturnRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback PassReturnedList2ConfirmationPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertChequeIntoConfirmationPortalTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTodayChequeFromConfirmationPortalTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateReturnInwardChequeStraightThroughOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateReturnOutwardChequeStraightThroughOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateNEFTInwardStraightThroughOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateInwardChequeStraightThroughOperationCompleted;
        
        private System.Threading.SendOrPostCallback performTokenAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendClearingChequeEmails2CustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendClearingChequeEmails2CustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerIDFromAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback isUserAuthorised2PostOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailIfCollateralExceedsThresholdOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSMS4OutwardChequeOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransmitOutwardItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransmitReturnItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartUsingSUOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsConnectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestInwardDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInwardMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerBVNAndNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerBVNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDepositLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBanksBWThresholdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback isCustomerBlacklistedOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildCHQNarrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDEStatsSterlingOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestMyQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConfigurationTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateMICROperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateBeneficiaryNameFromCBAThreadedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateBeneficiaryNameFromCBAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncrptStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertChequeIntoConfirmationPortalNewThreadedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertChequeIntoConfirmationPortalNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIPFromUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUrlForRemoteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTokenForRemoteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback isEmailValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConvertToObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountTitleWithAccNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAGuestUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExternalUserEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExternalUserFullNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReturnedChequeAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListPostingChequesStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountMemoInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getManagerChequeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateDBEOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateALLDBEOperationCompleted;
        
        private System.Threading.SendOrPostCallback postChequesOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateDoubleEntriesMultiple4SterlingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptEncryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostChequeInwardMCTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDivWarrantPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDividendWarrantPaidStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseApprovedChequesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateNeftRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PassInwardReturn2ConfirmationPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback readOuwardNEFTFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback importOutwardNEFTOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateInwardNEFTDoubleEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateReturnInwardNEFTDoubleEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateCBAFile4OutwardChequesOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateReturnInwardChequeDoubleEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateControlNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateInwardItemSortCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveScannedChequesOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveScannedCheques08082018OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveScannedChequesUVOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveScannedChequesOldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConfigurationValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBankNemonicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBrachNnemonicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTranIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValueDateStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyBankCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTransTypeExcemptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIQAParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateScannerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBranchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PassReturnRequestDatatable2ConfirmationPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBenNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Verifimi_BroadcastMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Verifimi_AddCustomerAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostNEFTOutwardDoubleEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostNEFTOutwardDoubleEntry2OperationCompleted;
        
        private System.Threading.SendOrPostCallback PostNeftInwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback postinwardNeftTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnInwardPostTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDEReturnRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateEncryptedSerialNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback decryptConnectionStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTEmplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEffectiveBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrievePOSTransactionMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsThereMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountCustomerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback padLeftOperationCompleted;
        
        private System.Threading.SendOrPostCallback postCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback requireChequeDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateIfChequeAlreadyExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendReturnInwardMailNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback postInternalChequeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerAccountDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback PostJournalOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerAccountBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkCustomerAccountExistenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkCustomerAccountExistence2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getGLAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGLAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGLAccountBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getACustomerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExternalRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticatefromCBAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGLAccountListofACurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_CA_GL_AccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountsFromPANOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDrawalLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValiDateUserTillOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountNameFromPANOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateAccountNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateNubanAcctOperationCompleted;
        
        private System.Threading.SendOrPostCallback useUBANOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAccountNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSortCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateDoubleEntriesMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateDoubleEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback QuotedStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerBVNOnIBSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountTitleOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerDetailsFromCBAOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushCustomerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushCashDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushCashWithdrawalOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChequeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerGlobalBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoInstantTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerDetails3OperationCompleted;
        
        private System.Threading.SendOrPostCallback getMandateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessAcctDetailsServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAcctDetailsServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountOpeningDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCutomerPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAverageLodgementOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLodgementOverage4CustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCautionAmount4CustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCautionNoticeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLargeAmountCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCautionAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountNewlyOpenedCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnusualLodgementCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewAccountAgeThresholdOperationCompleted;
        
        private System.Threading.SendOrPostCallback allowCautionReasonsOverrideOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostPOStransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveAccountNumberfromPOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrievePrintJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendReceipt4PrintingOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateUserExternallyOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateUserExternallyNoPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCBAuseridOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DepotelCustomerDetails() {
            this.Url = global::iTellerBranch.Properties.Settings.Default.iTellerBranch_CustomerDetailsService_DepotelCustomerDetails;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ValidateAccountNumber2AvoidRestrictionCompletedEventHandler ValidateAccountNumber2AvoidRestrictionCompleted;
        
        /// <remarks/>
        public event PostReturnOutwardSterlingCompletedEventHandler PostReturnOutwardSterlingCompleted;
        
        /// <remarks/>
        public event ReverseOutwardChequePostingCompletedEventHandler ReverseOutwardChequePostingCompleted;
        
        /// <remarks/>
        public event PostReturnInwardCompletedEventHandler PostReturnInwardCompleted;
        
        /// <remarks/>
        public event CheckIfAlreadyPostedCompletedEventHandler CheckIfAlreadyPostedCompleted;
        
        /// <remarks/>
        public event PostReturnInward4AcknowledgmentCompletedEventHandler PostReturnInward4AcknowledgmentCompleted;
        
        /// <remarks/>
        public event newperformTokenAuthenticationCompletedEventHandler newperformTokenAuthenticationCompleted;
        
        /// <remarks/>
        public event getListReset4ReturnRequestCompletedEventHandler getListReset4ReturnRequestCompleted;
        
        /// <remarks/>
        public event PassReturnedList2ConfirmationPortalCompletedEventHandler PassReturnedList2ConfirmationPortalCompleted;
        
        /// <remarks/>
        public event InsertChequeIntoConfirmationPortalTableCompletedEventHandler InsertChequeIntoConfirmationPortalTableCompleted;
        
        /// <remarks/>
        public event DeleteTodayChequeFromConfirmationPortalTableCompletedEventHandler DeleteTodayChequeFromConfirmationPortalTableCompleted;
        
        /// <remarks/>
        public event generateReturnInwardChequeStraightThroughCompletedEventHandler generateReturnInwardChequeStraightThroughCompleted;
        
        /// <remarks/>
        public event generateReturnOutwardChequeStraightThroughCompletedEventHandler generateReturnOutwardChequeStraightThroughCompleted;
        
        /// <remarks/>
        public event generateNEFTInwardStraightThroughCompletedEventHandler generateNEFTInwardStraightThroughCompleted;
        
        /// <remarks/>
        public event generateInwardChequeStraightThroughCompletedEventHandler generateInwardChequeStraightThroughCompleted;
        
        /// <remarks/>
        public event performTokenAuthenticationCompletedEventHandler performTokenAuthenticationCompleted;
        
        /// <remarks/>
        public event sendClearingChequeEmails2CustomerCompletedEventHandler sendClearingChequeEmails2CustomerCompleted;
        
        /// <remarks/>
        public event sendClearingChequeEmails2CustomersCompletedEventHandler sendClearingChequeEmails2CustomersCompleted;
        
        /// <remarks/>
        public event getCustomerEmailCompletedEventHandler getCustomerEmailCompleted;
        
        /// <remarks/>
        public event getCustomerIDFromAccountCompletedEventHandler getCustomerIDFromAccountCompleted;
        
        /// <remarks/>
        public event isUserAuthorised2PostCompletedEventHandler isUserAuthorised2PostCompleted;
        
        /// <remarks/>
        public event SendEmailIfCollateralExceedsThresholdCompletedEventHandler SendEmailIfCollateralExceedsThresholdCompleted;
        
        /// <remarks/>
        public event sendSMS4OutwardChequeCompletedEventHandler sendSMS4OutwardChequeCompleted;
        
        /// <remarks/>
        public event TransmitOutwardItemsCompletedEventHandler TransmitOutwardItemsCompleted;
        
        /// <remarks/>
        public event TransmitReturnItemsCompletedEventHandler TransmitReturnItemsCompleted;
        
        /// <remarks/>
        public event StartUsingSUCompletedEventHandler StartUsingSUCompleted;
        
        /// <remarks/>
        public event IsConnectedCompletedEventHandler IsConnectedCompleted;
        
        /// <remarks/>
        public event RequestInwardDownloadCompletedEventHandler RequestInwardDownloadCompleted;
        
        /// <remarks/>
        public event GetInwardMessageListCompletedEventHandler GetInwardMessageListCompleted;
        
        /// <remarks/>
        public event getCustomerBVNAndNameCompletedEventHandler getCustomerBVNAndNameCompleted;
        
        /// <remarks/>
        public event GetCustomerBVNCompletedEventHandler GetCustomerBVNCompleted;
        
        /// <remarks/>
        public event getDepositLimitCompletedEventHandler getDepositLimitCompleted;
        
        /// <remarks/>
        public event getDepositCompletedEventHandler getDepositCompleted;
        
        /// <remarks/>
        public event GetBanksBWThresholdsCompletedEventHandler GetBanksBWThresholdsCompleted;
        
        /// <remarks/>
        public event isCustomerBlacklistedCompletedEventHandler isCustomerBlacklistedCompleted;
        
        /// <remarks/>
        public event BuildCHQNarrationCompletedEventHandler BuildCHQNarrationCompleted;
        
        /// <remarks/>
        public event GetDEStatsSterlingCompletedEventHandler GetDEStatsSterlingCompleted;
        
        /// <remarks/>
        public event TestMyQueryCompletedEventHandler TestMyQueryCompleted;
        
        /// <remarks/>
        public event getConfigurationTableCompletedEventHandler getConfigurationTableCompleted;
        
        /// <remarks/>
        public event ValidateMICRCompletedEventHandler ValidateMICRCompleted;
        
        /// <remarks/>
        public event ValidateBeneficiaryNameFromCBAThreadedCompletedEventHandler ValidateBeneficiaryNameFromCBAThreadedCompleted;
        
        /// <remarks/>
        public event ValidateBeneficiaryNameFromCBACompletedEventHandler ValidateBeneficiaryNameFromCBACompleted;
        
        /// <remarks/>
        public event GetDataSetCompletedEventHandler GetDataSetCompleted;
        
        /// <remarks/>
        public event EncrptStringCompletedEventHandler EncrptStringCompleted;
        
        /// <remarks/>
        public event InsertChequeIntoConfirmationPortalNewThreadedCompletedEventHandler InsertChequeIntoConfirmationPortalNewThreadedCompleted;
        
        /// <remarks/>
        public event InsertChequeIntoConfirmationPortalNewCompletedEventHandler InsertChequeIntoConfirmationPortalNewCompleted;
        
        /// <remarks/>
        public event GetAssemblyCompletedEventHandler GetAssemblyCompleted;
        
        /// <remarks/>
        public event GetIPFromUrlCompletedEventHandler GetIPFromUrlCompleted;
        
        /// <remarks/>
        public event GetTableDataCompletedEventHandler GetTableDataCompleted;
        
        /// <remarks/>
        public event GetConnectionStringCompletedEventHandler GetConnectionStringCompleted;
        
        /// <remarks/>
        public event GetUrlForRemoteUserCompletedEventHandler GetUrlForRemoteUserCompleted;
        
        /// <remarks/>
        public event GetUserRoleCompletedEventHandler GetUserRoleCompleted;
        
        /// <remarks/>
        public event GetTokenForRemoteUserCompletedEventHandler GetTokenForRemoteUserCompleted;
        
        /// <remarks/>
        public event sendEMailCompletedEventHandler sendEMailCompleted;
        
        /// <remarks/>
        public event isEmailValidCompletedEventHandler isEmailValidCompleted;
        
        /// <remarks/>
        public event TestConvertToObjCompletedEventHandler TestConvertToObjCompleted;
        
        /// <remarks/>
        public event getAccountTitleWithAccNoCompletedEventHandler getAccountTitleWithAccNoCompleted;
        
        /// <remarks/>
        public event isAGuestUserCompletedEventHandler isAGuestUserCompleted;
        
        /// <remarks/>
        public event getExternalUserEmailCompletedEventHandler getExternalUserEmailCompleted;
        
        /// <remarks/>
        public event getExternalUserFullNameCompletedEventHandler getExternalUserFullNameCompleted;
        
        /// <remarks/>
        public event getUserRoleCompletedEventHandler getUserRoleCompleted;
        
        /// <remarks/>
        public event getReturnedChequeAccountCompletedEventHandler getReturnedChequeAccountCompleted;
        
        /// <remarks/>
        public event GetListPostingChequesStatusCompletedEventHandler GetListPostingChequesStatusCompleted;
        
        /// <remarks/>
        public event GetAccountMemoInfoCompletedEventHandler GetAccountMemoInfoCompleted;
        
        /// <remarks/>
        public event getManagerChequeInfoCompletedEventHandler getManagerChequeInfoCompleted;
        
        /// <remarks/>
        public event ValidateDBECompletedEventHandler ValidateDBECompleted;
        
        /// <remarks/>
        public event ValidateALLDBECompletedEventHandler ValidateALLDBECompleted;
        
        /// <remarks/>
        public event postChequesCompletedEventHandler postChequesCompleted;
        
        /// <remarks/>
        public event generateDoubleEntriesMultiple4SterlingCompletedEventHandler generateDoubleEntriesMultiple4SterlingCompleted;
        
        /// <remarks/>
        public event DecryptEncryptCompletedEventHandler DecryptEncryptCompleted;
        
        /// <remarks/>
        public event PostChequeInwardMCTestCompletedEventHandler PostChequeInwardMCTestCompleted;
        
        /// <remarks/>
        public event UpdateDivWarrantPortalCompletedEventHandler UpdateDivWarrantPortalCompleted;
        
        /// <remarks/>
        public event GetDividendWarrantPaidStatusCompletedEventHandler GetDividendWarrantPaidStatusCompleted;
        
        /// <remarks/>
        public event ReverseApprovedChequesCompletedEventHandler ReverseApprovedChequesCompleted;
        
        /// <remarks/>
        public event PopulateNeftRecordsCompletedEventHandler PopulateNeftRecordsCompleted;
        
        /// <remarks/>
        public event PassInwardReturn2ConfirmationPortalCompletedEventHandler PassInwardReturn2ConfirmationPortalCompleted;
        
        /// <remarks/>
        public event readOuwardNEFTFilesCompletedEventHandler readOuwardNEFTFilesCompleted;
        
        /// <remarks/>
        public event importOutwardNEFTCompletedEventHandler importOutwardNEFTCompleted;
        
        /// <remarks/>
        public event generateInwardNEFTDoubleEntriesCompletedEventHandler generateInwardNEFTDoubleEntriesCompleted;
        
        /// <remarks/>
        public event generateReturnInwardNEFTDoubleEntriesCompletedEventHandler generateReturnInwardNEFTDoubleEntriesCompleted;
        
        /// <remarks/>
        public event generateCBAFile4OutwardChequesCompletedEventHandler generateCBAFile4OutwardChequesCompleted;
        
        /// <remarks/>
        public event generateReturnInwardChequeDoubleEntriesCompletedEventHandler generateReturnInwardChequeDoubleEntriesCompleted;
        
        /// <remarks/>
        public event validateControlNumberCompletedEventHandler validateControlNumberCompleted;
        
        /// <remarks/>
        public event GetAccountBranchCompletedEventHandler GetAccountBranchCompleted;
        
        /// <remarks/>
        public event validateInwardItemSortCodeCompletedEventHandler validateInwardItemSortCodeCompleted;
        
        /// <remarks/>
        public event saveScannedChequesCompletedEventHandler saveScannedChequesCompleted;
        
        /// <remarks/>
        public event saveScannedCheques08082018CompletedEventHandler saveScannedCheques08082018Completed;
        
        /// <remarks/>
        public event saveScannedChequesUVCompletedEventHandler saveScannedChequesUVCompleted;
        
        /// <remarks/>
        public event saveScannedChequesOldCompletedEventHandler saveScannedChequesOldCompleted;
        
        /// <remarks/>
        public event getConfigurationValueCompletedEventHandler getConfigurationValueCompleted;
        
        /// <remarks/>
        public event getBankNemonicsCompletedEventHandler getBankNemonicsCompleted;
        
        /// <remarks/>
        public event getBrachNnemonicsCompletedEventHandler getBrachNnemonicsCompleted;
        
        /// <remarks/>
        public event getTranIDCompletedEventHandler getTranIDCompleted;
        
        /// <remarks/>
        public event getHeaderCompletedEventHandler getHeaderCompleted;
        
        /// <remarks/>
        public event GetValueDateStringCompletedEventHandler GetValueDateStringCompleted;
        
        /// <remarks/>
        public event verifyBankCodeCompletedEventHandler verifyBankCodeCompleted;
        
        /// <remarks/>
        public event LoadTransTypeExcemptionCompletedEventHandler LoadTransTypeExcemptionCompleted;
        
        /// <remarks/>
        public event GetIQAParametersCompletedEventHandler GetIQAParametersCompleted;
        
        /// <remarks/>
        public event validateScannerCompletedEventHandler validateScannerCompleted;
        
        /// <remarks/>
        public event getBranchesCompletedEventHandler getBranchesCompleted;
        
        /// <remarks/>
        public event PassReturnRequestDatatable2ConfirmationPortalCompletedEventHandler PassReturnRequestDatatable2ConfirmationPortalCompleted;
        
        /// <remarks/>
        public event getBenNameCompletedEventHandler getBenNameCompleted;
        
        /// <remarks/>
        public event Verifimi_BroadcastMessagesCompletedEventHandler Verifimi_BroadcastMessagesCompleted;
        
        /// <remarks/>
        public event Verifimi_AddCustomerAccountsCompletedEventHandler Verifimi_AddCustomerAccountsCompleted;
        
        /// <remarks/>
        public event PostNEFTOutwardDoubleEntryCompletedEventHandler PostNEFTOutwardDoubleEntryCompleted;
        
        /// <remarks/>
        public event PostNEFTOutwardDoubleEntry2CompletedEventHandler PostNEFTOutwardDoubleEntry2Completed;
        
        /// <remarks/>
        public event PostNeftInwardCompletedEventHandler PostNeftInwardCompleted;
        
        /// <remarks/>
        public event GetBankNameCompletedEventHandler GetBankNameCompleted;
        
        /// <remarks/>
        public event IsValidDateTimeCompletedEventHandler IsValidDateTimeCompleted;
        
        /// <remarks/>
        public event postinwardNeftTestCompletedEventHandler postinwardNeftTestCompleted;
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event sendMailCompletedEventHandler sendMailCompleted;
        
        /// <remarks/>
        public event ReturnInwardPostTestCompletedEventHandler ReturnInwardPostTestCompleted;
        
        /// <remarks/>
        public event GenerateDEReturnRequestCompletedEventHandler GenerateDEReturnRequestCompleted;
        
        /// <remarks/>
        public event getUserBranchCompletedEventHandler getUserBranchCompleted;
        
        /// <remarks/>
        public event generateEncryptedSerialNumberCompletedEventHandler generateEncryptedSerialNumberCompleted;
        
        /// <remarks/>
        public event decryptConnectionStringCompletedEventHandler decryptConnectionStringCompleted;
        
        /// <remarks/>
        public event GetUserTEmplateCompletedEventHandler GetUserTEmplateCompleted;
        
        /// <remarks/>
        public event GetEffectiveBalanceCompletedEventHandler GetEffectiveBalanceCompleted;
        
        /// <remarks/>
        public event RetrievePOSTransactionMessageCompletedEventHandler RetrievePOSTransactionMessageCompleted;
        
        /// <remarks/>
        public event IsThereMemoCompletedEventHandler IsThereMemoCompleted;
        
        /// <remarks/>
        public event getAccountCustomerDetailsCompletedEventHandler getAccountCustomerDetailsCompleted;
        
        /// <remarks/>
        public event padLeftCompletedEventHandler padLeftCompleted;
        
        /// <remarks/>
        public event postCashCompletedEventHandler postCashCompleted;
        
        /// <remarks/>
        public event requireChequeDateCompletedEventHandler requireChequeDateCompleted;
        
        /// <remarks/>
        public event validateIfChequeAlreadyExistsCompletedEventHandler validateIfChequeAlreadyExistsCompleted;
        
        /// <remarks/>
        public event sendReturnInwardMailNotificationCompletedEventHandler sendReturnInwardMailNotificationCompleted;
        
        /// <remarks/>
        public event getUserCurrenciesCompletedEventHandler getUserCurrenciesCompleted;
        
        /// <remarks/>
        public event postInternalChequeCompletedEventHandler postInternalChequeCompleted;
        
        /// <remarks/>
        public event getAccountTitleCompletedEventHandler getAccountTitleCompleted;
        
        /// <remarks/>
        public event getCustomerAccountListCompletedEventHandler getCustomerAccountListCompleted;
        
        /// <remarks/>
        public event getCustomerAccountDetailsCompletedEventHandler getCustomerAccountDetailsCompleted;
        
        /// <remarks/>
        public event getCustomerAccountDetails2CompletedEventHandler getCustomerAccountDetails2Completed;
        
        /// <remarks/>
        public event PostJournalCompletedEventHandler PostJournalCompleted;
        
        /// <remarks/>
        public event getCustomerAccountBalanceCompletedEventHandler getCustomerAccountBalanceCompleted;
        
        /// <remarks/>
        public event checkCustomerAccountExistenceCompletedEventHandler checkCustomerAccountExistenceCompleted;
        
        /// <remarks/>
        public event checkCustomerAccountExistence2CompletedEventHandler checkCustomerAccountExistence2Completed;
        
        /// <remarks/>
        public event getGLAccountListCompletedEventHandler getGLAccountListCompleted;
        
        /// <remarks/>
        public event getGLAccountDetailsCompletedEventHandler getGLAccountDetailsCompleted;
        
        /// <remarks/>
        public event getGLAccountBalanceCompletedEventHandler getGLAccountBalanceCompleted;
        
        /// <remarks/>
        public event getACustomerDetailsCompletedEventHandler getACustomerDetailsCompleted;
        
        /// <remarks/>
        public event getExternalRoleCompletedEventHandler getExternalRoleCompleted;
        
        /// <remarks/>
        public event AuthenticatefromCBACompletedEventHandler AuthenticatefromCBACompleted;
        
        /// <remarks/>
        public event getGLAccountListofACurrencyCompletedEventHandler getGLAccountListofACurrencyCompleted;
        
        /// <remarks/>
        public event get_CA_GL_AccountListCompletedEventHandler get_CA_GL_AccountListCompleted;
        
        /// <remarks/>
        public event getAccountsFromPANCompletedEventHandler getAccountsFromPANCompleted;
        
        /// <remarks/>
        public event getDrawalLimitCompletedEventHandler getDrawalLimitCompleted;
        
        /// <remarks/>
        public event ValiDateUserTillCompletedEventHandler ValiDateUserTillCompleted;
        
        /// <remarks/>
        public event getSeverityCompletedEventHandler getSeverityCompleted;
        
        /// <remarks/>
        public event getAccountNameFromPANCompletedEventHandler getAccountNameFromPANCompleted;
        
        /// <remarks/>
        public event validateAccountNoCompletedEventHandler validateAccountNoCompleted;
        
        /// <remarks/>
        public event validateNubanAcctCompletedEventHandler validateNubanAcctCompleted;
        
        /// <remarks/>
        public event useUBANCompletedEventHandler useUBANCompleted;
        
        /// <remarks/>
        public event checkAccountNoCompletedEventHandler checkAccountNoCompleted;
        
        /// <remarks/>
        public event checkSortCodeCompletedEventHandler checkSortCodeCompleted;
        
        /// <remarks/>
        public event generateDoubleEntriesMultipleCompletedEventHandler generateDoubleEntriesMultipleCompleted;
        
        /// <remarks/>
        public event generateDoubleEntriesCompletedEventHandler generateDoubleEntriesCompleted;
        
        /// <remarks/>
        public event getCustomerDetailsCompletedEventHandler getCustomerDetailsCompleted;
        
        /// <remarks/>
        public event getCustomerDetails2CompletedEventHandler getCustomerDetails2Completed;
        
        /// <remarks/>
        public event QuotedStringCompletedEventHandler QuotedStringCompleted;
        
        /// <remarks/>
        public event getCustomerBVNOnIBSCompletedEventHandler getCustomerBVNOnIBSCompleted;
        
        /// <remarks/>
        public event getAccountTitleOnlyCompletedEventHandler getAccountTitleOnlyCompleted;
        
        /// <remarks/>
        public event UpdateCustomerDetailsFromCBACompletedEventHandler UpdateCustomerDetailsFromCBACompleted;
        
        /// <remarks/>
        public event PushCustomerDetailsCompletedEventHandler PushCustomerDetailsCompleted;
        
        /// <remarks/>
        public event PushCashDepositCompletedEventHandler PushCashDepositCompleted;
        
        /// <remarks/>
        public event PushCashWithdrawalCompletedEventHandler PushCashWithdrawalCompleted;
        
        /// <remarks/>
        public event getChequeStatusCompletedEventHandler getChequeStatusCompleted;
        
        /// <remarks/>
        public event GetCustomerGlobalBalanceCompletedEventHandler GetCustomerGlobalBalanceCompleted;
        
        /// <remarks/>
        public event DoInstantTransferCompletedEventHandler DoInstantTransferCompleted;
        
        /// <remarks/>
        public event getCustomerDetails3CompletedEventHandler getCustomerDetails3Completed;
        
        /// <remarks/>
        public event getMandateInfoCompletedEventHandler getMandateInfoCompleted;
        
        /// <remarks/>
        public event getAllCustomersCompletedEventHandler getAllCustomersCompleted;
        
        /// <remarks/>
        public event ProcessAcctDetailsServiceCompletedEventHandler ProcessAcctDetailsServiceCompleted;
        
        /// <remarks/>
        public event setAcctDetailsServiceCompletedEventHandler setAcctDetailsServiceCompleted;
        
        /// <remarks/>
        public event getStatementCompletedEventHandler getStatementCompleted;
        
        /// <remarks/>
        public event getAccountOpeningDateCompletedEventHandler getAccountOpeningDateCompleted;
        
        /// <remarks/>
        public event getCutomerPictureCompletedEventHandler getCutomerPictureCompleted;
        
        /// <remarks/>
        public event getAverageLodgementCompletedEventHandler getAverageLodgementCompleted;
        
        /// <remarks/>
        public event getLodgementOverage4CustomerCompletedEventHandler getLodgementOverage4CustomerCompleted;
        
        /// <remarks/>
        public event getCautionAmount4CustomerCompletedEventHandler getCautionAmount4CustomerCompleted;
        
        /// <remarks/>
        public event getCautionNoticeListCompletedEventHandler getCautionNoticeListCompleted;
        
        /// <remarks/>
        public event getLargeAmountCodeCompletedEventHandler getLargeAmountCodeCompleted;
        
        /// <remarks/>
        public event getCautionAmountCompletedEventHandler getCautionAmountCompleted;
        
        /// <remarks/>
        public event getAccountNewlyOpenedCodeCompletedEventHandler getAccountNewlyOpenedCodeCompleted;
        
        /// <remarks/>
        public event getUnusualLodgementCodeCompletedEventHandler getUnusualLodgementCodeCompleted;
        
        /// <remarks/>
        public event getNewAccountAgeThresholdCompletedEventHandler getNewAccountAgeThresholdCompleted;
        
        /// <remarks/>
        public event allowCautionReasonsOverrideCompletedEventHandler allowCautionReasonsOverrideCompleted;
        
        /// <remarks/>
        public event CardAuthenticationCompletedEventHandler CardAuthenticationCompleted;
        
        /// <remarks/>
        public event GetCustomerAccountsCompletedEventHandler GetCustomerAccountsCompleted;
        
        /// <remarks/>
        public event PostPOStransactionCompletedEventHandler PostPOStransactionCompleted;
        
        /// <remarks/>
        public event retrieveAccountNumberfromPOSCompletedEventHandler retrieveAccountNumberfromPOSCompleted;
        
        /// <remarks/>
        public event retrieveMessageCompletedEventHandler retrieveMessageCompleted;
        
        /// <remarks/>
        public event RetrievePrintJobCompletedEventHandler RetrievePrintJobCompleted;
        
        /// <remarks/>
        public event SendReceipt4PrintingCompletedEventHandler SendReceipt4PrintingCompleted;
        
        /// <remarks/>
        public event validateUserExternallyCompletedEventHandler validateUserExternallyCompleted;
        
        /// <remarks/>
        public event validateUserExternallyNoPasswordCompletedEventHandler validateUserExternallyNoPasswordCompleted;
        
        /// <remarks/>
        public event getCBAuseridCompletedEventHandler getCBAuseridCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateAccountNumber2AvoidRestriction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidateAccountNumber2AvoidRestriction(System.Data.DataTable dt) {
            object[] results = this.Invoke("ValidateAccountNumber2AvoidRestriction", new object[] {
                        dt});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAccountNumber2AvoidRestrictionAsync(System.Data.DataTable dt) {
            this.ValidateAccountNumber2AvoidRestrictionAsync(dt, null);
        }
        
        /// <remarks/>
        public void ValidateAccountNumber2AvoidRestrictionAsync(System.Data.DataTable dt, object userState) {
            if ((this.ValidateAccountNumber2AvoidRestrictionOperationCompleted == null)) {
                this.ValidateAccountNumber2AvoidRestrictionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAccountNumber2AvoidRestrictionOperationCompleted);
            }
            this.InvokeAsync("ValidateAccountNumber2AvoidRestriction", new object[] {
                        dt}, this.ValidateAccountNumber2AvoidRestrictionOperationCompleted, userState);
        }
        
        private void OnValidateAccountNumber2AvoidRestrictionOperationCompleted(object arg) {
            if ((this.ValidateAccountNumber2AvoidRestrictionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAccountNumber2AvoidRestrictionCompleted(this, new ValidateAccountNumber2AvoidRestrictionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostReturnOutwardSterling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostReturnOutwardSterling(System.Data.DataTable dt) {
            object[] results = this.Invoke("PostReturnOutwardSterling", new object[] {
                        dt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostReturnOutwardSterlingAsync(System.Data.DataTable dt) {
            this.PostReturnOutwardSterlingAsync(dt, null);
        }
        
        /// <remarks/>
        public void PostReturnOutwardSterlingAsync(System.Data.DataTable dt, object userState) {
            if ((this.PostReturnOutwardSterlingOperationCompleted == null)) {
                this.PostReturnOutwardSterlingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostReturnOutwardSterlingOperationCompleted);
            }
            this.InvokeAsync("PostReturnOutwardSterling", new object[] {
                        dt}, this.PostReturnOutwardSterlingOperationCompleted, userState);
        }
        
        private void OnPostReturnOutwardSterlingOperationCompleted(object arg) {
            if ((this.PostReturnOutwardSterlingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostReturnOutwardSterlingCompleted(this, new PostReturnOutwardSterlingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReverseOutwardChequePosting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReverseOutwardChequePosting(ReversalDetails Details) {
            object[] results = this.Invoke("ReverseOutwardChequePosting", new object[] {
                        Details});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseOutwardChequePostingAsync(ReversalDetails Details) {
            this.ReverseOutwardChequePostingAsync(Details, null);
        }
        
        /// <remarks/>
        public void ReverseOutwardChequePostingAsync(ReversalDetails Details, object userState) {
            if ((this.ReverseOutwardChequePostingOperationCompleted == null)) {
                this.ReverseOutwardChequePostingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseOutwardChequePostingOperationCompleted);
            }
            this.InvokeAsync("ReverseOutwardChequePosting", new object[] {
                        Details}, this.ReverseOutwardChequePostingOperationCompleted, userState);
        }
        
        private void OnReverseOutwardChequePostingOperationCompleted(object arg) {
            if ((this.ReverseOutwardChequePostingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseOutwardChequePostingCompleted(this, new ReverseOutwardChequePostingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostReturnInward", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostReturnInward(System.Data.DataTable dt) {
            object[] results = this.Invoke("PostReturnInward", new object[] {
                        dt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostReturnInwardAsync(System.Data.DataTable dt) {
            this.PostReturnInwardAsync(dt, null);
        }
        
        /// <remarks/>
        public void PostReturnInwardAsync(System.Data.DataTable dt, object userState) {
            if ((this.PostReturnInwardOperationCompleted == null)) {
                this.PostReturnInwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostReturnInwardOperationCompleted);
            }
            this.InvokeAsync("PostReturnInward", new object[] {
                        dt}, this.PostReturnInwardOperationCompleted, userState);
        }
        
        private void OnPostReturnInwardOperationCompleted(object arg) {
            if ((this.PostReturnInwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostReturnInwardCompleted(this, new PostReturnInwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckIfAlreadyPosted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckIfAlreadyPosted(int p, string ChequeNo, string BeneficiaryAccount, string ChequeID, decimal Amount, string iType) {
            object[] results = this.Invoke("CheckIfAlreadyPosted", new object[] {
                        p,
                        ChequeNo,
                        BeneficiaryAccount,
                        ChequeID,
                        Amount,
                        iType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckIfAlreadyPostedAsync(int p, string ChequeNo, string BeneficiaryAccount, string ChequeID, decimal Amount, string iType) {
            this.CheckIfAlreadyPostedAsync(p, ChequeNo, BeneficiaryAccount, ChequeID, Amount, iType, null);
        }
        
        /// <remarks/>
        public void CheckIfAlreadyPostedAsync(int p, string ChequeNo, string BeneficiaryAccount, string ChequeID, decimal Amount, string iType, object userState) {
            if ((this.CheckIfAlreadyPostedOperationCompleted == null)) {
                this.CheckIfAlreadyPostedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckIfAlreadyPostedOperationCompleted);
            }
            this.InvokeAsync("CheckIfAlreadyPosted", new object[] {
                        p,
                        ChequeNo,
                        BeneficiaryAccount,
                        ChequeID,
                        Amount,
                        iType}, this.CheckIfAlreadyPostedOperationCompleted, userState);
        }
        
        private void OnCheckIfAlreadyPostedOperationCompleted(object arg) {
            if ((this.CheckIfAlreadyPostedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckIfAlreadyPostedCompleted(this, new CheckIfAlreadyPostedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostReturnInward4Acknowledgment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostReturnInward4Acknowledgment(string filename, int RequestType, int userSession, string userIp, string staffName) {
            object[] results = this.Invoke("PostReturnInward4Acknowledgment", new object[] {
                        filename,
                        RequestType,
                        userSession,
                        userIp,
                        staffName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostReturnInward4AcknowledgmentAsync(string filename, int RequestType, int userSession, string userIp, string staffName) {
            this.PostReturnInward4AcknowledgmentAsync(filename, RequestType, userSession, userIp, staffName, null);
        }
        
        /// <remarks/>
        public void PostReturnInward4AcknowledgmentAsync(string filename, int RequestType, int userSession, string userIp, string staffName, object userState) {
            if ((this.PostReturnInward4AcknowledgmentOperationCompleted == null)) {
                this.PostReturnInward4AcknowledgmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostReturnInward4AcknowledgmentOperationCompleted);
            }
            this.InvokeAsync("PostReturnInward4Acknowledgment", new object[] {
                        filename,
                        RequestType,
                        userSession,
                        userIp,
                        staffName}, this.PostReturnInward4AcknowledgmentOperationCompleted, userState);
        }
        
        private void OnPostReturnInward4AcknowledgmentOperationCompleted(object arg) {
            if ((this.PostReturnInward4AcknowledgmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostReturnInward4AcknowledgmentCompleted(this, new PostReturnInward4AcknowledgmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newperformTokenAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string newperformTokenAuthentication(string domain, string userID, string pin, string dpResponse, string token, bool requestHostCode) {
            object[] results = this.Invoke("newperformTokenAuthentication", new object[] {
                        domain,
                        userID,
                        pin,
                        dpResponse,
                        token,
                        requestHostCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newperformTokenAuthenticationAsync(string domain, string userID, string pin, string dpResponse, string token, bool requestHostCode) {
            this.newperformTokenAuthenticationAsync(domain, userID, pin, dpResponse, token, requestHostCode, null);
        }
        
        /// <remarks/>
        public void newperformTokenAuthenticationAsync(string domain, string userID, string pin, string dpResponse, string token, bool requestHostCode, object userState) {
            if ((this.newperformTokenAuthenticationOperationCompleted == null)) {
                this.newperformTokenAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewperformTokenAuthenticationOperationCompleted);
            }
            this.InvokeAsync("newperformTokenAuthentication", new object[] {
                        domain,
                        userID,
                        pin,
                        dpResponse,
                        token,
                        requestHostCode}, this.newperformTokenAuthenticationOperationCompleted, userState);
        }
        
        private void OnnewperformTokenAuthenticationOperationCompleted(object arg) {
            if ((this.newperformTokenAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newperformTokenAuthenticationCompleted(this, new newperformTokenAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getListReset4ReturnRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getListReset4ReturnRequest() {
            object[] results = this.Invoke("getListReset4ReturnRequest", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getListReset4ReturnRequestAsync() {
            this.getListReset4ReturnRequestAsync(null);
        }
        
        /// <remarks/>
        public void getListReset4ReturnRequestAsync(object userState) {
            if ((this.getListReset4ReturnRequestOperationCompleted == null)) {
                this.getListReset4ReturnRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListReset4ReturnRequestOperationCompleted);
            }
            this.InvokeAsync("getListReset4ReturnRequest", new object[0], this.getListReset4ReturnRequestOperationCompleted, userState);
        }
        
        private void OngetListReset4ReturnRequestOperationCompleted(object arg) {
            if ((this.getListReset4ReturnRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListReset4ReturnRequestCompleted(this, new getListReset4ReturnRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PassReturnedList2ConfirmationPortal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PassReturnedList2ConfirmationPortal(string userid, ref System.Data.DataTable dt) {
            object[] results = this.Invoke("PassReturnedList2ConfirmationPortal", new object[] {
                        userid,
                        dt});
            dt = ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PassReturnedList2ConfirmationPortalAsync(string userid, System.Data.DataTable dt) {
            this.PassReturnedList2ConfirmationPortalAsync(userid, dt, null);
        }
        
        /// <remarks/>
        public void PassReturnedList2ConfirmationPortalAsync(string userid, System.Data.DataTable dt, object userState) {
            if ((this.PassReturnedList2ConfirmationPortalOperationCompleted == null)) {
                this.PassReturnedList2ConfirmationPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassReturnedList2ConfirmationPortalOperationCompleted);
            }
            this.InvokeAsync("PassReturnedList2ConfirmationPortal", new object[] {
                        userid,
                        dt}, this.PassReturnedList2ConfirmationPortalOperationCompleted, userState);
        }
        
        private void OnPassReturnedList2ConfirmationPortalOperationCompleted(object arg) {
            if ((this.PassReturnedList2ConfirmationPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassReturnedList2ConfirmationPortalCompleted(this, new PassReturnedList2ConfirmationPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertChequeIntoConfirmationPortalTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertChequeIntoConfirmationPortalTable() {
            this.Invoke("InsertChequeIntoConfirmationPortalTable", new object[0]);
        }
        
        /// <remarks/>
        public void InsertChequeIntoConfirmationPortalTableAsync() {
            this.InsertChequeIntoConfirmationPortalTableAsync(null);
        }
        
        /// <remarks/>
        public void InsertChequeIntoConfirmationPortalTableAsync(object userState) {
            if ((this.InsertChequeIntoConfirmationPortalTableOperationCompleted == null)) {
                this.InsertChequeIntoConfirmationPortalTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertChequeIntoConfirmationPortalTableOperationCompleted);
            }
            this.InvokeAsync("InsertChequeIntoConfirmationPortalTable", new object[0], this.InsertChequeIntoConfirmationPortalTableOperationCompleted, userState);
        }
        
        private void OnInsertChequeIntoConfirmationPortalTableOperationCompleted(object arg) {
            if ((this.InsertChequeIntoConfirmationPortalTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertChequeIntoConfirmationPortalTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTodayChequeFromConfirmationPortalTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTodayChequeFromConfirmationPortalTable(long batchid) {
            this.Invoke("DeleteTodayChequeFromConfirmationPortalTable", new object[] {
                        batchid});
        }
        
        /// <remarks/>
        public void DeleteTodayChequeFromConfirmationPortalTableAsync(long batchid) {
            this.DeleteTodayChequeFromConfirmationPortalTableAsync(batchid, null);
        }
        
        /// <remarks/>
        public void DeleteTodayChequeFromConfirmationPortalTableAsync(long batchid, object userState) {
            if ((this.DeleteTodayChequeFromConfirmationPortalTableOperationCompleted == null)) {
                this.DeleteTodayChequeFromConfirmationPortalTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTodayChequeFromConfirmationPortalTableOperationCompleted);
            }
            this.InvokeAsync("DeleteTodayChequeFromConfirmationPortalTable", new object[] {
                        batchid}, this.DeleteTodayChequeFromConfirmationPortalTableOperationCompleted, userState);
        }
        
        private void OnDeleteTodayChequeFromConfirmationPortalTableOperationCompleted(object arg) {
            if ((this.DeleteTodayChequeFromConfirmationPortalTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTodayChequeFromConfirmationPortalTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateReturnInwardChequeStraightThrough", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int generateReturnInwardChequeStraightThrough(string date, string session) {
            object[] results = this.Invoke("generateReturnInwardChequeStraightThrough", new object[] {
                        date,
                        session});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void generateReturnInwardChequeStraightThroughAsync(string date, string session) {
            this.generateReturnInwardChequeStraightThroughAsync(date, session, null);
        }
        
        /// <remarks/>
        public void generateReturnInwardChequeStraightThroughAsync(string date, string session, object userState) {
            if ((this.generateReturnInwardChequeStraightThroughOperationCompleted == null)) {
                this.generateReturnInwardChequeStraightThroughOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateReturnInwardChequeStraightThroughOperationCompleted);
            }
            this.InvokeAsync("generateReturnInwardChequeStraightThrough", new object[] {
                        date,
                        session}, this.generateReturnInwardChequeStraightThroughOperationCompleted, userState);
        }
        
        private void OngenerateReturnInwardChequeStraightThroughOperationCompleted(object arg) {
            if ((this.generateReturnInwardChequeStraightThroughCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateReturnInwardChequeStraightThroughCompleted(this, new generateReturnInwardChequeStraightThroughCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateReturnOutwardChequeStraightThrough", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int generateReturnOutwardChequeStraightThrough(string date, string session) {
            object[] results = this.Invoke("generateReturnOutwardChequeStraightThrough", new object[] {
                        date,
                        session});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void generateReturnOutwardChequeStraightThroughAsync(string date, string session) {
            this.generateReturnOutwardChequeStraightThroughAsync(date, session, null);
        }
        
        /// <remarks/>
        public void generateReturnOutwardChequeStraightThroughAsync(string date, string session, object userState) {
            if ((this.generateReturnOutwardChequeStraightThroughOperationCompleted == null)) {
                this.generateReturnOutwardChequeStraightThroughOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateReturnOutwardChequeStraightThroughOperationCompleted);
            }
            this.InvokeAsync("generateReturnOutwardChequeStraightThrough", new object[] {
                        date,
                        session}, this.generateReturnOutwardChequeStraightThroughOperationCompleted, userState);
        }
        
        private void OngenerateReturnOutwardChequeStraightThroughOperationCompleted(object arg) {
            if ((this.generateReturnOutwardChequeStraightThroughCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateReturnOutwardChequeStraightThroughCompleted(this, new generateReturnOutwardChequeStraightThroughCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateNEFTInwardStraightThrough", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int generateNEFTInwardStraightThrough(string date, string session) {
            object[] results = this.Invoke("generateNEFTInwardStraightThrough", new object[] {
                        date,
                        session});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void generateNEFTInwardStraightThroughAsync(string date, string session) {
            this.generateNEFTInwardStraightThroughAsync(date, session, null);
        }
        
        /// <remarks/>
        public void generateNEFTInwardStraightThroughAsync(string date, string session, object userState) {
            if ((this.generateNEFTInwardStraightThroughOperationCompleted == null)) {
                this.generateNEFTInwardStraightThroughOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateNEFTInwardStraightThroughOperationCompleted);
            }
            this.InvokeAsync("generateNEFTInwardStraightThrough", new object[] {
                        date,
                        session}, this.generateNEFTInwardStraightThroughOperationCompleted, userState);
        }
        
        private void OngenerateNEFTInwardStraightThroughOperationCompleted(object arg) {
            if ((this.generateNEFTInwardStraightThroughCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateNEFTInwardStraightThroughCompleted(this, new generateNEFTInwardStraightThroughCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateInwardChequeStraightThrough", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int generateInwardChequeStraightThrough(string date, string session) {
            object[] results = this.Invoke("generateInwardChequeStraightThrough", new object[] {
                        date,
                        session});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void generateInwardChequeStraightThroughAsync(string date, string session) {
            this.generateInwardChequeStraightThroughAsync(date, session, null);
        }
        
        /// <remarks/>
        public void generateInwardChequeStraightThroughAsync(string date, string session, object userState) {
            if ((this.generateInwardChequeStraightThroughOperationCompleted == null)) {
                this.generateInwardChequeStraightThroughOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateInwardChequeStraightThroughOperationCompleted);
            }
            this.InvokeAsync("generateInwardChequeStraightThrough", new object[] {
                        date,
                        session}, this.generateInwardChequeStraightThroughOperationCompleted, userState);
        }
        
        private void OngenerateInwardChequeStraightThroughOperationCompleted(object arg) {
            if ((this.generateInwardChequeStraightThroughCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateInwardChequeStraightThroughCompleted(this, new generateInwardChequeStraightThroughCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/performTokenAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool performTokenAuthentication(string userID, string token, ref string message) {
            object[] results = this.Invoke("performTokenAuthentication", new object[] {
                        userID,
                        token,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void performTokenAuthenticationAsync(string userID, string token, string message) {
            this.performTokenAuthenticationAsync(userID, token, message, null);
        }
        
        /// <remarks/>
        public void performTokenAuthenticationAsync(string userID, string token, string message, object userState) {
            if ((this.performTokenAuthenticationOperationCompleted == null)) {
                this.performTokenAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnperformTokenAuthenticationOperationCompleted);
            }
            this.InvokeAsync("performTokenAuthentication", new object[] {
                        userID,
                        token,
                        message}, this.performTokenAuthenticationOperationCompleted, userState);
        }
        
        private void OnperformTokenAuthenticationOperationCompleted(object arg) {
            if ((this.performTokenAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.performTokenAuthenticationCompleted(this, new performTokenAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendClearingChequeEmails2Customer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendClearingChequeEmails2Customer(int chequeID) {
            this.Invoke("sendClearingChequeEmails2Customer", new object[] {
                        chequeID});
        }
        
        /// <remarks/>
        public void sendClearingChequeEmails2CustomerAsync(int chequeID) {
            this.sendClearingChequeEmails2CustomerAsync(chequeID, null);
        }
        
        /// <remarks/>
        public void sendClearingChequeEmails2CustomerAsync(int chequeID, object userState) {
            if ((this.sendClearingChequeEmails2CustomerOperationCompleted == null)) {
                this.sendClearingChequeEmails2CustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendClearingChequeEmails2CustomerOperationCompleted);
            }
            this.InvokeAsync("sendClearingChequeEmails2Customer", new object[] {
                        chequeID}, this.sendClearingChequeEmails2CustomerOperationCompleted, userState);
        }
        
        private void OnsendClearingChequeEmails2CustomerOperationCompleted(object arg) {
            if ((this.sendClearingChequeEmails2CustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendClearingChequeEmails2CustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendClearingChequeEmails2Customers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendClearingChequeEmails2Customers() {
            this.Invoke("sendClearingChequeEmails2Customers", new object[0]);
        }
        
        /// <remarks/>
        public void sendClearingChequeEmails2CustomersAsync() {
            this.sendClearingChequeEmails2CustomersAsync(null);
        }
        
        /// <remarks/>
        public void sendClearingChequeEmails2CustomersAsync(object userState) {
            if ((this.sendClearingChequeEmails2CustomersOperationCompleted == null)) {
                this.sendClearingChequeEmails2CustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendClearingChequeEmails2CustomersOperationCompleted);
            }
            this.InvokeAsync("sendClearingChequeEmails2Customers", new object[0], this.sendClearingChequeEmails2CustomersOperationCompleted, userState);
        }
        
        private void OnsendClearingChequeEmails2CustomersOperationCompleted(object arg) {
            if ((this.sendClearingChequeEmails2CustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendClearingChequeEmails2CustomersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCustomerEmail(string accountNo) {
            object[] results = this.Invoke("getCustomerEmail", new object[] {
                        accountNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerEmailAsync(string accountNo) {
            this.getCustomerEmailAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void getCustomerEmailAsync(string accountNo, object userState) {
            if ((this.getCustomerEmailOperationCompleted == null)) {
                this.getCustomerEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerEmailOperationCompleted);
            }
            this.InvokeAsync("getCustomerEmail", new object[] {
                        accountNo}, this.getCustomerEmailOperationCompleted, userState);
        }
        
        private void OngetCustomerEmailOperationCompleted(object arg) {
            if ((this.getCustomerEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerEmailCompleted(this, new getCustomerEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerIDFromAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCustomerIDFromAccount(string AcctNo) {
            object[] results = this.Invoke("getCustomerIDFromAccount", new object[] {
                        AcctNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerIDFromAccountAsync(string AcctNo) {
            this.getCustomerIDFromAccountAsync(AcctNo, null);
        }
        
        /// <remarks/>
        public void getCustomerIDFromAccountAsync(string AcctNo, object userState) {
            if ((this.getCustomerIDFromAccountOperationCompleted == null)) {
                this.getCustomerIDFromAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerIDFromAccountOperationCompleted);
            }
            this.InvokeAsync("getCustomerIDFromAccount", new object[] {
                        AcctNo}, this.getCustomerIDFromAccountOperationCompleted, userState);
        }
        
        private void OngetCustomerIDFromAccountOperationCompleted(object arg) {
            if ((this.getCustomerIDFromAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerIDFromAccountCompleted(this, new getCustomerIDFromAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isUserAuthorised2Post", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal isUserAuthorised2Post(string user, int curr, int branchcode) {
            object[] results = this.Invoke("isUserAuthorised2Post", new object[] {
                        user,
                        curr,
                        branchcode});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void isUserAuthorised2PostAsync(string user, int curr, int branchcode) {
            this.isUserAuthorised2PostAsync(user, curr, branchcode, null);
        }
        
        /// <remarks/>
        public void isUserAuthorised2PostAsync(string user, int curr, int branchcode, object userState) {
            if ((this.isUserAuthorised2PostOperationCompleted == null)) {
                this.isUserAuthorised2PostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisUserAuthorised2PostOperationCompleted);
            }
            this.InvokeAsync("isUserAuthorised2Post", new object[] {
                        user,
                        curr,
                        branchcode}, this.isUserAuthorised2PostOperationCompleted, userState);
        }
        
        private void OnisUserAuthorised2PostOperationCompleted(object arg) {
            if ((this.isUserAuthorised2PostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isUserAuthorised2PostCompleted(this, new isUserAuthorised2PostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendEmailIfCollateralExceedsThreshold", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmailIfCollateralExceedsThreshold(System.Data.DataTable Data) {
            object[] results = this.Invoke("SendEmailIfCollateralExceedsThreshold", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailIfCollateralExceedsThresholdAsync(System.Data.DataTable Data) {
            this.SendEmailIfCollateralExceedsThresholdAsync(Data, null);
        }
        
        /// <remarks/>
        public void SendEmailIfCollateralExceedsThresholdAsync(System.Data.DataTable Data, object userState) {
            if ((this.SendEmailIfCollateralExceedsThresholdOperationCompleted == null)) {
                this.SendEmailIfCollateralExceedsThresholdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailIfCollateralExceedsThresholdOperationCompleted);
            }
            this.InvokeAsync("SendEmailIfCollateralExceedsThreshold", new object[] {
                        Data}, this.SendEmailIfCollateralExceedsThresholdOperationCompleted, userState);
        }
        
        private void OnSendEmailIfCollateralExceedsThresholdOperationCompleted(object arg) {
            if ((this.SendEmailIfCollateralExceedsThresholdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailIfCollateralExceedsThresholdCompleted(this, new SendEmailIfCollateralExceedsThresholdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendSMS4OutwardCheque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendSMS4OutwardCheque(int ChequeRef) {
            this.Invoke("sendSMS4OutwardCheque", new object[] {
                        ChequeRef});
        }
        
        /// <remarks/>
        public void sendSMS4OutwardChequeAsync(int ChequeRef) {
            this.sendSMS4OutwardChequeAsync(ChequeRef, null);
        }
        
        /// <remarks/>
        public void sendSMS4OutwardChequeAsync(int ChequeRef, object userState) {
            if ((this.sendSMS4OutwardChequeOperationCompleted == null)) {
                this.sendSMS4OutwardChequeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSMS4OutwardChequeOperationCompleted);
            }
            this.InvokeAsync("sendSMS4OutwardCheque", new object[] {
                        ChequeRef}, this.sendSMS4OutwardChequeOperationCompleted, userState);
        }
        
        private void OnsendSMS4OutwardChequeOperationCompleted(object arg) {
            if ((this.sendSMS4OutwardChequeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSMS4OutwardChequeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransmitOutwardItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransmitOutwardItems(string tableName) {
            object[] results = this.Invoke("TransmitOutwardItems", new object[] {
                        tableName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransmitOutwardItemsAsync(string tableName) {
            this.TransmitOutwardItemsAsync(tableName, null);
        }
        
        /// <remarks/>
        public void TransmitOutwardItemsAsync(string tableName, object userState) {
            if ((this.TransmitOutwardItemsOperationCompleted == null)) {
                this.TransmitOutwardItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransmitOutwardItemsOperationCompleted);
            }
            this.InvokeAsync("TransmitOutwardItems", new object[] {
                        tableName}, this.TransmitOutwardItemsOperationCompleted, userState);
        }
        
        private void OnTransmitOutwardItemsOperationCompleted(object arg) {
            if ((this.TransmitOutwardItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransmitOutwardItemsCompleted(this, new TransmitOutwardItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransmitReturnItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransmitReturnItems(System.Data.DataTable dt) {
            object[] results = this.Invoke("TransmitReturnItems", new object[] {
                        dt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransmitReturnItemsAsync(System.Data.DataTable dt) {
            this.TransmitReturnItemsAsync(dt, null);
        }
        
        /// <remarks/>
        public void TransmitReturnItemsAsync(System.Data.DataTable dt, object userState) {
            if ((this.TransmitReturnItemsOperationCompleted == null)) {
                this.TransmitReturnItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransmitReturnItemsOperationCompleted);
            }
            this.InvokeAsync("TransmitReturnItems", new object[] {
                        dt}, this.TransmitReturnItemsOperationCompleted, userState);
        }
        
        private void OnTransmitReturnItemsOperationCompleted(object arg) {
            if ((this.TransmitReturnItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransmitReturnItemsCompleted(this, new TransmitReturnItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartUsingSU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartUsingSU() {
            this.Invoke("StartUsingSU", new object[0]);
        }
        
        /// <remarks/>
        public void StartUsingSUAsync() {
            this.StartUsingSUAsync(null);
        }
        
        /// <remarks/>
        public void StartUsingSUAsync(object userState) {
            if ((this.StartUsingSUOperationCompleted == null)) {
                this.StartUsingSUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartUsingSUOperationCompleted);
            }
            this.InvokeAsync("StartUsingSU", new object[0], this.StartUsingSUOperationCompleted, userState);
        }
        
        private void OnStartUsingSUOperationCompleted(object arg) {
            if ((this.StartUsingSUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartUsingSUCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsConnected", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsConnected() {
            object[] results = this.Invoke("IsConnected", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsConnectedAsync() {
            this.IsConnectedAsync(null);
        }
        
        /// <remarks/>
        public void IsConnectedAsync(object userState) {
            if ((this.IsConnectedOperationCompleted == null)) {
                this.IsConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsConnectedOperationCompleted);
            }
            this.InvokeAsync("IsConnected", new object[0], this.IsConnectedOperationCompleted, userState);
        }
        
        private void OnIsConnectedOperationCompleted(object arg) {
            if ((this.IsConnectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsConnectedCompleted(this, new IsConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RequestInwardDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RequestInwardDownload() {
            this.Invoke("RequestInwardDownload", new object[0]);
        }
        
        /// <remarks/>
        public void RequestInwardDownloadAsync() {
            this.RequestInwardDownloadAsync(null);
        }
        
        /// <remarks/>
        public void RequestInwardDownloadAsync(object userState) {
            if ((this.RequestInwardDownloadOperationCompleted == null)) {
                this.RequestInwardDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestInwardDownloadOperationCompleted);
            }
            this.InvokeAsync("RequestInwardDownload", new object[0], this.RequestInwardDownloadOperationCompleted, userState);
        }
        
        private void OnRequestInwardDownloadOperationCompleted(object arg) {
            if ((this.RequestInwardDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestInwardDownloadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInwardMessageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetInwardMessageList() {
            this.Invoke("GetInwardMessageList", new object[0]);
        }
        
        /// <remarks/>
        public void GetInwardMessageListAsync() {
            this.GetInwardMessageListAsync(null);
        }
        
        /// <remarks/>
        public void GetInwardMessageListAsync(object userState) {
            if ((this.GetInwardMessageListOperationCompleted == null)) {
                this.GetInwardMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInwardMessageListOperationCompleted);
            }
            this.InvokeAsync("GetInwardMessageList", new object[0], this.GetInwardMessageListOperationCompleted, userState);
        }
        
        private void OnGetInwardMessageListOperationCompleted(object arg) {
            if ((this.GetInwardMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInwardMessageListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerBVNAndName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCustomerBVNAndName(string BankCode, string AcctNo) {
            object[] results = this.Invoke("getCustomerBVNAndName", new object[] {
                        BankCode,
                        AcctNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerBVNAndNameAsync(string BankCode, string AcctNo) {
            this.getCustomerBVNAndNameAsync(BankCode, AcctNo, null);
        }
        
        /// <remarks/>
        public void getCustomerBVNAndNameAsync(string BankCode, string AcctNo, object userState) {
            if ((this.getCustomerBVNAndNameOperationCompleted == null)) {
                this.getCustomerBVNAndNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerBVNAndNameOperationCompleted);
            }
            this.InvokeAsync("getCustomerBVNAndName", new object[] {
                        BankCode,
                        AcctNo}, this.getCustomerBVNAndNameOperationCompleted, userState);
        }
        
        private void OngetCustomerBVNAndNameOperationCompleted(object arg) {
            if ((this.getCustomerBVNAndNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerBVNAndNameCompleted(this, new getCustomerBVNAndNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerBVN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerBVN(string accountNumber) {
            object[] results = this.Invoke("GetCustomerBVN", new object[] {
                        accountNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerBVNAsync(string accountNumber) {
            this.GetCustomerBVNAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetCustomerBVNAsync(string accountNumber, object userState) {
            if ((this.GetCustomerBVNOperationCompleted == null)) {
                this.GetCustomerBVNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerBVNOperationCompleted);
            }
            this.InvokeAsync("GetCustomerBVN", new object[] {
                        accountNumber}, this.GetCustomerBVNOperationCompleted, userState);
        }
        
        private void OnGetCustomerBVNOperationCompleted(object arg) {
            if ((this.GetCustomerBVNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerBVNCompleted(this, new GetCustomerBVNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDepositLimit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal getDepositLimit(string productCode, string currency) {
            object[] results = this.Invoke("getDepositLimit", new object[] {
                        productCode,
                        currency});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void getDepositLimitAsync(string productCode, string currency) {
            this.getDepositLimitAsync(productCode, currency, null);
        }
        
        /// <remarks/>
        public void getDepositLimitAsync(string productCode, string currency, object userState) {
            if ((this.getDepositLimitOperationCompleted == null)) {
                this.getDepositLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDepositLimitOperationCompleted);
            }
            this.InvokeAsync("getDepositLimit", new object[] {
                        productCode,
                        currency}, this.getDepositLimitOperationCompleted, userState);
        }
        
        private void OngetDepositLimitOperationCompleted(object arg) {
            if ((this.getDepositLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDepositLimitCompleted(this, new getDepositLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDeposit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal getDeposit(string accountNo, System.DateTime date) {
            object[] results = this.Invoke("getDeposit", new object[] {
                        accountNo,
                        date});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void getDepositAsync(string accountNo, System.DateTime date) {
            this.getDepositAsync(accountNo, date, null);
        }
        
        /// <remarks/>
        public void getDepositAsync(string accountNo, System.DateTime date, object userState) {
            if ((this.getDepositOperationCompleted == null)) {
                this.getDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDepositOperationCompleted);
            }
            this.InvokeAsync("getDeposit", new object[] {
                        accountNo,
                        date}, this.getDepositOperationCompleted, userState);
        }
        
        private void OngetDepositOperationCompleted(object arg) {
            if ((this.getDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDepositCompleted(this, new getDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBanksBWThresholds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBanksBWThresholds() {
            object[] results = this.Invoke("GetBanksBWThresholds", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBanksBWThresholdsAsync() {
            this.GetBanksBWThresholdsAsync(null);
        }
        
        /// <remarks/>
        public void GetBanksBWThresholdsAsync(object userState) {
            if ((this.GetBanksBWThresholdsOperationCompleted == null)) {
                this.GetBanksBWThresholdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBanksBWThresholdsOperationCompleted);
            }
            this.InvokeAsync("GetBanksBWThresholds", new object[0], this.GetBanksBWThresholdsOperationCompleted, userState);
        }
        
        private void OnGetBanksBWThresholdsOperationCompleted(object arg) {
            if ((this.GetBanksBWThresholdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBanksBWThresholdsCompleted(this, new GetBanksBWThresholdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isCustomerBlacklisted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isCustomerBlacklisted(string AccountNo) {
            object[] results = this.Invoke("isCustomerBlacklisted", new object[] {
                        AccountNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isCustomerBlacklistedAsync(string AccountNo) {
            this.isCustomerBlacklistedAsync(AccountNo, null);
        }
        
        /// <remarks/>
        public void isCustomerBlacklistedAsync(string AccountNo, object userState) {
            if ((this.isCustomerBlacklistedOperationCompleted == null)) {
                this.isCustomerBlacklistedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCustomerBlacklistedOperationCompleted);
            }
            this.InvokeAsync("isCustomerBlacklisted", new object[] {
                        AccountNo}, this.isCustomerBlacklistedOperationCompleted, userState);
        }
        
        private void OnisCustomerBlacklistedOperationCompleted(object arg) {
            if ((this.isCustomerBlacklistedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCustomerBlacklistedCompleted(this, new isCustomerBlacklistedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuildCHQNarration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildCHQNarration(string PayingBankCode, string PresentingBankCode, string SerialNo, string Beneficiary, string Drawer, string Depositor) {
            object[] results = this.Invoke("BuildCHQNarration", new object[] {
                        PayingBankCode,
                        PresentingBankCode,
                        SerialNo,
                        Beneficiary,
                        Drawer,
                        Depositor});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildCHQNarrationAsync(string PayingBankCode, string PresentingBankCode, string SerialNo, string Beneficiary, string Drawer, string Depositor) {
            this.BuildCHQNarrationAsync(PayingBankCode, PresentingBankCode, SerialNo, Beneficiary, Drawer, Depositor, null);
        }
        
        /// <remarks/>
        public void BuildCHQNarrationAsync(string PayingBankCode, string PresentingBankCode, string SerialNo, string Beneficiary, string Drawer, string Depositor, object userState) {
            if ((this.BuildCHQNarrationOperationCompleted == null)) {
                this.BuildCHQNarrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildCHQNarrationOperationCompleted);
            }
            this.InvokeAsync("BuildCHQNarration", new object[] {
                        PayingBankCode,
                        PresentingBankCode,
                        SerialNo,
                        Beneficiary,
                        Drawer,
                        Depositor}, this.BuildCHQNarrationOperationCompleted, userState);
        }
        
        private void OnBuildCHQNarrationOperationCompleted(object arg) {
            if ((this.BuildCHQNarrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildCHQNarrationCompleted(this, new BuildCHQNarrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDEStatsSterling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDEStatsSterling(string fsid, bool isIncremental, int isDetailed, System.DateTime selValDate, string choices) {
            object[] results = this.Invoke("GetDEStatsSterling", new object[] {
                        fsid,
                        isIncremental,
                        isDetailed,
                        selValDate,
                        choices});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDEStatsSterlingAsync(string fsid, bool isIncremental, int isDetailed, System.DateTime selValDate, string choices) {
            this.GetDEStatsSterlingAsync(fsid, isIncremental, isDetailed, selValDate, choices, null);
        }
        
        /// <remarks/>
        public void GetDEStatsSterlingAsync(string fsid, bool isIncremental, int isDetailed, System.DateTime selValDate, string choices, object userState) {
            if ((this.GetDEStatsSterlingOperationCompleted == null)) {
                this.GetDEStatsSterlingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDEStatsSterlingOperationCompleted);
            }
            this.InvokeAsync("GetDEStatsSterling", new object[] {
                        fsid,
                        isIncremental,
                        isDetailed,
                        selValDate,
                        choices}, this.GetDEStatsSterlingOperationCompleted, userState);
        }
        
        private void OnGetDEStatsSterlingOperationCompleted(object arg) {
            if ((this.GetDEStatsSterlingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDEStatsSterlingCompleted(this, new GetDEStatsSterlingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestMyQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable TestMyQuery() {
            object[] results = this.Invoke("TestMyQuery", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void TestMyQueryAsync() {
            this.TestMyQueryAsync(null);
        }
        
        /// <remarks/>
        public void TestMyQueryAsync(object userState) {
            if ((this.TestMyQueryOperationCompleted == null)) {
                this.TestMyQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestMyQueryOperationCompleted);
            }
            this.InvokeAsync("TestMyQuery", new object[0], this.TestMyQueryOperationCompleted, userState);
        }
        
        private void OnTestMyQueryOperationCompleted(object arg) {
            if ((this.TestMyQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestMyQueryCompleted(this, new TestMyQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getConfigurationTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getConfigurationTable() {
            object[] results = this.Invoke("getConfigurationTable", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getConfigurationTableAsync() {
            this.getConfigurationTableAsync(null);
        }
        
        /// <remarks/>
        public void getConfigurationTableAsync(object userState) {
            if ((this.getConfigurationTableOperationCompleted == null)) {
                this.getConfigurationTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConfigurationTableOperationCompleted);
            }
            this.InvokeAsync("getConfigurationTable", new object[0], this.getConfigurationTableOperationCompleted, userState);
        }
        
        private void OngetConfigurationTableOperationCompleted(object arg) {
            if ((this.getConfigurationTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConfigurationTableCompleted(this, new getConfigurationTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateMICR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateMICR(string SerialNo, string SortCode, string AccountNo, string TranCode, string ExpiryDate, string CheckDigits) {
            object[] results = this.Invoke("ValidateMICR", new object[] {
                        SerialNo,
                        SortCode,
                        AccountNo,
                        TranCode,
                        ExpiryDate,
                        CheckDigits});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateMICRAsync(string SerialNo, string SortCode, string AccountNo, string TranCode, string ExpiryDate, string CheckDigits) {
            this.ValidateMICRAsync(SerialNo, SortCode, AccountNo, TranCode, ExpiryDate, CheckDigits, null);
        }
        
        /// <remarks/>
        public void ValidateMICRAsync(string SerialNo, string SortCode, string AccountNo, string TranCode, string ExpiryDate, string CheckDigits, object userState) {
            if ((this.ValidateMICROperationCompleted == null)) {
                this.ValidateMICROperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateMICROperationCompleted);
            }
            this.InvokeAsync("ValidateMICR", new object[] {
                        SerialNo,
                        SortCode,
                        AccountNo,
                        TranCode,
                        ExpiryDate,
                        CheckDigits}, this.ValidateMICROperationCompleted, userState);
        }
        
        private void OnValidateMICROperationCompleted(object arg) {
            if ((this.ValidateMICRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateMICRCompleted(this, new ValidateMICRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateBeneficiaryNameFromCBAThreaded", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateBeneficiaryNameFromCBAThreaded(System.Data.DataTable list) {
            this.Invoke("ValidateBeneficiaryNameFromCBAThreaded", new object[] {
                        list});
        }
        
        /// <remarks/>
        public void ValidateBeneficiaryNameFromCBAThreadedAsync(System.Data.DataTable list) {
            this.ValidateBeneficiaryNameFromCBAThreadedAsync(list, null);
        }
        
        /// <remarks/>
        public void ValidateBeneficiaryNameFromCBAThreadedAsync(System.Data.DataTable list, object userState) {
            if ((this.ValidateBeneficiaryNameFromCBAThreadedOperationCompleted == null)) {
                this.ValidateBeneficiaryNameFromCBAThreadedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBeneficiaryNameFromCBAThreadedOperationCompleted);
            }
            this.InvokeAsync("ValidateBeneficiaryNameFromCBAThreaded", new object[] {
                        list}, this.ValidateBeneficiaryNameFromCBAThreadedOperationCompleted, userState);
        }
        
        private void OnValidateBeneficiaryNameFromCBAThreadedOperationCompleted(object arg) {
            if ((this.ValidateBeneficiaryNameFromCBAThreadedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBeneficiaryNameFromCBAThreadedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateBeneficiaryNameFromCBA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateBeneficiaryNameFromCBA(System.Data.DataTable list) {
            this.Invoke("ValidateBeneficiaryNameFromCBA", new object[] {
                        list});
        }
        
        /// <remarks/>
        public void ValidateBeneficiaryNameFromCBAAsync(System.Data.DataTable list) {
            this.ValidateBeneficiaryNameFromCBAAsync(list, null);
        }
        
        /// <remarks/>
        public void ValidateBeneficiaryNameFromCBAAsync(System.Data.DataTable list, object userState) {
            if ((this.ValidateBeneficiaryNameFromCBAOperationCompleted == null)) {
                this.ValidateBeneficiaryNameFromCBAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBeneficiaryNameFromCBAOperationCompleted);
            }
            this.InvokeAsync("ValidateBeneficiaryNameFromCBA", new object[] {
                        list}, this.ValidateBeneficiaryNameFromCBAOperationCompleted, userState);
        }
        
        private void OnValidateBeneficiaryNameFromCBAOperationCompleted(object arg) {
            if ((this.ValidateBeneficiaryNameFromCBACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBeneficiaryNameFromCBACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataSet(string sql) {
            object[] results = this.Invoke("GetDataSet", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSetAsync(string sql) {
            this.GetDataSetAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetDataSetAsync(string sql, object userState) {
            if ((this.GetDataSetOperationCompleted == null)) {
                this.GetDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDataSet", new object[] {
                        sql}, this.GetDataSetOperationCompleted, userState);
        }
        
        private void OnGetDataSetOperationCompleted(object arg) {
            if ((this.GetDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSetCompleted(this, new GetDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EncrptString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EncrptString() {
            this.Invoke("EncrptString", new object[0]);
        }
        
        /// <remarks/>
        public void EncrptStringAsync() {
            this.EncrptStringAsync(null);
        }
        
        /// <remarks/>
        public void EncrptStringAsync(object userState) {
            if ((this.EncrptStringOperationCompleted == null)) {
                this.EncrptStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncrptStringOperationCompleted);
            }
            this.InvokeAsync("EncrptString", new object[0], this.EncrptStringOperationCompleted, userState);
        }
        
        private void OnEncrptStringOperationCompleted(object arg) {
            if ((this.EncrptStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncrptStringCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertChequeIntoConfirmationPortalNewThreaded", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertChequeIntoConfirmationPortalNewThreaded(System.Data.DataTable list) {
            this.Invoke("InsertChequeIntoConfirmationPortalNewThreaded", new object[] {
                        list});
        }
        
        /// <remarks/>
        public void InsertChequeIntoConfirmationPortalNewThreadedAsync(System.Data.DataTable list) {
            this.InsertChequeIntoConfirmationPortalNewThreadedAsync(list, null);
        }
        
        /// <remarks/>
        public void InsertChequeIntoConfirmationPortalNewThreadedAsync(System.Data.DataTable list, object userState) {
            if ((this.InsertChequeIntoConfirmationPortalNewThreadedOperationCompleted == null)) {
                this.InsertChequeIntoConfirmationPortalNewThreadedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertChequeIntoConfirmationPortalNewThreadedOperationCompleted);
            }
            this.InvokeAsync("InsertChequeIntoConfirmationPortalNewThreaded", new object[] {
                        list}, this.InsertChequeIntoConfirmationPortalNewThreadedOperationCompleted, userState);
        }
        
        private void OnInsertChequeIntoConfirmationPortalNewThreadedOperationCompleted(object arg) {
            if ((this.InsertChequeIntoConfirmationPortalNewThreadedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertChequeIntoConfirmationPortalNewThreadedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertChequeIntoConfirmationPortalNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertChequeIntoConfirmationPortalNew(System.Data.DataTable list) {
            this.Invoke("InsertChequeIntoConfirmationPortalNew", new object[] {
                        list});
        }
        
        /// <remarks/>
        public void InsertChequeIntoConfirmationPortalNewAsync(System.Data.DataTable list) {
            this.InsertChequeIntoConfirmationPortalNewAsync(list, null);
        }
        
        /// <remarks/>
        public void InsertChequeIntoConfirmationPortalNewAsync(System.Data.DataTable list, object userState) {
            if ((this.InsertChequeIntoConfirmationPortalNewOperationCompleted == null)) {
                this.InsertChequeIntoConfirmationPortalNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertChequeIntoConfirmationPortalNewOperationCompleted);
            }
            this.InvokeAsync("InsertChequeIntoConfirmationPortalNew", new object[] {
                        list}, this.InsertChequeIntoConfirmationPortalNewOperationCompleted, userState);
        }
        
        private void OnInsertChequeIntoConfirmationPortalNewOperationCompleted(object arg) {
            if ((this.InsertChequeIntoConfirmationPortalNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertChequeIntoConfirmationPortalNewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssembly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetAssembly() {
            this.Invoke("GetAssembly", new object[0]);
        }
        
        /// <remarks/>
        public void GetAssemblyAsync() {
            this.GetAssemblyAsync(null);
        }
        
        /// <remarks/>
        public void GetAssemblyAsync(object userState) {
            if ((this.GetAssemblyOperationCompleted == null)) {
                this.GetAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssemblyOperationCompleted);
            }
            this.InvokeAsync("GetAssembly", new object[0], this.GetAssemblyOperationCompleted, userState);
        }
        
        private void OnGetAssemblyOperationCompleted(object arg) {
            if ((this.GetAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssemblyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIPFromUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIPFromUrl(string urls) {
            object[] results = this.Invoke("GetIPFromUrl", new object[] {
                        urls});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIPFromUrlAsync(string urls) {
            this.GetIPFromUrlAsync(urls, null);
        }
        
        /// <remarks/>
        public void GetIPFromUrlAsync(string urls, object userState) {
            if ((this.GetIPFromUrlOperationCompleted == null)) {
                this.GetIPFromUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIPFromUrlOperationCompleted);
            }
            this.InvokeAsync("GetIPFromUrl", new object[] {
                        urls}, this.GetIPFromUrlOperationCompleted, userState);
        }
        
        private void OnGetIPFromUrlOperationCompleted(object arg) {
            if ((this.GetIPFromUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIPFromUrlCompleted(this, new GetIPFromUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTableData() {
            object[] results = this.Invoke("GetTableData", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableDataAsync() {
            this.GetTableDataAsync(null);
        }
        
        /// <remarks/>
        public void GetTableDataAsync(object userState) {
            if ((this.GetTableDataOperationCompleted == null)) {
                this.GetTableDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableDataOperationCompleted);
            }
            this.InvokeAsync("GetTableData", new object[0], this.GetTableDataOperationCompleted, userState);
        }
        
        private void OnGetTableDataOperationCompleted(object arg) {
            if ((this.GetTableDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableDataCompleted(this, new GetTableDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConnectionString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConnectionString(string PassKey) {
            object[] results = this.Invoke("GetConnectionString", new object[] {
                        PassKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(string PassKey) {
            this.GetConnectionStringAsync(PassKey, null);
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(string PassKey, object userState) {
            if ((this.GetConnectionStringOperationCompleted == null)) {
                this.GetConnectionStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionStringOperationCompleted);
            }
            this.InvokeAsync("GetConnectionString", new object[] {
                        PassKey}, this.GetConnectionStringOperationCompleted, userState);
        }
        
        private void OnGetConnectionStringOperationCompleted(object arg) {
            if ((this.GetConnectionStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionStringCompleted(this, new GetConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUrlForRemoteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUrlForRemoteUser(string userID, string password, string grantType) {
            object[] results = this.Invoke("GetUrlForRemoteUser", new object[] {
                        userID,
                        password,
                        grantType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUrlForRemoteUserAsync(string userID, string password, string grantType) {
            this.GetUrlForRemoteUserAsync(userID, password, grantType, null);
        }
        
        /// <remarks/>
        public void GetUrlForRemoteUserAsync(string userID, string password, string grantType, object userState) {
            if ((this.GetUrlForRemoteUserOperationCompleted == null)) {
                this.GetUrlForRemoteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUrlForRemoteUserOperationCompleted);
            }
            this.InvokeAsync("GetUrlForRemoteUser", new object[] {
                        userID,
                        password,
                        grantType}, this.GetUrlForRemoteUserOperationCompleted, userState);
        }
        
        private void OnGetUrlForRemoteUserOperationCompleted(object arg) {
            if ((this.GetUrlForRemoteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUrlForRemoteUserCompleted(this, new GetUrlForRemoteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserRole(string userID, string branchcode) {
            object[] results = this.Invoke("GetUserRole", new object[] {
                        userID,
                        branchcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRoleAsync(string userID, string branchcode) {
            this.GetUserRoleAsync(userID, branchcode, null);
        }
        
        /// <remarks/>
        public void GetUserRoleAsync(string userID, string branchcode, object userState) {
            if ((this.GetUserRoleOperationCompleted == null)) {
                this.GetUserRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRoleOperationCompleted);
            }
            this.InvokeAsync("GetUserRole", new object[] {
                        userID,
                        branchcode}, this.GetUserRoleOperationCompleted, userState);
        }
        
        private void OnGetUserRoleOperationCompleted(object arg) {
            if ((this.GetUserRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRoleCompleted(this, new GetUserRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTokenForRemoteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTokenForRemoteUser(string userID, string password, string grantType) {
            object[] results = this.Invoke("GetTokenForRemoteUser", new object[] {
                        userID,
                        password,
                        grantType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTokenForRemoteUserAsync(string userID, string password, string grantType) {
            this.GetTokenForRemoteUserAsync(userID, password, grantType, null);
        }
        
        /// <remarks/>
        public void GetTokenForRemoteUserAsync(string userID, string password, string grantType, object userState) {
            if ((this.GetTokenForRemoteUserOperationCompleted == null)) {
                this.GetTokenForRemoteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTokenForRemoteUserOperationCompleted);
            }
            this.InvokeAsync("GetTokenForRemoteUser", new object[] {
                        userID,
                        password,
                        grantType}, this.GetTokenForRemoteUserOperationCompleted, userState);
        }
        
        private void OnGetTokenForRemoteUserOperationCompleted(object arg) {
            if ((this.GetTokenForRemoteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTokenForRemoteUserCompleted(this, new GetTokenForRemoteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendEMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int sendEMail(string serverAddress, int portNo, string emailFro, string mailTo, string emailSubject, string message, int isSSLEnabled, string attachedEntity, string password) {
            object[] results = this.Invoke("sendEMail", new object[] {
                        serverAddress,
                        portNo,
                        emailFro,
                        mailTo,
                        emailSubject,
                        message,
                        isSSLEnabled,
                        attachedEntity,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sendEMailAsync(string serverAddress, int portNo, string emailFro, string mailTo, string emailSubject, string message, int isSSLEnabled, string attachedEntity, string password) {
            this.sendEMailAsync(serverAddress, portNo, emailFro, mailTo, emailSubject, message, isSSLEnabled, attachedEntity, password, null);
        }
        
        /// <remarks/>
        public void sendEMailAsync(string serverAddress, int portNo, string emailFro, string mailTo, string emailSubject, string message, int isSSLEnabled, string attachedEntity, string password, object userState) {
            if ((this.sendEMailOperationCompleted == null)) {
                this.sendEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendEMailOperationCompleted);
            }
            this.InvokeAsync("sendEMail", new object[] {
                        serverAddress,
                        portNo,
                        emailFro,
                        mailTo,
                        emailSubject,
                        message,
                        isSSLEnabled,
                        attachedEntity,
                        password}, this.sendEMailOperationCompleted, userState);
        }
        
        private void OnsendEMailOperationCompleted(object arg) {
            if ((this.sendEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendEMailCompleted(this, new sendEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isEmailValid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isEmailValid(string email) {
            object[] results = this.Invoke("isEmailValid", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isEmailValidAsync(string email) {
            this.isEmailValidAsync(email, null);
        }
        
        /// <remarks/>
        public void isEmailValidAsync(string email, object userState) {
            if ((this.isEmailValidOperationCompleted == null)) {
                this.isEmailValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisEmailValidOperationCompleted);
            }
            this.InvokeAsync("isEmailValid", new object[] {
                        email}, this.isEmailValidOperationCompleted, userState);
        }
        
        private void OnisEmailValidOperationCompleted(object arg) {
            if ((this.isEmailValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isEmailValidCompleted(this, new isEmailValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestConvertToObj", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestConvertToObj(string data) {
            this.Invoke("TestConvertToObj", new object[] {
                        data});
        }
        
        /// <remarks/>
        public void TestConvertToObjAsync(string data) {
            this.TestConvertToObjAsync(data, null);
        }
        
        /// <remarks/>
        public void TestConvertToObjAsync(string data, object userState) {
            if ((this.TestConvertToObjOperationCompleted == null)) {
                this.TestConvertToObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConvertToObjOperationCompleted);
            }
            this.InvokeAsync("TestConvertToObj", new object[] {
                        data}, this.TestConvertToObjOperationCompleted, userState);
        }
        
        private void OnTestConvertToObjOperationCompleted(object arg) {
            if ((this.TestConvertToObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConvertToObjCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountTitleWithAccNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAccountTitleWithAccNo(ref string accountNumber) {
            object[] results = this.Invoke("getAccountTitleWithAccNo", new object[] {
                        accountNumber});
            accountNumber = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountTitleWithAccNoAsync(string accountNumber) {
            this.getAccountTitleWithAccNoAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void getAccountTitleWithAccNoAsync(string accountNumber, object userState) {
            if ((this.getAccountTitleWithAccNoOperationCompleted == null)) {
                this.getAccountTitleWithAccNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountTitleWithAccNoOperationCompleted);
            }
            this.InvokeAsync("getAccountTitleWithAccNo", new object[] {
                        accountNumber}, this.getAccountTitleWithAccNoOperationCompleted, userState);
        }
        
        private void OngetAccountTitleWithAccNoOperationCompleted(object arg) {
            if ((this.getAccountTitleWithAccNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountTitleWithAccNoCompleted(this, new getAccountTitleWithAccNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAGuestUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAGuestUser(string sUniqueUserID, string sRelTeam, string sSortCode) {
            object[] results = this.Invoke("isAGuestUser", new object[] {
                        sUniqueUserID,
                        sRelTeam,
                        sSortCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAGuestUserAsync(string sUniqueUserID, string sRelTeam, string sSortCode) {
            this.isAGuestUserAsync(sUniqueUserID, sRelTeam, sSortCode, null);
        }
        
        /// <remarks/>
        public void isAGuestUserAsync(string sUniqueUserID, string sRelTeam, string sSortCode, object userState) {
            if ((this.isAGuestUserOperationCompleted == null)) {
                this.isAGuestUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAGuestUserOperationCompleted);
            }
            this.InvokeAsync("isAGuestUser", new object[] {
                        sUniqueUserID,
                        sRelTeam,
                        sSortCode}, this.isAGuestUserOperationCompleted, userState);
        }
        
        private void OnisAGuestUserOperationCompleted(object arg) {
            if ((this.isAGuestUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAGuestUserCompleted(this, new isAGuestUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getExternalUserEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getExternalUserEmail(string sMISCode, string sUserName) {
            object[] results = this.Invoke("getExternalUserEmail", new object[] {
                        sMISCode,
                        sUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExternalUserEmailAsync(string sMISCode, string sUserName) {
            this.getExternalUserEmailAsync(sMISCode, sUserName, null);
        }
        
        /// <remarks/>
        public void getExternalUserEmailAsync(string sMISCode, string sUserName, object userState) {
            if ((this.getExternalUserEmailOperationCompleted == null)) {
                this.getExternalUserEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExternalUserEmailOperationCompleted);
            }
            this.InvokeAsync("getExternalUserEmail", new object[] {
                        sMISCode,
                        sUserName}, this.getExternalUserEmailOperationCompleted, userState);
        }
        
        private void OngetExternalUserEmailOperationCompleted(object arg) {
            if ((this.getExternalUserEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExternalUserEmailCompleted(this, new getExternalUserEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getExternalUserFullName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getExternalUserFullName(string sMISCode) {
            object[] results = this.Invoke("getExternalUserFullName", new object[] {
                        sMISCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExternalUserFullNameAsync(string sMISCode) {
            this.getExternalUserFullNameAsync(sMISCode, null);
        }
        
        /// <remarks/>
        public void getExternalUserFullNameAsync(string sMISCode, object userState) {
            if ((this.getExternalUserFullNameOperationCompleted == null)) {
                this.getExternalUserFullNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExternalUserFullNameOperationCompleted);
            }
            this.InvokeAsync("getExternalUserFullName", new object[] {
                        sMISCode}, this.getExternalUserFullNameOperationCompleted, userState);
        }
        
        private void OngetExternalUserFullNameOperationCompleted(object arg) {
            if ((this.getExternalUserFullNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExternalUserFullNameCompleted(this, new getExternalUserFullNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserRole(string UserId) {
            object[] results = this.Invoke("getUserRole", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserRoleAsync(string UserId) {
            this.getUserRoleAsync(UserId, null);
        }
        
        /// <remarks/>
        public void getUserRoleAsync(string UserId, object userState) {
            if ((this.getUserRoleOperationCompleted == null)) {
                this.getUserRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserRoleOperationCompleted);
            }
            this.InvokeAsync("getUserRole", new object[] {
                        UserId}, this.getUserRoleOperationCompleted, userState);
        }
        
        private void OngetUserRoleOperationCompleted(object arg) {
            if ((this.getUserRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserRoleCompleted(this, new getUserRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReturnedChequeAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getReturnedChequeAccount(string sCode, string acct, string chqNos) {
            object[] results = this.Invoke("getReturnedChequeAccount", new object[] {
                        sCode,
                        acct,
                        chqNos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getReturnedChequeAccountAsync(string sCode, string acct, string chqNos) {
            this.getReturnedChequeAccountAsync(sCode, acct, chqNos, null);
        }
        
        /// <remarks/>
        public void getReturnedChequeAccountAsync(string sCode, string acct, string chqNos, object userState) {
            if ((this.getReturnedChequeAccountOperationCompleted == null)) {
                this.getReturnedChequeAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReturnedChequeAccountOperationCompleted);
            }
            this.InvokeAsync("getReturnedChequeAccount", new object[] {
                        sCode,
                        acct,
                        chqNos}, this.getReturnedChequeAccountOperationCompleted, userState);
        }
        
        private void OngetReturnedChequeAccountOperationCompleted(object arg) {
            if ((this.getReturnedChequeAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReturnedChequeAccountCompleted(this, new getReturnedChequeAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListPostingChequesStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetListPostingChequesStatus(string itemId) {
            object[] results = this.Invoke("GetListPostingChequesStatus", new object[] {
                        itemId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetListPostingChequesStatusAsync(string itemId) {
            this.GetListPostingChequesStatusAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetListPostingChequesStatusAsync(string itemId, object userState) {
            if ((this.GetListPostingChequesStatusOperationCompleted == null)) {
                this.GetListPostingChequesStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListPostingChequesStatusOperationCompleted);
            }
            this.InvokeAsync("GetListPostingChequesStatus", new object[] {
                        itemId}, this.GetListPostingChequesStatusOperationCompleted, userState);
        }
        
        private void OnGetListPostingChequesStatusOperationCompleted(object arg) {
            if ((this.GetListPostingChequesStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListPostingChequesStatusCompleted(this, new GetListPostingChequesStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountMemoInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountMemoInfo GetAccountMemoInfo(string acctno) {
            object[] results = this.Invoke("GetAccountMemoInfo", new object[] {
                        acctno});
            return ((AccountMemoInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountMemoInfoAsync(string acctno) {
            this.GetAccountMemoInfoAsync(acctno, null);
        }
        
        /// <remarks/>
        public void GetAccountMemoInfoAsync(string acctno, object userState) {
            if ((this.GetAccountMemoInfoOperationCompleted == null)) {
                this.GetAccountMemoInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountMemoInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountMemoInfo", new object[] {
                        acctno}, this.GetAccountMemoInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountMemoInfoOperationCompleted(object arg) {
            if ((this.GetAccountMemoInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountMemoInfoCompleted(this, new GetAccountMemoInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getManagerChequeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ManagersChequeDetails[] getManagerChequeInfo(string ttype, string sotcode, string cheqNos, string amt) {
            object[] results = this.Invoke("getManagerChequeInfo", new object[] {
                        ttype,
                        sotcode,
                        cheqNos,
                        amt});
            return ((ManagersChequeDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void getManagerChequeInfoAsync(string ttype, string sotcode, string cheqNos, string amt) {
            this.getManagerChequeInfoAsync(ttype, sotcode, cheqNos, amt, null);
        }
        
        /// <remarks/>
        public void getManagerChequeInfoAsync(string ttype, string sotcode, string cheqNos, string amt, object userState) {
            if ((this.getManagerChequeInfoOperationCompleted == null)) {
                this.getManagerChequeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetManagerChequeInfoOperationCompleted);
            }
            this.InvokeAsync("getManagerChequeInfo", new object[] {
                        ttype,
                        sotcode,
                        cheqNos,
                        amt}, this.getManagerChequeInfoOperationCompleted, userState);
        }
        
        private void OngetManagerChequeInfoOperationCompleted(object arg) {
            if ((this.getManagerChequeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getManagerChequeInfoCompleted(this, new getManagerChequeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateDBE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateDBE(System.Data.DataTable dt) {
            this.Invoke("ValidateDBE", new object[] {
                        dt});
        }
        
        /// <remarks/>
        public void ValidateDBEAsync(System.Data.DataTable dt) {
            this.ValidateDBEAsync(dt, null);
        }
        
        /// <remarks/>
        public void ValidateDBEAsync(System.Data.DataTable dt, object userState) {
            if ((this.ValidateDBEOperationCompleted == null)) {
                this.ValidateDBEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateDBEOperationCompleted);
            }
            this.InvokeAsync("ValidateDBE", new object[] {
                        dt}, this.ValidateDBEOperationCompleted, userState);
        }
        
        private void OnValidateDBEOperationCompleted(object arg) {
            if ((this.ValidateDBECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateDBECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateALLDBE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateALLDBE(System.Data.DataTable dt) {
            this.Invoke("ValidateALLDBE", new object[] {
                        dt});
        }
        
        /// <remarks/>
        public void ValidateALLDBEAsync(System.Data.DataTable dt) {
            this.ValidateALLDBEAsync(dt, null);
        }
        
        /// <remarks/>
        public void ValidateALLDBEAsync(System.Data.DataTable dt, object userState) {
            if ((this.ValidateALLDBEOperationCompleted == null)) {
                this.ValidateALLDBEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateALLDBEOperationCompleted);
            }
            this.InvokeAsync("ValidateALLDBE", new object[] {
                        dt}, this.ValidateALLDBEOperationCompleted, userState);
        }
        
        private void OnValidateALLDBEOperationCompleted(object arg) {
            if ((this.ValidateALLDBECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateALLDBECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/postCheques", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FeedbackMessage postCheques([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref transactionDetails[] cheques, ChequeOperation chequeType, string IpAddress, string bsortcode) {
            object[] results = this.Invoke("postCheques", new object[] {
                        cheques,
                        chequeType,
                        IpAddress,
                        bsortcode});
            cheques = ((transactionDetails[])(results[1]));
            return ((FeedbackMessage)(results[0]));
        }
        
        /// <remarks/>
        public void postChequesAsync(transactionDetails[] cheques, ChequeOperation chequeType, string IpAddress, string bsortcode) {
            this.postChequesAsync(cheques, chequeType, IpAddress, bsortcode, null);
        }
        
        /// <remarks/>
        public void postChequesAsync(transactionDetails[] cheques, ChequeOperation chequeType, string IpAddress, string bsortcode, object userState) {
            if ((this.postChequesOperationCompleted == null)) {
                this.postChequesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostChequesOperationCompleted);
            }
            this.InvokeAsync("postCheques", new object[] {
                        cheques,
                        chequeType,
                        IpAddress,
                        bsortcode}, this.postChequesOperationCompleted, userState);
        }
        
        private void OnpostChequesOperationCompleted(object arg) {
            if ((this.postChequesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postChequesCompleted(this, new postChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateDoubleEntriesMultiple4Sterling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool generateDoubleEntriesMultiple4Sterling(System.Data.DataTable dtCheque, System.Data.DataTable dtMc, System.Data.DataTable dtEmptyData, string sFilePath, ref string sMsg, bool isIncremental, int session, int requestType, int usersession, string userlp, string staffName) {
            object[] results = this.Invoke("generateDoubleEntriesMultiple4Sterling", new object[] {
                        dtCheque,
                        dtMc,
                        dtEmptyData,
                        sFilePath,
                        sMsg,
                        isIncremental,
                        session,
                        requestType,
                        usersession,
                        userlp,
                        staffName});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void generateDoubleEntriesMultiple4SterlingAsync(System.Data.DataTable dtCheque, System.Data.DataTable dtMc, System.Data.DataTable dtEmptyData, string sFilePath, string sMsg, bool isIncremental, int session, int requestType, int usersession, string userlp, string staffName) {
            this.generateDoubleEntriesMultiple4SterlingAsync(dtCheque, dtMc, dtEmptyData, sFilePath, sMsg, isIncremental, session, requestType, usersession, userlp, staffName, null);
        }
        
        /// <remarks/>
        public void generateDoubleEntriesMultiple4SterlingAsync(System.Data.DataTable dtCheque, System.Data.DataTable dtMc, System.Data.DataTable dtEmptyData, string sFilePath, string sMsg, bool isIncremental, int session, int requestType, int usersession, string userlp, string staffName, object userState) {
            if ((this.generateDoubleEntriesMultiple4SterlingOperationCompleted == null)) {
                this.generateDoubleEntriesMultiple4SterlingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateDoubleEntriesMultiple4SterlingOperationCompleted);
            }
            this.InvokeAsync("generateDoubleEntriesMultiple4Sterling", new object[] {
                        dtCheque,
                        dtMc,
                        dtEmptyData,
                        sFilePath,
                        sMsg,
                        isIncremental,
                        session,
                        requestType,
                        usersession,
                        userlp,
                        staffName}, this.generateDoubleEntriesMultiple4SterlingOperationCompleted, userState);
        }
        
        private void OngenerateDoubleEntriesMultiple4SterlingOperationCompleted(object arg) {
            if ((this.generateDoubleEntriesMultiple4SterlingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateDoubleEntriesMultiple4SterlingCompleted(this, new generateDoubleEntriesMultiple4SterlingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DecryptEncrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DecryptEncrypt(string encdecVal, int type) {
            object[] results = this.Invoke("DecryptEncrypt", new object[] {
                        encdecVal,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptEncryptAsync(string encdecVal, int type) {
            this.DecryptEncryptAsync(encdecVal, type, null);
        }
        
        /// <remarks/>
        public void DecryptEncryptAsync(string encdecVal, int type, object userState) {
            if ((this.DecryptEncryptOperationCompleted == null)) {
                this.DecryptEncryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptEncryptOperationCompleted);
            }
            this.InvokeAsync("DecryptEncrypt", new object[] {
                        encdecVal,
                        type}, this.DecryptEncryptOperationCompleted, userState);
        }
        
        private void OnDecryptEncryptOperationCompleted(object arg) {
            if ((this.DecryptEncryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptEncryptCompleted(this, new DecryptEncryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostChequeInwardMCTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostChequeInwardMCTest() {
            object[] results = this.Invoke("PostChequeInwardMCTest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostChequeInwardMCTestAsync() {
            this.PostChequeInwardMCTestAsync(null);
        }
        
        /// <remarks/>
        public void PostChequeInwardMCTestAsync(object userState) {
            if ((this.PostChequeInwardMCTestOperationCompleted == null)) {
                this.PostChequeInwardMCTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostChequeInwardMCTestOperationCompleted);
            }
            this.InvokeAsync("PostChequeInwardMCTest", new object[0], this.PostChequeInwardMCTestOperationCompleted, userState);
        }
        
        private void OnPostChequeInwardMCTestOperationCompleted(object arg) {
            if ((this.PostChequeInwardMCTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostChequeInwardMCTestCompleted(this, new PostChequeInwardMCTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDivWarrantPortal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDivWarrantPortal(string acctNos, string warrantNo, decimal amt, string userId, string rcode) {
            object[] results = this.Invoke("UpdateDivWarrantPortal", new object[] {
                        acctNos,
                        warrantNo,
                        amt,
                        userId,
                        rcode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDivWarrantPortalAsync(string acctNos, string warrantNo, decimal amt, string userId, string rcode) {
            this.UpdateDivWarrantPortalAsync(acctNos, warrantNo, amt, userId, rcode, null);
        }
        
        /// <remarks/>
        public void UpdateDivWarrantPortalAsync(string acctNos, string warrantNo, decimal amt, string userId, string rcode, object userState) {
            if ((this.UpdateDivWarrantPortalOperationCompleted == null)) {
                this.UpdateDivWarrantPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDivWarrantPortalOperationCompleted);
            }
            this.InvokeAsync("UpdateDivWarrantPortal", new object[] {
                        acctNos,
                        warrantNo,
                        amt,
                        userId,
                        rcode}, this.UpdateDivWarrantPortalOperationCompleted, userState);
        }
        
        private void OnUpdateDivWarrantPortalOperationCompleted(object arg) {
            if ((this.UpdateDivWarrantPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDivWarrantPortalCompleted(this, new UpdateDivWarrantPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDividendWarrantPaidStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDividendWarrantPaidStatus(string acctNos, string warrantNo, decimal amt) {
            object[] results = this.Invoke("GetDividendWarrantPaidStatus", new object[] {
                        acctNos,
                        warrantNo,
                        amt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDividendWarrantPaidStatusAsync(string acctNos, string warrantNo, decimal amt) {
            this.GetDividendWarrantPaidStatusAsync(acctNos, warrantNo, amt, null);
        }
        
        /// <remarks/>
        public void GetDividendWarrantPaidStatusAsync(string acctNos, string warrantNo, decimal amt, object userState) {
            if ((this.GetDividendWarrantPaidStatusOperationCompleted == null)) {
                this.GetDividendWarrantPaidStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDividendWarrantPaidStatusOperationCompleted);
            }
            this.InvokeAsync("GetDividendWarrantPaidStatus", new object[] {
                        acctNos,
                        warrantNo,
                        amt}, this.GetDividendWarrantPaidStatusOperationCompleted, userState);
        }
        
        private void OnGetDividendWarrantPaidStatusOperationCompleted(object arg) {
            if ((this.GetDividendWarrantPaidStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDividendWarrantPaidStatusCompleted(this, new GetDividendWarrantPaidStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReverseApprovedCheques", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReverseApprovedCheques(string CBAReferrence, string AppName, string BranchCode) {
            object[] results = this.Invoke("ReverseApprovedCheques", new object[] {
                        CBAReferrence,
                        AppName,
                        BranchCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseApprovedChequesAsync(string CBAReferrence, string AppName, string BranchCode) {
            this.ReverseApprovedChequesAsync(CBAReferrence, AppName, BranchCode, null);
        }
        
        /// <remarks/>
        public void ReverseApprovedChequesAsync(string CBAReferrence, string AppName, string BranchCode, object userState) {
            if ((this.ReverseApprovedChequesOperationCompleted == null)) {
                this.ReverseApprovedChequesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseApprovedChequesOperationCompleted);
            }
            this.InvokeAsync("ReverseApprovedCheques", new object[] {
                        CBAReferrence,
                        AppName,
                        BranchCode}, this.ReverseApprovedChequesOperationCompleted, userState);
        }
        
        private void OnReverseApprovedChequesOperationCompleted(object arg) {
            if ((this.ReverseApprovedChequesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseApprovedChequesCompleted(this, new ReverseApprovedChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PopulateNeftRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PopulateNeftRecords(System.Data.DataTable list) {
            object[] results = this.Invoke("PopulateNeftRecords", new object[] {
                        list});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateNeftRecordsAsync(System.Data.DataTable list) {
            this.PopulateNeftRecordsAsync(list, null);
        }
        
        /// <remarks/>
        public void PopulateNeftRecordsAsync(System.Data.DataTable list, object userState) {
            if ((this.PopulateNeftRecordsOperationCompleted == null)) {
                this.PopulateNeftRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateNeftRecordsOperationCompleted);
            }
            this.InvokeAsync("PopulateNeftRecords", new object[] {
                        list}, this.PopulateNeftRecordsOperationCompleted, userState);
        }
        
        private void OnPopulateNeftRecordsOperationCompleted(object arg) {
            if ((this.PopulateNeftRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateNeftRecordsCompleted(this, new PopulateNeftRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PassInwardReturn2ConfirmationPortal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PassInwardReturn2ConfirmationPortal(string chqNo, string acctNos, decimal amt, string userid, string returnReason) {
            object[] results = this.Invoke("PassInwardReturn2ConfirmationPortal", new object[] {
                        chqNo,
                        acctNos,
                        amt,
                        userid,
                        returnReason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PassInwardReturn2ConfirmationPortalAsync(string chqNo, string acctNos, decimal amt, string userid, string returnReason) {
            this.PassInwardReturn2ConfirmationPortalAsync(chqNo, acctNos, amt, userid, returnReason, null);
        }
        
        /// <remarks/>
        public void PassInwardReturn2ConfirmationPortalAsync(string chqNo, string acctNos, decimal amt, string userid, string returnReason, object userState) {
            if ((this.PassInwardReturn2ConfirmationPortalOperationCompleted == null)) {
                this.PassInwardReturn2ConfirmationPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassInwardReturn2ConfirmationPortalOperationCompleted);
            }
            this.InvokeAsync("PassInwardReturn2ConfirmationPortal", new object[] {
                        chqNo,
                        acctNos,
                        amt,
                        userid,
                        returnReason}, this.PassInwardReturn2ConfirmationPortalOperationCompleted, userState);
        }
        
        private void OnPassInwardReturn2ConfirmationPortalOperationCompleted(object arg) {
            if ((this.PassInwardReturn2ConfirmationPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassInwardReturn2ConfirmationPortalCompleted(this, new PassInwardReturn2ConfirmationPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/readOuwardNEFTFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable readOuwardNEFTFiles() {
            object[] results = this.Invoke("readOuwardNEFTFiles", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void readOuwardNEFTFilesAsync() {
            this.readOuwardNEFTFilesAsync(null);
        }
        
        /// <remarks/>
        public void readOuwardNEFTFilesAsync(object userState) {
            if ((this.readOuwardNEFTFilesOperationCompleted == null)) {
                this.readOuwardNEFTFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadOuwardNEFTFilesOperationCompleted);
            }
            this.InvokeAsync("readOuwardNEFTFiles", new object[0], this.readOuwardNEFTFilesOperationCompleted, userState);
        }
        
        private void OnreadOuwardNEFTFilesOperationCompleted(object arg) {
            if ((this.readOuwardNEFTFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readOuwardNEFTFilesCompleted(this, new readOuwardNEFTFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/importOutwardNEFT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int importOutwardNEFT(System.Data.DataTable NEFT) {
            object[] results = this.Invoke("importOutwardNEFT", new object[] {
                        NEFT});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void importOutwardNEFTAsync(System.Data.DataTable NEFT) {
            this.importOutwardNEFTAsync(NEFT, null);
        }
        
        /// <remarks/>
        public void importOutwardNEFTAsync(System.Data.DataTable NEFT, object userState) {
            if ((this.importOutwardNEFTOperationCompleted == null)) {
                this.importOutwardNEFTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportOutwardNEFTOperationCompleted);
            }
            this.InvokeAsync("importOutwardNEFT", new object[] {
                        NEFT}, this.importOutwardNEFTOperationCompleted, userState);
        }
        
        private void OnimportOutwardNEFTOperationCompleted(object arg) {
            if ((this.importOutwardNEFTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importOutwardNEFTCompleted(this, new importOutwardNEFTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateInwardNEFTDoubleEntries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void generateInwardNEFTDoubleEntries(System.DateTime date, int Session) {
            this.Invoke("generateInwardNEFTDoubleEntries", new object[] {
                        date,
                        Session});
        }
        
        /// <remarks/>
        public void generateInwardNEFTDoubleEntriesAsync(System.DateTime date, int Session) {
            this.generateInwardNEFTDoubleEntriesAsync(date, Session, null);
        }
        
        /// <remarks/>
        public void generateInwardNEFTDoubleEntriesAsync(System.DateTime date, int Session, object userState) {
            if ((this.generateInwardNEFTDoubleEntriesOperationCompleted == null)) {
                this.generateInwardNEFTDoubleEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateInwardNEFTDoubleEntriesOperationCompleted);
            }
            this.InvokeAsync("generateInwardNEFTDoubleEntries", new object[] {
                        date,
                        Session}, this.generateInwardNEFTDoubleEntriesOperationCompleted, userState);
        }
        
        private void OngenerateInwardNEFTDoubleEntriesOperationCompleted(object arg) {
            if ((this.generateInwardNEFTDoubleEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateInwardNEFTDoubleEntriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateReturnInwardNEFTDoubleEntries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void generateReturnInwardNEFTDoubleEntries(System.DateTime date, int Session) {
            this.Invoke("generateReturnInwardNEFTDoubleEntries", new object[] {
                        date,
                        Session});
        }
        
        /// <remarks/>
        public void generateReturnInwardNEFTDoubleEntriesAsync(System.DateTime date, int Session) {
            this.generateReturnInwardNEFTDoubleEntriesAsync(date, Session, null);
        }
        
        /// <remarks/>
        public void generateReturnInwardNEFTDoubleEntriesAsync(System.DateTime date, int Session, object userState) {
            if ((this.generateReturnInwardNEFTDoubleEntriesOperationCompleted == null)) {
                this.generateReturnInwardNEFTDoubleEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateReturnInwardNEFTDoubleEntriesOperationCompleted);
            }
            this.InvokeAsync("generateReturnInwardNEFTDoubleEntries", new object[] {
                        date,
                        Session}, this.generateReturnInwardNEFTDoubleEntriesOperationCompleted, userState);
        }
        
        private void OngenerateReturnInwardNEFTDoubleEntriesOperationCompleted(object arg) {
            if ((this.generateReturnInwardNEFTDoubleEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateReturnInwardNEFTDoubleEntriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateCBAFile4OutwardCheques", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void generateCBAFile4OutwardCheques(System.DateTime startDate, System.DateTime endDate, string branches) {
            this.Invoke("generateCBAFile4OutwardCheques", new object[] {
                        startDate,
                        endDate,
                        branches});
        }
        
        /// <remarks/>
        public void generateCBAFile4OutwardChequesAsync(System.DateTime startDate, System.DateTime endDate, string branches) {
            this.generateCBAFile4OutwardChequesAsync(startDate, endDate, branches, null);
        }
        
        /// <remarks/>
        public void generateCBAFile4OutwardChequesAsync(System.DateTime startDate, System.DateTime endDate, string branches, object userState) {
            if ((this.generateCBAFile4OutwardChequesOperationCompleted == null)) {
                this.generateCBAFile4OutwardChequesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateCBAFile4OutwardChequesOperationCompleted);
            }
            this.InvokeAsync("generateCBAFile4OutwardCheques", new object[] {
                        startDate,
                        endDate,
                        branches}, this.generateCBAFile4OutwardChequesOperationCompleted, userState);
        }
        
        private void OngenerateCBAFile4OutwardChequesOperationCompleted(object arg) {
            if ((this.generateCBAFile4OutwardChequesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateCBAFile4OutwardChequesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateReturnInwardChequeDoubleEntries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void generateReturnInwardChequeDoubleEntries(System.DateTime date, int Session) {
            this.Invoke("generateReturnInwardChequeDoubleEntries", new object[] {
                        date,
                        Session});
        }
        
        /// <remarks/>
        public void generateReturnInwardChequeDoubleEntriesAsync(System.DateTime date, int Session) {
            this.generateReturnInwardChequeDoubleEntriesAsync(date, Session, null);
        }
        
        /// <remarks/>
        public void generateReturnInwardChequeDoubleEntriesAsync(System.DateTime date, int Session, object userState) {
            if ((this.generateReturnInwardChequeDoubleEntriesOperationCompleted == null)) {
                this.generateReturnInwardChequeDoubleEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateReturnInwardChequeDoubleEntriesOperationCompleted);
            }
            this.InvokeAsync("generateReturnInwardChequeDoubleEntries", new object[] {
                        date,
                        Session}, this.generateReturnInwardChequeDoubleEntriesOperationCompleted, userState);
        }
        
        private void OngenerateReturnInwardChequeDoubleEntriesOperationCompleted(object arg) {
            if ((this.generateReturnInwardChequeDoubleEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateReturnInwardChequeDoubleEntriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validateControlNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int validateControlNumber(string accountNumber, string ChequeNumber, string controlNumber, int itemID) {
            object[] results = this.Invoke("validateControlNumber", new object[] {
                        accountNumber,
                        ChequeNumber,
                        controlNumber,
                        itemID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void validateControlNumberAsync(string accountNumber, string ChequeNumber, string controlNumber, int itemID) {
            this.validateControlNumberAsync(accountNumber, ChequeNumber, controlNumber, itemID, null);
        }
        
        /// <remarks/>
        public void validateControlNumberAsync(string accountNumber, string ChequeNumber, string controlNumber, int itemID, object userState) {
            if ((this.validateControlNumberOperationCompleted == null)) {
                this.validateControlNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateControlNumberOperationCompleted);
            }
            this.InvokeAsync("validateControlNumber", new object[] {
                        accountNumber,
                        ChequeNumber,
                        controlNumber,
                        itemID}, this.validateControlNumberOperationCompleted, userState);
        }
        
        private void OnvalidateControlNumberOperationCompleted(object arg) {
            if ((this.validateControlNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateControlNumberCompleted(this, new validateControlNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountBranch(string acctNo) {
            object[] results = this.Invoke("GetAccountBranch", new object[] {
                        acctNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountBranchAsync(string acctNo) {
            this.GetAccountBranchAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetAccountBranchAsync(string acctNo, object userState) {
            if ((this.GetAccountBranchOperationCompleted == null)) {
                this.GetAccountBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountBranchOperationCompleted);
            }
            this.InvokeAsync("GetAccountBranch", new object[] {
                        acctNo}, this.GetAccountBranchOperationCompleted, userState);
        }
        
        private void OnGetAccountBranchOperationCompleted(object arg) {
            if ((this.GetAccountBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountBranchCompleted(this, new GetAccountBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validateInwardItemSortCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void validateInwardItemSortCode(System.DateTime startDate, System.DateTime endDate) {
            this.Invoke("validateInwardItemSortCode", new object[] {
                        startDate,
                        endDate});
        }
        
        /// <remarks/>
        public void validateInwardItemSortCodeAsync(System.DateTime startDate, System.DateTime endDate) {
            this.validateInwardItemSortCodeAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void validateInwardItemSortCodeAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.validateInwardItemSortCodeOperationCompleted == null)) {
                this.validateInwardItemSortCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateInwardItemSortCodeOperationCompleted);
            }
            this.InvokeAsync("validateInwardItemSortCode", new object[] {
                        startDate,
                        endDate}, this.validateInwardItemSortCodeOperationCompleted, userState);
        }
        
        private void OnvalidateInwardItemSortCodeOperationCompleted(object arg) {
            if ((this.validateInwardItemSortCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateInwardItemSortCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveScannedCheques", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveScannedCheques(int tranID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode, string BVN) {
            object[] results = this.Invoke("saveScannedCheques", new object[] {
                        tranID,
                        transDetails,
                        _presentingBankSortCode,
                        beneficiaryAccountNo,
                        accountTitle,
                        _servicePoint,
                        _autoApprove,
                        _userID,
                        Depositor,
                        PhoneNo,
                        currencycode,
                        BVN});
            transDetails = ((chequeDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void saveScannedChequesAsync(int tranID, chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode, string BVN) {
            this.saveScannedChequesAsync(tranID, transDetails, _presentingBankSortCode, beneficiaryAccountNo, accountTitle, _servicePoint, _autoApprove, _userID, Depositor, PhoneNo, currencycode, BVN, null);
        }
        
        /// <remarks/>
        public void saveScannedChequesAsync(int tranID, chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode, string BVN, object userState) {
            if ((this.saveScannedChequesOperationCompleted == null)) {
                this.saveScannedChequesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveScannedChequesOperationCompleted);
            }
            this.InvokeAsync("saveScannedCheques", new object[] {
                        tranID,
                        transDetails,
                        _presentingBankSortCode,
                        beneficiaryAccountNo,
                        accountTitle,
                        _servicePoint,
                        _autoApprove,
                        _userID,
                        Depositor,
                        PhoneNo,
                        currencycode,
                        BVN}, this.saveScannedChequesOperationCompleted, userState);
        }
        
        private void OnsaveScannedChequesOperationCompleted(object arg) {
            if ((this.saveScannedChequesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveScannedChequesCompleted(this, new saveScannedChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveScannedCheques08082018", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveScannedCheques08082018(int tranID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode) {
            object[] results = this.Invoke("saveScannedCheques08082018", new object[] {
                        tranID,
                        transDetails,
                        _presentingBankSortCode,
                        beneficiaryAccountNo,
                        accountTitle,
                        _servicePoint,
                        _autoApprove,
                        _userID,
                        Depositor,
                        PhoneNo,
                        currencycode});
            transDetails = ((chequeDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void saveScannedCheques08082018Async(int tranID, chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode) {
            this.saveScannedCheques08082018Async(tranID, transDetails, _presentingBankSortCode, beneficiaryAccountNo, accountTitle, _servicePoint, _autoApprove, _userID, Depositor, PhoneNo, currencycode, null);
        }
        
        /// <remarks/>
        public void saveScannedCheques08082018Async(int tranID, chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode, object userState) {
            if ((this.saveScannedCheques08082018OperationCompleted == null)) {
                this.saveScannedCheques08082018OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveScannedCheques08082018OperationCompleted);
            }
            this.InvokeAsync("saveScannedCheques08082018", new object[] {
                        tranID,
                        transDetails,
                        _presentingBankSortCode,
                        beneficiaryAccountNo,
                        accountTitle,
                        _servicePoint,
                        _autoApprove,
                        _userID,
                        Depositor,
                        PhoneNo,
                        currencycode}, this.saveScannedCheques08082018OperationCompleted, userState);
        }
        
        private void OnsaveScannedCheques08082018OperationCompleted(object arg) {
            if ((this.saveScannedCheques08082018Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveScannedCheques08082018Completed(this, new saveScannedCheques08082018CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveScannedChequesUV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveScannedChequesUV(int tranID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode) {
            object[] results = this.Invoke("saveScannedChequesUV", new object[] {
                        tranID,
                        transDetails,
                        _presentingBankSortCode,
                        beneficiaryAccountNo,
                        accountTitle,
                        _servicePoint,
                        _autoApprove,
                        _userID,
                        Depositor,
                        PhoneNo,
                        currencycode});
            transDetails = ((chequeDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void saveScannedChequesUVAsync(int tranID, chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode) {
            this.saveScannedChequesUVAsync(tranID, transDetails, _presentingBankSortCode, beneficiaryAccountNo, accountTitle, _servicePoint, _autoApprove, _userID, Depositor, PhoneNo, currencycode, null);
        }
        
        /// <remarks/>
        public void saveScannedChequesUVAsync(int tranID, chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode, object userState) {
            if ((this.saveScannedChequesUVOperationCompleted == null)) {
                this.saveScannedChequesUVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveScannedChequesUVOperationCompleted);
            }
            this.InvokeAsync("saveScannedChequesUV", new object[] {
                        tranID,
                        transDetails,
                        _presentingBankSortCode,
                        beneficiaryAccountNo,
                        accountTitle,
                        _servicePoint,
                        _autoApprove,
                        _userID,
                        Depositor,
                        PhoneNo,
                        currencycode}, this.saveScannedChequesUVOperationCompleted, userState);
        }
        
        private void OnsaveScannedChequesUVOperationCompleted(object arg) {
            if ((this.saveScannedChequesUVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveScannedChequesUVCompleted(this, new saveScannedChequesUVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveScannedChequesOld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveScannedChequesOld(int tranID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode, int floatDays, string Narration) {
            object[] results = this.Invoke("saveScannedChequesOld", new object[] {
                        tranID,
                        transDetails,
                        _presentingBankSortCode,
                        beneficiaryAccountNo,
                        accountTitle,
                        _servicePoint,
                        _autoApprove,
                        _userID,
                        Depositor,
                        PhoneNo,
                        currencycode,
                        floatDays,
                        Narration});
            transDetails = ((chequeDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void saveScannedChequesOldAsync(int tranID, chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode, int floatDays, string Narration) {
            this.saveScannedChequesOldAsync(tranID, transDetails, _presentingBankSortCode, beneficiaryAccountNo, accountTitle, _servicePoint, _autoApprove, _userID, Depositor, PhoneNo, currencycode, floatDays, Narration, null);
        }
        
        /// <remarks/>
        public void saveScannedChequesOldAsync(int tranID, chequeDetails[] transDetails, string _presentingBankSortCode, string beneficiaryAccountNo, string accountTitle, string _servicePoint, bool _autoApprove, string _userID, string Depositor, string PhoneNo, int currencycode, int floatDays, string Narration, object userState) {
            if ((this.saveScannedChequesOldOperationCompleted == null)) {
                this.saveScannedChequesOldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveScannedChequesOldOperationCompleted);
            }
            this.InvokeAsync("saveScannedChequesOld", new object[] {
                        tranID,
                        transDetails,
                        _presentingBankSortCode,
                        beneficiaryAccountNo,
                        accountTitle,
                        _servicePoint,
                        _autoApprove,
                        _userID,
                        Depositor,
                        PhoneNo,
                        currencycode,
                        floatDays,
                        Narration}, this.saveScannedChequesOldOperationCompleted, userState);
        }
        
        private void OnsaveScannedChequesOldOperationCompleted(object arg) {
            if ((this.saveScannedChequesOldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveScannedChequesOldCompleted(this, new saveScannedChequesOldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getConfigurationValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getConfigurationValue(string keyName) {
            object[] results = this.Invoke("getConfigurationValue", new object[] {
                        keyName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getConfigurationValueAsync(string keyName) {
            this.getConfigurationValueAsync(keyName, null);
        }
        
        /// <remarks/>
        public void getConfigurationValueAsync(string keyName, object userState) {
            if ((this.getConfigurationValueOperationCompleted == null)) {
                this.getConfigurationValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConfigurationValueOperationCompleted);
            }
            this.InvokeAsync("getConfigurationValue", new object[] {
                        keyName}, this.getConfigurationValueOperationCompleted, userState);
        }
        
        private void OngetConfigurationValueOperationCompleted(object arg) {
            if ((this.getConfigurationValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConfigurationValueCompleted(this, new getConfigurationValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBankNemonics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBankNemonics(string code) {
            object[] results = this.Invoke("getBankNemonics", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBankNemonicsAsync(string code) {
            this.getBankNemonicsAsync(code, null);
        }
        
        /// <remarks/>
        public void getBankNemonicsAsync(string code, object userState) {
            if ((this.getBankNemonicsOperationCompleted == null)) {
                this.getBankNemonicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBankNemonicsOperationCompleted);
            }
            this.InvokeAsync("getBankNemonics", new object[] {
                        code}, this.getBankNemonicsOperationCompleted, userState);
        }
        
        private void OngetBankNemonicsOperationCompleted(object arg) {
            if ((this.getBankNemonicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBankNemonicsCompleted(this, new getBankNemonicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBrachNnemonics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBrachNnemonics(string branchcode) {
            object[] results = this.Invoke("getBrachNnemonics", new object[] {
                        branchcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBrachNnemonicsAsync(string branchcode) {
            this.getBrachNnemonicsAsync(branchcode, null);
        }
        
        /// <remarks/>
        public void getBrachNnemonicsAsync(string branchcode, object userState) {
            if ((this.getBrachNnemonicsOperationCompleted == null)) {
                this.getBrachNnemonicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBrachNnemonicsOperationCompleted);
            }
            this.InvokeAsync("getBrachNnemonics", new object[] {
                        branchcode}, this.getBrachNnemonicsOperationCompleted, userState);
        }
        
        private void OngetBrachNnemonicsOperationCompleted(object arg) {
            if ((this.getBrachNnemonicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBrachNnemonicsCompleted(this, new getBrachNnemonicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTranID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getTranID() {
            object[] results = this.Invoke("getTranID", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getTranIDAsync() {
            this.getTranIDAsync(null);
        }
        
        /// <remarks/>
        public void getTranIDAsync(object userState) {
            if ((this.getTranIDOperationCompleted == null)) {
                this.getTranIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTranIDOperationCompleted);
            }
            this.InvokeAsync("getTranID", new object[0], this.getTranIDOperationCompleted, userState);
        }
        
        private void OngetTranIDOperationCompleted(object arg) {
            if ((this.getTranIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTranIDCompleted(this, new getTranIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getHeader() {
            object[] results = this.Invoke("getHeader", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getHeaderAsync() {
            this.getHeaderAsync(null);
        }
        
        /// <remarks/>
        public void getHeaderAsync(object userState) {
            if ((this.getHeaderOperationCompleted == null)) {
                this.getHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHeaderOperationCompleted);
            }
            this.InvokeAsync("getHeader", new object[0], this.getHeaderOperationCompleted, userState);
        }
        
        private void OngetHeaderOperationCompleted(object arg) {
            if ((this.getHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHeaderCompleted(this, new getHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValueDateString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValueDateString(string sortCode, string branchcode, System.DateTime instrumentDate, string userid) {
            object[] results = this.Invoke("GetValueDateString", new object[] {
                        sortCode,
                        branchcode,
                        instrumentDate,
                        userid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValueDateStringAsync(string sortCode, string branchcode, System.DateTime instrumentDate, string userid) {
            this.GetValueDateStringAsync(sortCode, branchcode, instrumentDate, userid, null);
        }
        
        /// <remarks/>
        public void GetValueDateStringAsync(string sortCode, string branchcode, System.DateTime instrumentDate, string userid, object userState) {
            if ((this.GetValueDateStringOperationCompleted == null)) {
                this.GetValueDateStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValueDateStringOperationCompleted);
            }
            this.InvokeAsync("GetValueDateString", new object[] {
                        sortCode,
                        branchcode,
                        instrumentDate,
                        userid}, this.GetValueDateStringOperationCompleted, userState);
        }
        
        private void OnGetValueDateStringOperationCompleted(object arg) {
            if ((this.GetValueDateStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValueDateStringCompleted(this, new GetValueDateStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/verifyBankCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string verifyBankCode(string code) {
            object[] results = this.Invoke("verifyBankCode", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void verifyBankCodeAsync(string code) {
            this.verifyBankCodeAsync(code, null);
        }
        
        /// <remarks/>
        public void verifyBankCodeAsync(string code, object userState) {
            if ((this.verifyBankCodeOperationCompleted == null)) {
                this.verifyBankCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyBankCodeOperationCompleted);
            }
            this.InvokeAsync("verifyBankCode", new object[] {
                        code}, this.verifyBankCodeOperationCompleted, userState);
        }
        
        private void OnverifyBankCodeOperationCompleted(object arg) {
            if ((this.verifyBankCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyBankCodeCompleted(this, new verifyBankCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadTransTypeExcemption", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadTransTypeExcemption() {
            object[] results = this.Invoke("LoadTransTypeExcemption", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTransTypeExcemptionAsync() {
            this.LoadTransTypeExcemptionAsync(null);
        }
        
        /// <remarks/>
        public void LoadTransTypeExcemptionAsync(object userState) {
            if ((this.LoadTransTypeExcemptionOperationCompleted == null)) {
                this.LoadTransTypeExcemptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTransTypeExcemptionOperationCompleted);
            }
            this.InvokeAsync("LoadTransTypeExcemption", new object[0], this.LoadTransTypeExcemptionOperationCompleted, userState);
        }
        
        private void OnLoadTransTypeExcemptionOperationCompleted(object arg) {
            if ((this.LoadTransTypeExcemptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTransTypeExcemptionCompleted(this, new LoadTransTypeExcemptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIQAParameters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetIQAParameters() {
            object[] results = this.Invoke("GetIQAParameters", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetIQAParametersAsync() {
            this.GetIQAParametersAsync(null);
        }
        
        /// <remarks/>
        public void GetIQAParametersAsync(object userState) {
            if ((this.GetIQAParametersOperationCompleted == null)) {
                this.GetIQAParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIQAParametersOperationCompleted);
            }
            this.InvokeAsync("GetIQAParameters", new object[0], this.GetIQAParametersOperationCompleted, userState);
        }
        
        private void OnGetIQAParametersOperationCompleted(object arg) {
            if ((this.GetIQAParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIQAParametersCompleted(this, new GetIQAParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validateScanner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool validateScanner(string scannerID) {
            object[] results = this.Invoke("validateScanner", new object[] {
                        scannerID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validateScannerAsync(string scannerID) {
            this.validateScannerAsync(scannerID, null);
        }
        
        /// <remarks/>
        public void validateScannerAsync(string scannerID, object userState) {
            if ((this.validateScannerOperationCompleted == null)) {
                this.validateScannerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateScannerOperationCompleted);
            }
            this.InvokeAsync("validateScanner", new object[] {
                        scannerID}, this.validateScannerOperationCompleted, userState);
        }
        
        private void OnvalidateScannerOperationCompleted(object arg) {
            if ((this.validateScannerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateScannerCompleted(this, new validateScannerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBranches", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getBranches() {
            object[] results = this.Invoke("getBranches", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getBranchesAsync() {
            this.getBranchesAsync(null);
        }
        
        /// <remarks/>
        public void getBranchesAsync(object userState) {
            if ((this.getBranchesOperationCompleted == null)) {
                this.getBranchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBranchesOperationCompleted);
            }
            this.InvokeAsync("getBranches", new object[0], this.getBranchesOperationCompleted, userState);
        }
        
        private void OngetBranchesOperationCompleted(object arg) {
            if ((this.getBranchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBranchesCompleted(this, new getBranchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PassReturnRequestDatatable2ConfirmationPortal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PassReturnRequestDatatable2ConfirmationPortal(System.Data.DataTable table, string userid) {
            this.Invoke("PassReturnRequestDatatable2ConfirmationPortal", new object[] {
                        table,
                        userid});
        }
        
        /// <remarks/>
        public void PassReturnRequestDatatable2ConfirmationPortalAsync(System.Data.DataTable table, string userid) {
            this.PassReturnRequestDatatable2ConfirmationPortalAsync(table, userid, null);
        }
        
        /// <remarks/>
        public void PassReturnRequestDatatable2ConfirmationPortalAsync(System.Data.DataTable table, string userid, object userState) {
            if ((this.PassReturnRequestDatatable2ConfirmationPortalOperationCompleted == null)) {
                this.PassReturnRequestDatatable2ConfirmationPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassReturnRequestDatatable2ConfirmationPortalOperationCompleted);
            }
            this.InvokeAsync("PassReturnRequestDatatable2ConfirmationPortal", new object[] {
                        table,
                        userid}, this.PassReturnRequestDatatable2ConfirmationPortalOperationCompleted, userState);
        }
        
        private void OnPassReturnRequestDatatable2ConfirmationPortalOperationCompleted(object arg) {
            if ((this.PassReturnRequestDatatable2ConfirmationPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassReturnRequestDatatable2ConfirmationPortalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBenName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBenName(string AccountNumber, string Bankcode) {
            object[] results = this.Invoke("getBenName", new object[] {
                        AccountNumber,
                        Bankcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBenNameAsync(string AccountNumber, string Bankcode) {
            this.getBenNameAsync(AccountNumber, Bankcode, null);
        }
        
        /// <remarks/>
        public void getBenNameAsync(string AccountNumber, string Bankcode, object userState) {
            if ((this.getBenNameOperationCompleted == null)) {
                this.getBenNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBenNameOperationCompleted);
            }
            this.InvokeAsync("getBenName", new object[] {
                        AccountNumber,
                        Bankcode}, this.getBenNameOperationCompleted, userState);
        }
        
        private void OngetBenNameOperationCompleted(object arg) {
            if ((this.getBenNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBenNameCompleted(this, new getBenNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Verifimi_BroadcastMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Verifimi_BroadcastMessages(object Details) {
            this.Invoke("Verifimi_BroadcastMessages", new object[] {
                        Details});
        }
        
        /// <remarks/>
        public void Verifimi_BroadcastMessagesAsync(object Details) {
            this.Verifimi_BroadcastMessagesAsync(Details, null);
        }
        
        /// <remarks/>
        public void Verifimi_BroadcastMessagesAsync(object Details, object userState) {
            if ((this.Verifimi_BroadcastMessagesOperationCompleted == null)) {
                this.Verifimi_BroadcastMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifimi_BroadcastMessagesOperationCompleted);
            }
            this.InvokeAsync("Verifimi_BroadcastMessages", new object[] {
                        Details}, this.Verifimi_BroadcastMessagesOperationCompleted, userState);
        }
        
        private void OnVerifimi_BroadcastMessagesOperationCompleted(object arg) {
            if ((this.Verifimi_BroadcastMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Verifimi_BroadcastMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Verifimi_AddCustomerAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Verifimi_AddCustomerAccounts(object data) {
            object[] results = this.Invoke("Verifimi_AddCustomerAccounts", new object[] {
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Verifimi_AddCustomerAccountsAsync(object data) {
            this.Verifimi_AddCustomerAccountsAsync(data, null);
        }
        
        /// <remarks/>
        public void Verifimi_AddCustomerAccountsAsync(object data, object userState) {
            if ((this.Verifimi_AddCustomerAccountsOperationCompleted == null)) {
                this.Verifimi_AddCustomerAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifimi_AddCustomerAccountsOperationCompleted);
            }
            this.InvokeAsync("Verifimi_AddCustomerAccounts", new object[] {
                        data}, this.Verifimi_AddCustomerAccountsOperationCompleted, userState);
        }
        
        private void OnVerifimi_AddCustomerAccountsOperationCompleted(object arg) {
            if ((this.Verifimi_AddCustomerAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Verifimi_AddCustomerAccountsCompleted(this, new Verifimi_AddCustomerAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostNEFTOutwardDoubleEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] PostNEFTOutwardDoubleEntry(System.Data.DataTable dt, string sortCode4branch) {
            object[] results = this.Invoke("PostNEFTOutwardDoubleEntry", new object[] {
                        dt,
                        sortCode4branch});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void PostNEFTOutwardDoubleEntryAsync(System.Data.DataTable dt, string sortCode4branch) {
            this.PostNEFTOutwardDoubleEntryAsync(dt, sortCode4branch, null);
        }
        
        /// <remarks/>
        public void PostNEFTOutwardDoubleEntryAsync(System.Data.DataTable dt, string sortCode4branch, object userState) {
            if ((this.PostNEFTOutwardDoubleEntryOperationCompleted == null)) {
                this.PostNEFTOutwardDoubleEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostNEFTOutwardDoubleEntryOperationCompleted);
            }
            this.InvokeAsync("PostNEFTOutwardDoubleEntry", new object[] {
                        dt,
                        sortCode4branch}, this.PostNEFTOutwardDoubleEntryOperationCompleted, userState);
        }
        
        private void OnPostNEFTOutwardDoubleEntryOperationCompleted(object arg) {
            if ((this.PostNEFTOutwardDoubleEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostNEFTOutwardDoubleEntryCompleted(this, new PostNEFTOutwardDoubleEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostNEFTOutwardDoubleEntry2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PostNEFTOutwardDoubleEntry2(System.Data.DataTable dt, string sortCode4branch) {
            object[] results = this.Invoke("PostNEFTOutwardDoubleEntry2", new object[] {
                        dt,
                        sortCode4branch});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PostNEFTOutwardDoubleEntry2Async(System.Data.DataTable dt, string sortCode4branch) {
            this.PostNEFTOutwardDoubleEntry2Async(dt, sortCode4branch, null);
        }
        
        /// <remarks/>
        public void PostNEFTOutwardDoubleEntry2Async(System.Data.DataTable dt, string sortCode4branch, object userState) {
            if ((this.PostNEFTOutwardDoubleEntry2OperationCompleted == null)) {
                this.PostNEFTOutwardDoubleEntry2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostNEFTOutwardDoubleEntry2OperationCompleted);
            }
            this.InvokeAsync("PostNEFTOutwardDoubleEntry2", new object[] {
                        dt,
                        sortCode4branch}, this.PostNEFTOutwardDoubleEntry2OperationCompleted, userState);
        }
        
        private void OnPostNEFTOutwardDoubleEntry2OperationCompleted(object arg) {
            if ((this.PostNEFTOutwardDoubleEntry2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostNEFTOutwardDoubleEntry2Completed(this, new PostNEFTOutwardDoubleEntry2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostNeftInward", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] PostNeftInward(System.Data.DataTable dt, string sortCode4branch) {
            object[] results = this.Invoke("PostNeftInward", new object[] {
                        dt,
                        sortCode4branch});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void PostNeftInwardAsync(System.Data.DataTable dt, string sortCode4branch) {
            this.PostNeftInwardAsync(dt, sortCode4branch, null);
        }
        
        /// <remarks/>
        public void PostNeftInwardAsync(System.Data.DataTable dt, string sortCode4branch, object userState) {
            if ((this.PostNeftInwardOperationCompleted == null)) {
                this.PostNeftInwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostNeftInwardOperationCompleted);
            }
            this.InvokeAsync("PostNeftInward", new object[] {
                        dt,
                        sortCode4branch}, this.PostNeftInwardOperationCompleted, userState);
        }
        
        private void OnPostNeftInwardOperationCompleted(object arg) {
            if ((this.PostNeftInwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostNeftInwardCompleted(this, new PostNeftInwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBankName(string mcode) {
            object[] results = this.Invoke("GetBankName", new object[] {
                        mcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankNameAsync(string mcode) {
            this.GetBankNameAsync(mcode, null);
        }
        
        /// <remarks/>
        public void GetBankNameAsync(string mcode, object userState) {
            if ((this.GetBankNameOperationCompleted == null)) {
                this.GetBankNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankNameOperationCompleted);
            }
            this.InvokeAsync("GetBankName", new object[] {
                        mcode}, this.GetBankNameOperationCompleted, userState);
        }
        
        private void OnGetBankNameOperationCompleted(object arg) {
            if ((this.GetBankNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankNameCompleted(this, new GetBankNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidDateTime(string dateTime) {
            object[] results = this.Invoke("IsValidDateTime", new object[] {
                        dateTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidDateTimeAsync(string dateTime) {
            this.IsValidDateTimeAsync(dateTime, null);
        }
        
        /// <remarks/>
        public void IsValidDateTimeAsync(string dateTime, object userState) {
            if ((this.IsValidDateTimeOperationCompleted == null)) {
                this.IsValidDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidDateTimeOperationCompleted);
            }
            this.InvokeAsync("IsValidDateTime", new object[] {
                        dateTime}, this.IsValidDateTimeOperationCompleted, userState);
        }
        
        private void OnIsValidDateTimeOperationCompleted(object arg) {
            if ((this.IsValidDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidDateTimeCompleted(this, new IsValidDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/postinwardNeftTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string postinwardNeftTest() {
            object[] results = this.Invoke("postinwardNeftTest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void postinwardNeftTestAsync() {
            this.postinwardNeftTestAsync(null);
        }
        
        /// <remarks/>
        public void postinwardNeftTestAsync(object userState) {
            if ((this.postinwardNeftTestOperationCompleted == null)) {
                this.postinwardNeftTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostinwardNeftTestOperationCompleted);
            }
            this.InvokeAsync("postinwardNeftTest", new object[0], this.postinwardNeftTestOperationCompleted, userState);
        }
        
        private void OnpostinwardNeftTestOperationCompleted(object arg) {
            if ((this.postinwardNeftTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postinwardNeftTestCompleted(this, new postinwardNeftTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestConnection(string sortCode4branch) {
            this.Invoke("TestConnection", new object[] {
                        sortCode4branch});
        }
        
        /// <remarks/>
        public void TestConnectionAsync(string sortCode4branch) {
            this.TestConnectionAsync(sortCode4branch, null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(string sortCode4branch, object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[] {
                        sortCode4branch}, this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendMail() {
            this.Invoke("sendMail", new object[0]);
        }
        
        /// <remarks/>
        public void sendMailAsync() {
            this.sendMailAsync(null);
        }
        
        /// <remarks/>
        public void sendMailAsync(object userState) {
            if ((this.sendMailOperationCompleted == null)) {
                this.sendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailOperationCompleted);
            }
            this.InvokeAsync("sendMail", new object[0], this.sendMailOperationCompleted, userState);
        }
        
        private void OnsendMailOperationCompleted(object arg) {
            if ((this.sendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnInwardPostTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReturnInwardPostTest() {
            object[] results = this.Invoke("ReturnInwardPostTest", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnInwardPostTestAsync() {
            this.ReturnInwardPostTestAsync(null);
        }
        
        /// <remarks/>
        public void ReturnInwardPostTestAsync(object userState) {
            if ((this.ReturnInwardPostTestOperationCompleted == null)) {
                this.ReturnInwardPostTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnInwardPostTestOperationCompleted);
            }
            this.InvokeAsync("ReturnInwardPostTest", new object[0], this.ReturnInwardPostTestOperationCompleted, userState);
        }
        
        private void OnReturnInwardPostTestOperationCompleted(object arg) {
            if ((this.ReturnInwardPostTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnInwardPostTestCompleted(this, new ReturnInwardPostTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateDEReturnRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GenerateDEReturnRequest(System.Data.DataTable dt, string sFilePath, ref string sMsg, bool isIncremental, int session, string sTag) {
            object[] results = this.Invoke("GenerateDEReturnRequest", new object[] {
                        dt,
                        sFilePath,
                        sMsg,
                        isIncremental,
                        session,
                        sTag});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDEReturnRequestAsync(System.Data.DataTable dt, string sFilePath, string sMsg, bool isIncremental, int session, string sTag) {
            this.GenerateDEReturnRequestAsync(dt, sFilePath, sMsg, isIncremental, session, sTag, null);
        }
        
        /// <remarks/>
        public void GenerateDEReturnRequestAsync(System.Data.DataTable dt, string sFilePath, string sMsg, bool isIncremental, int session, string sTag, object userState) {
            if ((this.GenerateDEReturnRequestOperationCompleted == null)) {
                this.GenerateDEReturnRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDEReturnRequestOperationCompleted);
            }
            this.InvokeAsync("GenerateDEReturnRequest", new object[] {
                        dt,
                        sFilePath,
                        sMsg,
                        isIncremental,
                        session,
                        sTag}, this.GenerateDEReturnRequestOperationCompleted, userState);
        }
        
        private void OnGenerateDEReturnRequestOperationCompleted(object arg) {
            if ((this.GenerateDEReturnRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDEReturnRequestCompleted(this, new GenerateDEReturnRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getUserBranch(string username) {
            object[] results = this.Invoke("getUserBranch", new object[] {
                        username});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getUserBranchAsync(string username) {
            this.getUserBranchAsync(username, null);
        }
        
        /// <remarks/>
        public void getUserBranchAsync(string username, object userState) {
            if ((this.getUserBranchOperationCompleted == null)) {
                this.getUserBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserBranchOperationCompleted);
            }
            this.InvokeAsync("getUserBranch", new object[] {
                        username}, this.getUserBranchOperationCompleted, userState);
        }
        
        private void OngetUserBranchOperationCompleted(object arg) {
            if ((this.getUserBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserBranchCompleted(this, new getUserBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateEncryptedSerialNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string generateEncryptedSerialNumber(string serial) {
            object[] results = this.Invoke("generateEncryptedSerialNumber", new object[] {
                        serial});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateEncryptedSerialNumberAsync(string serial) {
            this.generateEncryptedSerialNumberAsync(serial, null);
        }
        
        /// <remarks/>
        public void generateEncryptedSerialNumberAsync(string serial, object userState) {
            if ((this.generateEncryptedSerialNumberOperationCompleted == null)) {
                this.generateEncryptedSerialNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateEncryptedSerialNumberOperationCompleted);
            }
            this.InvokeAsync("generateEncryptedSerialNumber", new object[] {
                        serial}, this.generateEncryptedSerialNumberOperationCompleted, userState);
        }
        
        private void OngenerateEncryptedSerialNumberOperationCompleted(object arg) {
            if ((this.generateEncryptedSerialNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateEncryptedSerialNumberCompleted(this, new generateEncryptedSerialNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/decryptConnectionString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string decryptConnectionString(string con) {
            object[] results = this.Invoke("decryptConnectionString", new object[] {
                        con});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void decryptConnectionStringAsync(string con) {
            this.decryptConnectionStringAsync(con, null);
        }
        
        /// <remarks/>
        public void decryptConnectionStringAsync(string con, object userState) {
            if ((this.decryptConnectionStringOperationCompleted == null)) {
                this.decryptConnectionStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OndecryptConnectionStringOperationCompleted);
            }
            this.InvokeAsync("decryptConnectionString", new object[] {
                        con}, this.decryptConnectionStringOperationCompleted, userState);
        }
        
        private void OndecryptConnectionStringOperationCompleted(object arg) {
            if ((this.decryptConnectionStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.decryptConnectionStringCompleted(this, new decryptConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserTEmplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserTEmplate(string user, string branchcode) {
            object[] results = this.Invoke("GetUserTEmplate", new object[] {
                        user,
                        branchcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTEmplateAsync(string user, string branchcode) {
            this.GetUserTEmplateAsync(user, branchcode, null);
        }
        
        /// <remarks/>
        public void GetUserTEmplateAsync(string user, string branchcode, object userState) {
            if ((this.GetUserTEmplateOperationCompleted == null)) {
                this.GetUserTEmplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTEmplateOperationCompleted);
            }
            this.InvokeAsync("GetUserTEmplate", new object[] {
                        user,
                        branchcode}, this.GetUserTEmplateOperationCompleted, userState);
        }
        
        private void OnGetUserTEmplateOperationCompleted(object arg) {
            if ((this.GetUserTEmplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTEmplateCompleted(this, new GetUserTEmplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEffectiveBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetEffectiveBalance(string acctNo) {
            object[] results = this.Invoke("GetEffectiveBalance", new object[] {
                        acctNo});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetEffectiveBalanceAsync(string acctNo) {
            this.GetEffectiveBalanceAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetEffectiveBalanceAsync(string acctNo, object userState) {
            if ((this.GetEffectiveBalanceOperationCompleted == null)) {
                this.GetEffectiveBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEffectiveBalanceOperationCompleted);
            }
            this.InvokeAsync("GetEffectiveBalance", new object[] {
                        acctNo}, this.GetEffectiveBalanceOperationCompleted, userState);
        }
        
        private void OnGetEffectiveBalanceOperationCompleted(object arg) {
            if ((this.GetEffectiveBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEffectiveBalanceCompleted(this, new GetEffectiveBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePOSTransactionMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public POSTransactionDetails RetrievePOSTransactionMessage(string terminalID, int deposit_withdraw) {
            object[] results = this.Invoke("RetrievePOSTransactionMessage", new object[] {
                        terminalID,
                        deposit_withdraw});
            return ((POSTransactionDetails)(results[0]));
        }
        
        /// <remarks/>
        public void RetrievePOSTransactionMessageAsync(string terminalID, int deposit_withdraw) {
            this.RetrievePOSTransactionMessageAsync(terminalID, deposit_withdraw, null);
        }
        
        /// <remarks/>
        public void RetrievePOSTransactionMessageAsync(string terminalID, int deposit_withdraw, object userState) {
            if ((this.RetrievePOSTransactionMessageOperationCompleted == null)) {
                this.RetrievePOSTransactionMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePOSTransactionMessageOperationCompleted);
            }
            this.InvokeAsync("RetrievePOSTransactionMessage", new object[] {
                        terminalID,
                        deposit_withdraw}, this.RetrievePOSTransactionMessageOperationCompleted, userState);
        }
        
        private void OnRetrievePOSTransactionMessageOperationCompleted(object arg) {
            if ((this.RetrievePOSTransactionMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePOSTransactionMessageCompleted(this, new RetrievePOSTransactionMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsThereMemo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsThereMemo(string acctNo) {
            object[] results = this.Invoke("IsThereMemo", new object[] {
                        acctNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsThereMemoAsync(string acctNo) {
            this.IsThereMemoAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void IsThereMemoAsync(string acctNo, object userState) {
            if ((this.IsThereMemoOperationCompleted == null)) {
                this.IsThereMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsThereMemoOperationCompleted);
            }
            this.InvokeAsync("IsThereMemo", new object[] {
                        acctNo}, this.IsThereMemoOperationCompleted, userState);
        }
        
        private void OnIsThereMemoOperationCompleted(object arg) {
            if ((this.IsThereMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsThereMemoCompleted(this, new IsThereMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountCustomerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAccountDetails getAccountCustomerDetails(string custid, ref FeedMessage Feed) {
            object[] results = this.Invoke("getAccountCustomerDetails", new object[] {
                        custid,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((CustomerAccountDetails)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountCustomerDetailsAsync(string custid, FeedMessage Feed) {
            this.getAccountCustomerDetailsAsync(custid, Feed, null);
        }
        
        /// <remarks/>
        public void getAccountCustomerDetailsAsync(string custid, FeedMessage Feed, object userState) {
            if ((this.getAccountCustomerDetailsOperationCompleted == null)) {
                this.getAccountCustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountCustomerDetailsOperationCompleted);
            }
            this.InvokeAsync("getAccountCustomerDetails", new object[] {
                        custid,
                        Feed}, this.getAccountCustomerDetailsOperationCompleted, userState);
        }
        
        private void OngetAccountCustomerDetailsOperationCompleted(object arg) {
            if ((this.getAccountCustomerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountCustomerDetailsCompleted(this, new getAccountCustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/padLeft", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string padLeft(string sortCode) {
            object[] results = this.Invoke("padLeft", new object[] {
                        sortCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void padLeftAsync(string sortCode) {
            this.padLeftAsync(sortCode, null);
        }
        
        /// <remarks/>
        public void padLeftAsync(string sortCode, object userState) {
            if ((this.padLeftOperationCompleted == null)) {
                this.padLeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpadLeftOperationCompleted);
            }
            this.InvokeAsync("padLeft", new object[] {
                        sortCode}, this.padLeftOperationCompleted, userState);
        }
        
        private void OnpadLeftOperationCompleted(object arg) {
            if ((this.padLeftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.padLeftCompleted(this, new padLeftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/postCash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FeedbackMessage postCash([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref transactionDetails[] cash, CashOperation chequeType, string IpAddress) {
            object[] results = this.Invoke("postCash", new object[] {
                        cash,
                        chequeType,
                        IpAddress});
            cash = ((transactionDetails[])(results[1]));
            return ((FeedbackMessage)(results[0]));
        }
        
        /// <remarks/>
        public void postCashAsync(transactionDetails[] cash, CashOperation chequeType, string IpAddress) {
            this.postCashAsync(cash, chequeType, IpAddress, null);
        }
        
        /// <remarks/>
        public void postCashAsync(transactionDetails[] cash, CashOperation chequeType, string IpAddress, object userState) {
            if ((this.postCashOperationCompleted == null)) {
                this.postCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostCashOperationCompleted);
            }
            this.InvokeAsync("postCash", new object[] {
                        cash,
                        chequeType,
                        IpAddress}, this.postCashOperationCompleted, userState);
        }
        
        private void OnpostCashOperationCompleted(object arg) {
            if ((this.postCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postCashCompleted(this, new postCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/requireChequeDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool requireChequeDate() {
            object[] results = this.Invoke("requireChequeDate", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void requireChequeDateAsync() {
            this.requireChequeDateAsync(null);
        }
        
        /// <remarks/>
        public void requireChequeDateAsync(object userState) {
            if ((this.requireChequeDateOperationCompleted == null)) {
                this.requireChequeDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrequireChequeDateOperationCompleted);
            }
            this.InvokeAsync("requireChequeDate", new object[0], this.requireChequeDateOperationCompleted, userState);
        }
        
        private void OnrequireChequeDateOperationCompleted(object arg) {
            if ((this.requireChequeDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.requireChequeDateCompleted(this, new requireChequeDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validateIfChequeAlreadyExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool validateIfChequeAlreadyExists(string sChqNo, string sSortCode, string sAcctNo, string sTransCode) {
            object[] results = this.Invoke("validateIfChequeAlreadyExists", new object[] {
                        sChqNo,
                        sSortCode,
                        sAcctNo,
                        sTransCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validateIfChequeAlreadyExistsAsync(string sChqNo, string sSortCode, string sAcctNo, string sTransCode) {
            this.validateIfChequeAlreadyExistsAsync(sChqNo, sSortCode, sAcctNo, sTransCode, null);
        }
        
        /// <remarks/>
        public void validateIfChequeAlreadyExistsAsync(string sChqNo, string sSortCode, string sAcctNo, string sTransCode, object userState) {
            if ((this.validateIfChequeAlreadyExistsOperationCompleted == null)) {
                this.validateIfChequeAlreadyExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateIfChequeAlreadyExistsOperationCompleted);
            }
            this.InvokeAsync("validateIfChequeAlreadyExists", new object[] {
                        sChqNo,
                        sSortCode,
                        sAcctNo,
                        sTransCode}, this.validateIfChequeAlreadyExistsOperationCompleted, userState);
        }
        
        private void OnvalidateIfChequeAlreadyExistsOperationCompleted(object arg) {
            if ((this.validateIfChequeAlreadyExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateIfChequeAlreadyExistsCompleted(this, new validateIfChequeAlreadyExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendReturnInwardMailNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendReturnInwardMailNotification(System.Data.DataTable table) {
            this.Invoke("sendReturnInwardMailNotification", new object[] {
                        table});
        }
        
        /// <remarks/>
        public void sendReturnInwardMailNotificationAsync(System.Data.DataTable table) {
            this.sendReturnInwardMailNotificationAsync(table, null);
        }
        
        /// <remarks/>
        public void sendReturnInwardMailNotificationAsync(System.Data.DataTable table, object userState) {
            if ((this.sendReturnInwardMailNotificationOperationCompleted == null)) {
                this.sendReturnInwardMailNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendReturnInwardMailNotificationOperationCompleted);
            }
            this.InvokeAsync("sendReturnInwardMailNotification", new object[] {
                        table}, this.sendReturnInwardMailNotificationOperationCompleted, userState);
        }
        
        private void OnsendReturnInwardMailNotificationOperationCompleted(object arg) {
            if ((this.sendReturnInwardMailNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendReturnInwardMailNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserCurrencies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ISOCurrency[] getUserCurrencies(string userID) {
            object[] results = this.Invoke("getUserCurrencies", new object[] {
                        userID});
            return ((ISOCurrency[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserCurrenciesAsync(string userID) {
            this.getUserCurrenciesAsync(userID, null);
        }
        
        /// <remarks/>
        public void getUserCurrenciesAsync(string userID, object userState) {
            if ((this.getUserCurrenciesOperationCompleted == null)) {
                this.getUserCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserCurrenciesOperationCompleted);
            }
            this.InvokeAsync("getUserCurrencies", new object[] {
                        userID}, this.getUserCurrenciesOperationCompleted, userState);
        }
        
        private void OngetUserCurrenciesOperationCompleted(object arg) {
            if ((this.getUserCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCurrenciesCompleted(this, new getUserCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/postInternalCheque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool postInternalCheque(string sSortCode, string CRAccountNumber, string DRAccountNumber, double dAmount, string sRemarks, int iChequeNumber) {
            object[] results = this.Invoke("postInternalCheque", new object[] {
                        sSortCode,
                        CRAccountNumber,
                        DRAccountNumber,
                        dAmount,
                        sRemarks,
                        iChequeNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void postInternalChequeAsync(string sSortCode, string CRAccountNumber, string DRAccountNumber, double dAmount, string sRemarks, int iChequeNumber) {
            this.postInternalChequeAsync(sSortCode, CRAccountNumber, DRAccountNumber, dAmount, sRemarks, iChequeNumber, null);
        }
        
        /// <remarks/>
        public void postInternalChequeAsync(string sSortCode, string CRAccountNumber, string DRAccountNumber, double dAmount, string sRemarks, int iChequeNumber, object userState) {
            if ((this.postInternalChequeOperationCompleted == null)) {
                this.postInternalChequeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostInternalChequeOperationCompleted);
            }
            this.InvokeAsync("postInternalCheque", new object[] {
                        sSortCode,
                        CRAccountNumber,
                        DRAccountNumber,
                        dAmount,
                        sRemarks,
                        iChequeNumber}, this.postInternalChequeOperationCompleted, userState);
        }
        
        private void OnpostInternalChequeOperationCompleted(object arg) {
            if ((this.postInternalChequeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postInternalChequeCompleted(this, new postInternalChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAccountTitle(string accountNumber, ref FeedMessage Feed) {
            object[] results = this.Invoke("getAccountTitle", new object[] {
                        accountNumber,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountTitleAsync(string accountNumber, FeedMessage Feed) {
            this.getAccountTitleAsync(accountNumber, Feed, null);
        }
        
        /// <remarks/>
        public void getAccountTitleAsync(string accountNumber, FeedMessage Feed, object userState) {
            if ((this.getAccountTitleOperationCompleted == null)) {
                this.getAccountTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountTitleOperationCompleted);
            }
            this.InvokeAsync("getAccountTitle", new object[] {
                        accountNumber,
                        Feed}, this.getAccountTitleOperationCompleted, userState);
        }
        
        private void OngetAccountTitleOperationCompleted(object arg) {
            if ((this.getAccountTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountTitleCompleted(this, new getAccountTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerAccountList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCustomerAccountList(ref FeedMessage Feed) {
            object[] results = this.Invoke("getCustomerAccountList", new object[] {
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAccountListAsync(FeedMessage Feed) {
            this.getCustomerAccountListAsync(Feed, null);
        }
        
        /// <remarks/>
        public void getCustomerAccountListAsync(FeedMessage Feed, object userState) {
            if ((this.getCustomerAccountListOperationCompleted == null)) {
                this.getCustomerAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerAccountListOperationCompleted);
            }
            this.InvokeAsync("getCustomerAccountList", new object[] {
                        Feed}, this.getCustomerAccountListOperationCompleted, userState);
        }
        
        private void OngetCustomerAccountListOperationCompleted(object arg) {
            if ((this.getCustomerAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerAccountListCompleted(this, new getCustomerAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerAccountDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CUSTACCOUNT getCustomerAccountDetails(string accountNumber, ref FeedMessage Feed) {
            object[] results = this.Invoke("getCustomerAccountDetails", new object[] {
                        accountNumber,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((CUSTACCOUNT)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAccountDetailsAsync(string accountNumber, FeedMessage Feed) {
            this.getCustomerAccountDetailsAsync(accountNumber, Feed, null);
        }
        
        /// <remarks/>
        public void getCustomerAccountDetailsAsync(string accountNumber, FeedMessage Feed, object userState) {
            if ((this.getCustomerAccountDetailsOperationCompleted == null)) {
                this.getCustomerAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("getCustomerAccountDetails", new object[] {
                        accountNumber,
                        Feed}, this.getCustomerAccountDetailsOperationCompleted, userState);
        }
        
        private void OngetCustomerAccountDetailsOperationCompleted(object arg) {
            if ((this.getCustomerAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerAccountDetailsCompleted(this, new getCustomerAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerAccountDetails2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CUSTACCOUNT getCustomerAccountDetails2(string accountNumber) {
            object[] results = this.Invoke("getCustomerAccountDetails2", new object[] {
                        accountNumber});
            return ((CUSTACCOUNT)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAccountDetails2Async(string accountNumber) {
            this.getCustomerAccountDetails2Async(accountNumber, null);
        }
        
        /// <remarks/>
        public void getCustomerAccountDetails2Async(string accountNumber, object userState) {
            if ((this.getCustomerAccountDetails2OperationCompleted == null)) {
                this.getCustomerAccountDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerAccountDetails2OperationCompleted);
            }
            this.InvokeAsync("getCustomerAccountDetails2", new object[] {
                        accountNumber}, this.getCustomerAccountDetails2OperationCompleted, userState);
        }
        
        private void OngetCustomerAccountDetails2OperationCompleted(object arg) {
            if ((this.getCustomerAccountDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerAccountDetails2Completed(this, new getCustomerAccountDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostJournal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostJournal([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] JournalStruct[] journals, AuditDatas data, ref FeedMessage feedback) {
            object[] results = this.Invoke("PostJournal", new object[] {
                        journals,
                        data,
                        feedback});
            feedback = ((FeedMessage)(results[0]));
        }
        
        /// <remarks/>
        public void PostJournalAsync(JournalStruct[] journals, AuditDatas data, FeedMessage feedback) {
            this.PostJournalAsync(journals, data, feedback, null);
        }
        
        /// <remarks/>
        public void PostJournalAsync(JournalStruct[] journals, AuditDatas data, FeedMessage feedback, object userState) {
            if ((this.PostJournalOperationCompleted == null)) {
                this.PostJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostJournalOperationCompleted);
            }
            this.InvokeAsync("PostJournal", new object[] {
                        journals,
                        data,
                        feedback}, this.PostJournalOperationCompleted, userState);
        }
        
        private void OnPostJournalOperationCompleted(object arg) {
            if ((this.PostJournalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostJournalCompleted(this, new PostJournalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerAccountBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerBalances getCustomerAccountBalance(string accountNumber, ref FeedMessage Feed) {
            object[] results = this.Invoke("getCustomerAccountBalance", new object[] {
                        accountNumber,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((CustomerBalances)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAccountBalanceAsync(string accountNumber, FeedMessage Feed) {
            this.getCustomerAccountBalanceAsync(accountNumber, Feed, null);
        }
        
        /// <remarks/>
        public void getCustomerAccountBalanceAsync(string accountNumber, FeedMessage Feed, object userState) {
            if ((this.getCustomerAccountBalanceOperationCompleted == null)) {
                this.getCustomerAccountBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerAccountBalanceOperationCompleted);
            }
            this.InvokeAsync("getCustomerAccountBalance", new object[] {
                        accountNumber,
                        Feed}, this.getCustomerAccountBalanceOperationCompleted, userState);
        }
        
        private void OngetCustomerAccountBalanceOperationCompleted(object arg) {
            if ((this.getCustomerAccountBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerAccountBalanceCompleted(this, new getCustomerAccountBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkCustomerAccountExistence", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkCustomerAccountExistence(string accountNumber, ref FeedMessage Feed) {
            object[] results = this.Invoke("checkCustomerAccountExistence", new object[] {
                        accountNumber,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkCustomerAccountExistenceAsync(string accountNumber, FeedMessage Feed) {
            this.checkCustomerAccountExistenceAsync(accountNumber, Feed, null);
        }
        
        /// <remarks/>
        public void checkCustomerAccountExistenceAsync(string accountNumber, FeedMessage Feed, object userState) {
            if ((this.checkCustomerAccountExistenceOperationCompleted == null)) {
                this.checkCustomerAccountExistenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckCustomerAccountExistenceOperationCompleted);
            }
            this.InvokeAsync("checkCustomerAccountExistence", new object[] {
                        accountNumber,
                        Feed}, this.checkCustomerAccountExistenceOperationCompleted, userState);
        }
        
        private void OncheckCustomerAccountExistenceOperationCompleted(object arg) {
            if ((this.checkCustomerAccountExistenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkCustomerAccountExistenceCompleted(this, new checkCustomerAccountExistenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkCustomerAccountExistence2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkCustomerAccountExistence2(string accountNumber) {
            object[] results = this.Invoke("checkCustomerAccountExistence2", new object[] {
                        accountNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkCustomerAccountExistence2Async(string accountNumber) {
            this.checkCustomerAccountExistence2Async(accountNumber, null);
        }
        
        /// <remarks/>
        public void checkCustomerAccountExistence2Async(string accountNumber, object userState) {
            if ((this.checkCustomerAccountExistence2OperationCompleted == null)) {
                this.checkCustomerAccountExistence2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckCustomerAccountExistence2OperationCompleted);
            }
            this.InvokeAsync("checkCustomerAccountExistence2", new object[] {
                        accountNumber}, this.checkCustomerAccountExistence2OperationCompleted, userState);
        }
        
        private void OncheckCustomerAccountExistence2OperationCompleted(object arg) {
            if ((this.checkCustomerAccountExistence2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkCustomerAccountExistence2Completed(this, new checkCustomerAccountExistence2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGLAccountList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getGLAccountList(ref FeedMessage Feed) {
            object[] results = this.Invoke("getGLAccountList", new object[] {
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getGLAccountListAsync(FeedMessage Feed) {
            this.getGLAccountListAsync(Feed, null);
        }
        
        /// <remarks/>
        public void getGLAccountListAsync(FeedMessage Feed, object userState) {
            if ((this.getGLAccountListOperationCompleted == null)) {
                this.getGLAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGLAccountListOperationCompleted);
            }
            this.InvokeAsync("getGLAccountList", new object[] {
                        Feed}, this.getGLAccountListOperationCompleted, userState);
        }
        
        private void OngetGLAccountListOperationCompleted(object arg) {
            if ((this.getGLAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGLAccountListCompleted(this, new getGLAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGLAccountDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GLAccounts getGLAccountDetails(string accountNumber, ref FeedMessage Feed) {
            object[] results = this.Invoke("getGLAccountDetails", new object[] {
                        accountNumber,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((GLAccounts)(results[0]));
        }
        
        /// <remarks/>
        public void getGLAccountDetailsAsync(string accountNumber, FeedMessage Feed) {
            this.getGLAccountDetailsAsync(accountNumber, Feed, null);
        }
        
        /// <remarks/>
        public void getGLAccountDetailsAsync(string accountNumber, FeedMessage Feed, object userState) {
            if ((this.getGLAccountDetailsOperationCompleted == null)) {
                this.getGLAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGLAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("getGLAccountDetails", new object[] {
                        accountNumber,
                        Feed}, this.getGLAccountDetailsOperationCompleted, userState);
        }
        
        private void OngetGLAccountDetailsOperationCompleted(object arg) {
            if ((this.getGLAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGLAccountDetailsCompleted(this, new getGLAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGLAccountBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getGLAccountBalance(string accountNumber, ref FeedMessage Feed) {
            object[] results = this.Invoke("getGLAccountBalance", new object[] {
                        accountNumber,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getGLAccountBalanceAsync(string accountNumber, FeedMessage Feed) {
            this.getGLAccountBalanceAsync(accountNumber, Feed, null);
        }
        
        /// <remarks/>
        public void getGLAccountBalanceAsync(string accountNumber, FeedMessage Feed, object userState) {
            if ((this.getGLAccountBalanceOperationCompleted == null)) {
                this.getGLAccountBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGLAccountBalanceOperationCompleted);
            }
            this.InvokeAsync("getGLAccountBalance", new object[] {
                        accountNumber,
                        Feed}, this.getGLAccountBalanceOperationCompleted, userState);
        }
        
        private void OngetGLAccountBalanceOperationCompleted(object arg) {
            if ((this.getGLAccountBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGLAccountBalanceCompleted(this, new getGLAccountBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getACustomerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDetail getACustomerDetails(string custid, ref FeedMessage Feed) {
            object[] results = this.Invoke("getACustomerDetails", new object[] {
                        custid,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((CustomerDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getACustomerDetailsAsync(string custid, FeedMessage Feed) {
            this.getACustomerDetailsAsync(custid, Feed, null);
        }
        
        /// <remarks/>
        public void getACustomerDetailsAsync(string custid, FeedMessage Feed, object userState) {
            if ((this.getACustomerDetailsOperationCompleted == null)) {
                this.getACustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetACustomerDetailsOperationCompleted);
            }
            this.InvokeAsync("getACustomerDetails", new object[] {
                        custid,
                        Feed}, this.getACustomerDetailsOperationCompleted, userState);
        }
        
        private void OngetACustomerDetailsOperationCompleted(object arg) {
            if ((this.getACustomerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getACustomerDetailsCompleted(this, new getACustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getExternalRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getExternalRole() {
            object[] results = this.Invoke("getExternalRole", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getExternalRoleAsync() {
            this.getExternalRoleAsync(null);
        }
        
        /// <remarks/>
        public void getExternalRoleAsync(object userState) {
            if ((this.getExternalRoleOperationCompleted == null)) {
                this.getExternalRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExternalRoleOperationCompleted);
            }
            this.InvokeAsync("getExternalRole", new object[0], this.getExternalRoleOperationCompleted, userState);
        }
        
        private void OngetExternalRoleOperationCompleted(object arg) {
            if ((this.getExternalRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExternalRoleCompleted(this, new getExternalRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticatefromCBA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AuthenticatefromCBA(string username) {
            object[] results = this.Invoke("AuthenticatefromCBA", new object[] {
                        username});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticatefromCBAAsync(string username) {
            this.AuthenticatefromCBAAsync(username, null);
        }
        
        /// <remarks/>
        public void AuthenticatefromCBAAsync(string username, object userState) {
            if ((this.AuthenticatefromCBAOperationCompleted == null)) {
                this.AuthenticatefromCBAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticatefromCBAOperationCompleted);
            }
            this.InvokeAsync("AuthenticatefromCBA", new object[] {
                        username}, this.AuthenticatefromCBAOperationCompleted, userState);
        }
        
        private void OnAuthenticatefromCBAOperationCompleted(object arg) {
            if ((this.AuthenticatefromCBACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticatefromCBACompleted(this, new AuthenticatefromCBACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGLAccountListofACurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getGLAccountListofACurrency(int ISOCode, ref FeedMessage Feed) {
            object[] results = this.Invoke("getGLAccountListofACurrency", new object[] {
                        ISOCode,
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getGLAccountListofACurrencyAsync(int ISOCode, FeedMessage Feed) {
            this.getGLAccountListofACurrencyAsync(ISOCode, Feed, null);
        }
        
        /// <remarks/>
        public void getGLAccountListofACurrencyAsync(int ISOCode, FeedMessage Feed, object userState) {
            if ((this.getGLAccountListofACurrencyOperationCompleted == null)) {
                this.getGLAccountListofACurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGLAccountListofACurrencyOperationCompleted);
            }
            this.InvokeAsync("getGLAccountListofACurrency", new object[] {
                        ISOCode,
                        Feed}, this.getGLAccountListofACurrencyOperationCompleted, userState);
        }
        
        private void OngetGLAccountListofACurrencyOperationCompleted(object arg) {
            if ((this.getGLAccountListofACurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGLAccountListofACurrencyCompleted(this, new getGLAccountListofACurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_CA_GL_AccountList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable get_CA_GL_AccountList(ref FeedMessage Feed) {
            object[] results = this.Invoke("get_CA_GL_AccountList", new object[] {
                        Feed});
            Feed = ((FeedMessage)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void get_CA_GL_AccountListAsync(FeedMessage Feed) {
            this.get_CA_GL_AccountListAsync(Feed, null);
        }
        
        /// <remarks/>
        public void get_CA_GL_AccountListAsync(FeedMessage Feed, object userState) {
            if ((this.get_CA_GL_AccountListOperationCompleted == null)) {
                this.get_CA_GL_AccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_CA_GL_AccountListOperationCompleted);
            }
            this.InvokeAsync("get_CA_GL_AccountList", new object[] {
                        Feed}, this.get_CA_GL_AccountListOperationCompleted, userState);
        }
        
        private void Onget_CA_GL_AccountListOperationCompleted(object arg) {
            if ((this.get_CA_GL_AccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_CA_GL_AccountListCompleted(this, new get_CA_GL_AccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountsFromPAN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAccountsFromPAN(string PAN) {
            object[] results = this.Invoke("getAccountsFromPAN", new object[] {
                        PAN});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountsFromPANAsync(string PAN) {
            this.getAccountsFromPANAsync(PAN, null);
        }
        
        /// <remarks/>
        public void getAccountsFromPANAsync(string PAN, object userState) {
            if ((this.getAccountsFromPANOperationCompleted == null)) {
                this.getAccountsFromPANOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountsFromPANOperationCompleted);
            }
            this.InvokeAsync("getAccountsFromPAN", new object[] {
                        PAN}, this.getAccountsFromPANOperationCompleted, userState);
        }
        
        private void OngetAccountsFromPANOperationCompleted(object arg) {
            if ((this.getAccountsFromPANCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountsFromPANCompleted(this, new getAccountsFromPANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDrawalLimit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal getDrawalLimit(string user, int curr, int branchcode, Operation ops) {
            object[] results = this.Invoke("getDrawalLimit", new object[] {
                        user,
                        curr,
                        branchcode,
                        ops});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void getDrawalLimitAsync(string user, int curr, int branchcode, Operation ops) {
            this.getDrawalLimitAsync(user, curr, branchcode, ops, null);
        }
        
        /// <remarks/>
        public void getDrawalLimitAsync(string user, int curr, int branchcode, Operation ops, object userState) {
            if ((this.getDrawalLimitOperationCompleted == null)) {
                this.getDrawalLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDrawalLimitOperationCompleted);
            }
            this.InvokeAsync("getDrawalLimit", new object[] {
                        user,
                        curr,
                        branchcode,
                        ops}, this.getDrawalLimitOperationCompleted, userState);
        }
        
        private void OngetDrawalLimitOperationCompleted(object arg) {
            if ((this.getDrawalLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDrawalLimitCompleted(this, new getDrawalLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValiDateUserTill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValiDateUserTill(string userid, string branchcode) {
            object[] results = this.Invoke("ValiDateUserTill", new object[] {
                        userid,
                        branchcode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValiDateUserTillAsync(string userid, string branchcode) {
            this.ValiDateUserTillAsync(userid, branchcode, null);
        }
        
        /// <remarks/>
        public void ValiDateUserTillAsync(string userid, string branchcode, object userState) {
            if ((this.ValiDateUserTillOperationCompleted == null)) {
                this.ValiDateUserTillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValiDateUserTillOperationCompleted);
            }
            this.InvokeAsync("ValiDateUserTill", new object[] {
                        userid,
                        branchcode}, this.ValiDateUserTillOperationCompleted, userState);
        }
        
        private void OnValiDateUserTillOperationCompleted(object arg) {
            if ((this.ValiDateUserTillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValiDateUserTillCompleted(this, new ValiDateUserTillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSeverity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSeverity(string AcctNo) {
            object[] results = this.Invoke("getSeverity", new object[] {
                        AcctNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSeverityAsync(string AcctNo) {
            this.getSeverityAsync(AcctNo, null);
        }
        
        /// <remarks/>
        public void getSeverityAsync(string AcctNo, object userState) {
            if ((this.getSeverityOperationCompleted == null)) {
                this.getSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSeverityOperationCompleted);
            }
            this.InvokeAsync("getSeverity", new object[] {
                        AcctNo}, this.getSeverityOperationCompleted, userState);
        }
        
        private void OngetSeverityOperationCompleted(object arg) {
            if ((this.getSeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSeverityCompleted(this, new getSeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountNameFromPAN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAccountNameFromPAN(string PAN) {
            object[] results = this.Invoke("getAccountNameFromPAN", new object[] {
                        PAN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountNameFromPANAsync(string PAN) {
            this.getAccountNameFromPANAsync(PAN, null);
        }
        
        /// <remarks/>
        public void getAccountNameFromPANAsync(string PAN, object userState) {
            if ((this.getAccountNameFromPANOperationCompleted == null)) {
                this.getAccountNameFromPANOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountNameFromPANOperationCompleted);
            }
            this.InvokeAsync("getAccountNameFromPAN", new object[] {
                        PAN}, this.getAccountNameFromPANOperationCompleted, userState);
        }
        
        private void OngetAccountNameFromPANOperationCompleted(object arg) {
            if ((this.getAccountNameFromPANCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountNameFromPANCompleted(this, new getAccountNameFromPANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validateAccountNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool validateAccountNo(string accountNumber) {
            object[] results = this.Invoke("validateAccountNo", new object[] {
                        accountNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validateAccountNoAsync(string accountNumber) {
            this.validateAccountNoAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void validateAccountNoAsync(string accountNumber, object userState) {
            if ((this.validateAccountNoOperationCompleted == null)) {
                this.validateAccountNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateAccountNoOperationCompleted);
            }
            this.InvokeAsync("validateAccountNo", new object[] {
                        accountNumber}, this.validateAccountNoOperationCompleted, userState);
        }
        
        private void OnvalidateAccountNoOperationCompleted(object arg) {
            if ((this.validateAccountNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateAccountNoCompleted(this, new validateAccountNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validateNubanAcct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool validateNubanAcct(string Acct, string bankcode) {
            object[] results = this.Invoke("validateNubanAcct", new object[] {
                        Acct,
                        bankcode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validateNubanAcctAsync(string Acct, string bankcode) {
            this.validateNubanAcctAsync(Acct, bankcode, null);
        }
        
        /// <remarks/>
        public void validateNubanAcctAsync(string Acct, string bankcode, object userState) {
            if ((this.validateNubanAcctOperationCompleted == null)) {
                this.validateNubanAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateNubanAcctOperationCompleted);
            }
            this.InvokeAsync("validateNubanAcct", new object[] {
                        Acct,
                        bankcode}, this.validateNubanAcctOperationCompleted, userState);
        }
        
        private void OnvalidateNubanAcctOperationCompleted(object arg) {
            if ((this.validateNubanAcctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateNubanAcctCompleted(this, new validateNubanAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/useUBAN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool useUBAN() {
            object[] results = this.Invoke("useUBAN", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void useUBANAsync() {
            this.useUBANAsync(null);
        }
        
        /// <remarks/>
        public void useUBANAsync(object userState) {
            if ((this.useUBANOperationCompleted == null)) {
                this.useUBANOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuseUBANOperationCompleted);
            }
            this.InvokeAsync("useUBAN", new object[0], this.useUBANOperationCompleted, userState);
        }
        
        private void OnuseUBANOperationCompleted(object arg) {
            if ((this.useUBANCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.useUBANCompleted(this, new useUBANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkAccountNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkAccountNo(string accountNo) {
            object[] results = this.Invoke("checkAccountNo", new object[] {
                        accountNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkAccountNoAsync(string accountNo) {
            this.checkAccountNoAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void checkAccountNoAsync(string accountNo, object userState) {
            if ((this.checkAccountNoOperationCompleted == null)) {
                this.checkAccountNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAccountNoOperationCompleted);
            }
            this.InvokeAsync("checkAccountNo", new object[] {
                        accountNo}, this.checkAccountNoOperationCompleted, userState);
        }
        
        private void OncheckAccountNoOperationCompleted(object arg) {
            if ((this.checkAccountNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAccountNoCompleted(this, new checkAccountNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkSortCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkSortCode(string sortCode) {
            object[] results = this.Invoke("checkSortCode", new object[] {
                        sortCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkSortCodeAsync(string sortCode) {
            this.checkSortCodeAsync(sortCode, null);
        }
        
        /// <remarks/>
        public void checkSortCodeAsync(string sortCode, object userState) {
            if ((this.checkSortCodeOperationCompleted == null)) {
                this.checkSortCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSortCodeOperationCompleted);
            }
            this.InvokeAsync("checkSortCode", new object[] {
                        sortCode}, this.checkSortCodeOperationCompleted, userState);
        }
        
        private void OncheckSortCodeOperationCompleted(object arg) {
            if ((this.checkSortCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSortCodeCompleted(this, new checkSortCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateDoubleEntriesMultiple", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool generateDoubleEntriesMultiple(System.Data.DataTable dtCheque, System.Data.DataTable dtMc, System.Data.DataTable dtEmptyData, string sFilePath, ref string sMsg, bool isIncremental, int session) {
            object[] results = this.Invoke("generateDoubleEntriesMultiple", new object[] {
                        dtCheque,
                        dtMc,
                        dtEmptyData,
                        sFilePath,
                        sMsg,
                        isIncremental,
                        session});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void generateDoubleEntriesMultipleAsync(System.Data.DataTable dtCheque, System.Data.DataTable dtMc, System.Data.DataTable dtEmptyData, string sFilePath, string sMsg, bool isIncremental, int session) {
            this.generateDoubleEntriesMultipleAsync(dtCheque, dtMc, dtEmptyData, sFilePath, sMsg, isIncremental, session, null);
        }
        
        /// <remarks/>
        public void generateDoubleEntriesMultipleAsync(System.Data.DataTable dtCheque, System.Data.DataTable dtMc, System.Data.DataTable dtEmptyData, string sFilePath, string sMsg, bool isIncremental, int session, object userState) {
            if ((this.generateDoubleEntriesMultipleOperationCompleted == null)) {
                this.generateDoubleEntriesMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateDoubleEntriesMultipleOperationCompleted);
            }
            this.InvokeAsync("generateDoubleEntriesMultiple", new object[] {
                        dtCheque,
                        dtMc,
                        dtEmptyData,
                        sFilePath,
                        sMsg,
                        isIncremental,
                        session}, this.generateDoubleEntriesMultipleOperationCompleted, userState);
        }
        
        private void OngenerateDoubleEntriesMultipleOperationCompleted(object arg) {
            if ((this.generateDoubleEntriesMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateDoubleEntriesMultipleCompleted(this, new generateDoubleEntriesMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateDoubleEntries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool generateDoubleEntries(System.Data.DataTable dt, string sFilePath, ref string sMsg, bool isIncremental, int session) {
            object[] results = this.Invoke("generateDoubleEntries", new object[] {
                        dt,
                        sFilePath,
                        sMsg,
                        isIncremental,
                        session});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void generateDoubleEntriesAsync(System.Data.DataTable dt, string sFilePath, string sMsg, bool isIncremental, int session) {
            this.generateDoubleEntriesAsync(dt, sFilePath, sMsg, isIncremental, session, null);
        }
        
        /// <remarks/>
        public void generateDoubleEntriesAsync(System.Data.DataTable dt, string sFilePath, string sMsg, bool isIncremental, int session, object userState) {
            if ((this.generateDoubleEntriesOperationCompleted == null)) {
                this.generateDoubleEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateDoubleEntriesOperationCompleted);
            }
            this.InvokeAsync("generateDoubleEntries", new object[] {
                        dt,
                        sFilePath,
                        sMsg,
                        isIncremental,
                        session}, this.generateDoubleEntriesOperationCompleted, userState);
        }
        
        private void OngenerateDoubleEntriesOperationCompleted(object arg) {
            if ((this.generateDoubleEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateDoubleEntriesCompleted(this, new generateDoubleEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDetails getCustomerDetails(string accountNumber) {
            object[] results = this.Invoke("getCustomerDetails", new object[] {
                        accountNumber});
            return ((CustomerDetails)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerDetailsAsync(string accountNumber) {
            this.getCustomerDetailsAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void getCustomerDetailsAsync(string accountNumber, object userState) {
            if ((this.getCustomerDetailsOperationCompleted == null)) {
                this.getCustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerDetailsOperationCompleted);
            }
            this.InvokeAsync("getCustomerDetails", new object[] {
                        accountNumber}, this.getCustomerDetailsOperationCompleted, userState);
        }
        
        private void OngetCustomerDetailsOperationCompleted(object arg) {
            if ((this.getCustomerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerDetailsCompleted(this, new getCustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerDetails2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDetails getCustomerDetails2(string accountNumber, string sSortCode) {
            object[] results = this.Invoke("getCustomerDetails2", new object[] {
                        accountNumber,
                        sSortCode});
            return ((CustomerDetails)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerDetails2Async(string accountNumber, string sSortCode) {
            this.getCustomerDetails2Async(accountNumber, sSortCode, null);
        }
        
        /// <remarks/>
        public void getCustomerDetails2Async(string accountNumber, string sSortCode, object userState) {
            if ((this.getCustomerDetails2OperationCompleted == null)) {
                this.getCustomerDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerDetails2OperationCompleted);
            }
            this.InvokeAsync("getCustomerDetails2", new object[] {
                        accountNumber,
                        sSortCode}, this.getCustomerDetails2OperationCompleted, userState);
        }
        
        private void OngetCustomerDetails2OperationCompleted(object arg) {
            if ((this.getCustomerDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerDetails2Completed(this, new getCustomerDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuotedString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QuotedString() {
            object[] results = this.Invoke("QuotedString", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuotedStringAsync() {
            this.QuotedStringAsync(null);
        }
        
        /// <remarks/>
        public void QuotedStringAsync(object userState) {
            if ((this.QuotedStringOperationCompleted == null)) {
                this.QuotedStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuotedStringOperationCompleted);
            }
            this.InvokeAsync("QuotedString", new object[0], this.QuotedStringOperationCompleted, userState);
        }
        
        private void OnQuotedStringOperationCompleted(object arg) {
            if ((this.QuotedStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuotedStringCompleted(this, new QuotedStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerBVNOnIBS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCustomerBVNOnIBS(string BankCode, string AcctNo, int type) {
            object[] results = this.Invoke("getCustomerBVNOnIBS", new object[] {
                        BankCode,
                        AcctNo,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerBVNOnIBSAsync(string BankCode, string AcctNo, int type) {
            this.getCustomerBVNOnIBSAsync(BankCode, AcctNo, type, null);
        }
        
        /// <remarks/>
        public void getCustomerBVNOnIBSAsync(string BankCode, string AcctNo, int type, object userState) {
            if ((this.getCustomerBVNOnIBSOperationCompleted == null)) {
                this.getCustomerBVNOnIBSOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerBVNOnIBSOperationCompleted);
            }
            this.InvokeAsync("getCustomerBVNOnIBS", new object[] {
                        BankCode,
                        AcctNo,
                        type}, this.getCustomerBVNOnIBSOperationCompleted, userState);
        }
        
        private void OngetCustomerBVNOnIBSOperationCompleted(object arg) {
            if ((this.getCustomerBVNOnIBSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerBVNOnIBSCompleted(this, new getCustomerBVNOnIBSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountTitleOnly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAccountTitleOnly(ref string accountNumber, string sSortCode) {
            object[] results = this.Invoke("getAccountTitleOnly", new object[] {
                        accountNumber,
                        sSortCode});
            accountNumber = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountTitleOnlyAsync(string accountNumber, string sSortCode) {
            this.getAccountTitleOnlyAsync(accountNumber, sSortCode, null);
        }
        
        /// <remarks/>
        public void getAccountTitleOnlyAsync(string accountNumber, string sSortCode, object userState) {
            if ((this.getAccountTitleOnlyOperationCompleted == null)) {
                this.getAccountTitleOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountTitleOnlyOperationCompleted);
            }
            this.InvokeAsync("getAccountTitleOnly", new object[] {
                        accountNumber,
                        sSortCode}, this.getAccountTitleOnlyOperationCompleted, userState);
        }
        
        private void OngetAccountTitleOnlyOperationCompleted(object arg) {
            if ((this.getAccountTitleOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountTitleOnlyCompleted(this, new getAccountTitleOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomerDetailsFromCBA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCustomerDetailsFromCBA(string accountNumber, string sSortCode) {
            object[] results = this.Invoke("UpdateCustomerDetailsFromCBA", new object[] {
                        accountNumber,
                        sSortCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerDetailsFromCBAAsync(string accountNumber, string sSortCode) {
            this.UpdateCustomerDetailsFromCBAAsync(accountNumber, sSortCode, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerDetailsFromCBAAsync(string accountNumber, string sSortCode, object userState) {
            if ((this.UpdateCustomerDetailsFromCBAOperationCompleted == null)) {
                this.UpdateCustomerDetailsFromCBAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerDetailsFromCBAOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerDetailsFromCBA", new object[] {
                        accountNumber,
                        sSortCode}, this.UpdateCustomerDetailsFromCBAOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerDetailsFromCBAOperationCompleted(object arg) {
            if ((this.UpdateCustomerDetailsFromCBACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerDetailsFromCBACompleted(this, new UpdateCustomerDetailsFromCBACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PushCustomerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PushCustomerDetails(CustomerDetails custDetail) {
            object[] results = this.Invoke("PushCustomerDetails", new object[] {
                        custDetail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PushCustomerDetailsAsync(CustomerDetails custDetail) {
            this.PushCustomerDetailsAsync(custDetail, null);
        }
        
        /// <remarks/>
        public void PushCustomerDetailsAsync(CustomerDetails custDetail, object userState) {
            if ((this.PushCustomerDetailsOperationCompleted == null)) {
                this.PushCustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushCustomerDetailsOperationCompleted);
            }
            this.InvokeAsync("PushCustomerDetails", new object[] {
                        custDetail}, this.PushCustomerDetailsOperationCompleted, userState);
        }
        
        private void OnPushCustomerDetailsOperationCompleted(object arg) {
            if ((this.PushCustomerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushCustomerDetailsCompleted(this, new PushCustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PushCashDeposit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object PushCashDeposit([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] transactionDetails[] transDetail) {
            object[] results = this.Invoke("PushCashDeposit", new object[] {
                        transDetail});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void PushCashDepositAsync(transactionDetails[] transDetail) {
            this.PushCashDepositAsync(transDetail, null);
        }
        
        /// <remarks/>
        public void PushCashDepositAsync(transactionDetails[] transDetail, object userState) {
            if ((this.PushCashDepositOperationCompleted == null)) {
                this.PushCashDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushCashDepositOperationCompleted);
            }
            this.InvokeAsync("PushCashDeposit", new object[] {
                        transDetail}, this.PushCashDepositOperationCompleted, userState);
        }
        
        private void OnPushCashDepositOperationCompleted(object arg) {
            if ((this.PushCashDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushCashDepositCompleted(this, new PushCashDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PushCashWithdrawal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object PushCashWithdrawal([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] transactionDetails[] transDetail) {
            object[] results = this.Invoke("PushCashWithdrawal", new object[] {
                        transDetail});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void PushCashWithdrawalAsync(transactionDetails[] transDetail) {
            this.PushCashWithdrawalAsync(transDetail, null);
        }
        
        /// <remarks/>
        public void PushCashWithdrawalAsync(transactionDetails[] transDetail, object userState) {
            if ((this.PushCashWithdrawalOperationCompleted == null)) {
                this.PushCashWithdrawalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushCashWithdrawalOperationCompleted);
            }
            this.InvokeAsync("PushCashWithdrawal", new object[] {
                        transDetail}, this.PushCashWithdrawalOperationCompleted, userState);
        }
        
        private void OnPushCashWithdrawalOperationCompleted(object arg) {
            if ((this.PushCashWithdrawalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushCashWithdrawalCompleted(this, new PushCashWithdrawalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getChequeStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getChequeStatus(string accountNumber, string chequeNo, string tranType) {
            object[] results = this.Invoke("getChequeStatus", new object[] {
                        accountNumber,
                        chequeNo,
                        tranType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getChequeStatusAsync(string accountNumber, string chequeNo, string tranType) {
            this.getChequeStatusAsync(accountNumber, chequeNo, tranType, null);
        }
        
        /// <remarks/>
        public void getChequeStatusAsync(string accountNumber, string chequeNo, string tranType, object userState) {
            if ((this.getChequeStatusOperationCompleted == null)) {
                this.getChequeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChequeStatusOperationCompleted);
            }
            this.InvokeAsync("getChequeStatus", new object[] {
                        accountNumber,
                        chequeNo,
                        tranType}, this.getChequeStatusOperationCompleted, userState);
        }
        
        private void OngetChequeStatusOperationCompleted(object arg) {
            if ((this.getChequeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChequeStatusCompleted(this, new getChequeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerGlobalBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerGlobalBalance(string accountNumber) {
            object[] results = this.Invoke("GetCustomerGlobalBalance", new object[] {
                        accountNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerGlobalBalanceAsync(string accountNumber) {
            this.GetCustomerGlobalBalanceAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetCustomerGlobalBalanceAsync(string accountNumber, object userState) {
            if ((this.GetCustomerGlobalBalanceOperationCompleted == null)) {
                this.GetCustomerGlobalBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerGlobalBalanceOperationCompleted);
            }
            this.InvokeAsync("GetCustomerGlobalBalance", new object[] {
                        accountNumber}, this.GetCustomerGlobalBalanceOperationCompleted, userState);
        }
        
        private void OnGetCustomerGlobalBalanceOperationCompleted(object arg) {
            if ((this.GetCustomerGlobalBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerGlobalBalanceCompleted(this, new GetCustomerGlobalBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoInstantTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoInstantTransfer(TransferDetails Details) {
            object[] results = this.Invoke("DoInstantTransfer", new object[] {
                        Details});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoInstantTransferAsync(TransferDetails Details) {
            this.DoInstantTransferAsync(Details, null);
        }
        
        /// <remarks/>
        public void DoInstantTransferAsync(TransferDetails Details, object userState) {
            if ((this.DoInstantTransferOperationCompleted == null)) {
                this.DoInstantTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoInstantTransferOperationCompleted);
            }
            this.InvokeAsync("DoInstantTransfer", new object[] {
                        Details}, this.DoInstantTransferOperationCompleted, userState);
        }
        
        private void OnDoInstantTransferOperationCompleted(object arg) {
            if ((this.DoInstantTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoInstantTransferCompleted(this, new DoInstantTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerDetails3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDetails getCustomerDetails3(string accountNumber, string sSortCode, string ChequeNo, string ttype) {
            object[] results = this.Invoke("getCustomerDetails3", new object[] {
                        accountNumber,
                        sSortCode,
                        ChequeNo,
                        ttype});
            return ((CustomerDetails)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerDetails3Async(string accountNumber, string sSortCode, string ChequeNo, string ttype) {
            this.getCustomerDetails3Async(accountNumber, sSortCode, ChequeNo, ttype, null);
        }
        
        /// <remarks/>
        public void getCustomerDetails3Async(string accountNumber, string sSortCode, string ChequeNo, string ttype, object userState) {
            if ((this.getCustomerDetails3OperationCompleted == null)) {
                this.getCustomerDetails3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerDetails3OperationCompleted);
            }
            this.InvokeAsync("getCustomerDetails3", new object[] {
                        accountNumber,
                        sSortCode,
                        ChequeNo,
                        ttype}, this.getCustomerDetails3OperationCompleted, userState);
        }
        
        private void OngetCustomerDetails3OperationCompleted(object arg) {
            if ((this.getCustomerDetails3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerDetails3Completed(this, new getCustomerDetails3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMandateInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getMandateInfo(string accountNumber, string sSortCode, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref mandateInfo[] lstTmp) {
            object[] results = this.Invoke("getMandateInfo", new object[] {
                        accountNumber,
                        sSortCode,
                        lstTmp});
            lstTmp = ((mandateInfo[])(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getMandateInfoAsync(string accountNumber, string sSortCode, mandateInfo[] lstTmp) {
            this.getMandateInfoAsync(accountNumber, sSortCode, lstTmp, null);
        }
        
        /// <remarks/>
        public void getMandateInfoAsync(string accountNumber, string sSortCode, mandateInfo[] lstTmp, object userState) {
            if ((this.getMandateInfoOperationCompleted == null)) {
                this.getMandateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMandateInfoOperationCompleted);
            }
            this.InvokeAsync("getMandateInfo", new object[] {
                        accountNumber,
                        sSortCode,
                        lstTmp}, this.getMandateInfoOperationCompleted, userState);
        }
        
        private void OngetMandateInfoOperationCompleted(object arg) {
            if ((this.getMandateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMandateInfoCompleted(this, new getMandateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllCustomers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllCustomers() {
            object[] results = this.Invoke("getAllCustomers", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllCustomersAsync() {
            this.getAllCustomersAsync(null);
        }
        
        /// <remarks/>
        public void getAllCustomersAsync(object userState) {
            if ((this.getAllCustomersOperationCompleted == null)) {
                this.getAllCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllCustomersOperationCompleted);
            }
            this.InvokeAsync("getAllCustomers", new object[0], this.getAllCustomersOperationCompleted, userState);
        }
        
        private void OngetAllCustomersOperationCompleted(object arg) {
            if ((this.getAllCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllCustomersCompleted(this, new getAllCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessAcctDetailsService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessAcctDetailsService(string accountNumber, string paybankRoutnumber, string itemID) {
            this.Invoke("ProcessAcctDetailsService", new object[] {
                        accountNumber,
                        paybankRoutnumber,
                        itemID});
        }
        
        /// <remarks/>
        public void ProcessAcctDetailsServiceAsync(string accountNumber, string paybankRoutnumber, string itemID) {
            this.ProcessAcctDetailsServiceAsync(accountNumber, paybankRoutnumber, itemID, null);
        }
        
        /// <remarks/>
        public void ProcessAcctDetailsServiceAsync(string accountNumber, string paybankRoutnumber, string itemID, object userState) {
            if ((this.ProcessAcctDetailsServiceOperationCompleted == null)) {
                this.ProcessAcctDetailsServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessAcctDetailsServiceOperationCompleted);
            }
            this.InvokeAsync("ProcessAcctDetailsService", new object[] {
                        accountNumber,
                        paybankRoutnumber,
                        itemID}, this.ProcessAcctDetailsServiceOperationCompleted, userState);
        }
        
        private void OnProcessAcctDetailsServiceOperationCompleted(object arg) {
            if ((this.ProcessAcctDetailsServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessAcctDetailsServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAcctDetailsService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setAcctDetailsService(System.Data.DataTable list) {
            this.Invoke("setAcctDetailsService", new object[] {
                        list});
        }
        
        /// <remarks/>
        public void setAcctDetailsServiceAsync(System.Data.DataTable list) {
            this.setAcctDetailsServiceAsync(list, null);
        }
        
        /// <remarks/>
        public void setAcctDetailsServiceAsync(System.Data.DataTable list, object userState) {
            if ((this.setAcctDetailsServiceOperationCompleted == null)) {
                this.setAcctDetailsServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAcctDetailsServiceOperationCompleted);
            }
            this.InvokeAsync("setAcctDetailsService", new object[] {
                        list}, this.setAcctDetailsServiceOperationCompleted, userState);
        }
        
        private void OnsetAcctDetailsServiceOperationCompleted(object arg) {
            if ((this.setAcctDetailsServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAcctDetailsServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getStatement(string accountNumber, System.DateTime startDateTime, System.DateTime endDateTime) {
            object[] results = this.Invoke("getStatement", new object[] {
                        accountNumber,
                        startDateTime,
                        endDateTime});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getStatementAsync(string accountNumber, System.DateTime startDateTime, System.DateTime endDateTime) {
            this.getStatementAsync(accountNumber, startDateTime, endDateTime, null);
        }
        
        /// <remarks/>
        public void getStatementAsync(string accountNumber, System.DateTime startDateTime, System.DateTime endDateTime, object userState) {
            if ((this.getStatementOperationCompleted == null)) {
                this.getStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatementOperationCompleted);
            }
            this.InvokeAsync("getStatement", new object[] {
                        accountNumber,
                        startDateTime,
                        endDateTime}, this.getStatementOperationCompleted, userState);
        }
        
        private void OngetStatementOperationCompleted(object arg) {
            if ((this.getStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatementCompleted(this, new getStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountOpeningDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getAccountOpeningDate(string accountNumber) {
            object[] results = this.Invoke("getAccountOpeningDate", new object[] {
                        accountNumber});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountOpeningDateAsync(string accountNumber) {
            this.getAccountOpeningDateAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void getAccountOpeningDateAsync(string accountNumber, object userState) {
            if ((this.getAccountOpeningDateOperationCompleted == null)) {
                this.getAccountOpeningDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountOpeningDateOperationCompleted);
            }
            this.InvokeAsync("getAccountOpeningDate", new object[] {
                        accountNumber}, this.getAccountOpeningDateOperationCompleted, userState);
        }
        
        private void OngetAccountOpeningDateOperationCompleted(object arg) {
            if ((this.getAccountOpeningDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountOpeningDateCompleted(this, new getAccountOpeningDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCutomerPicture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getCutomerPicture(string accountNumber) {
            object[] results = this.Invoke("getCutomerPicture", new object[] {
                        accountNumber});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCutomerPictureAsync(string accountNumber) {
            this.getCutomerPictureAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void getCutomerPictureAsync(string accountNumber, object userState) {
            if ((this.getCutomerPictureOperationCompleted == null)) {
                this.getCutomerPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCutomerPictureOperationCompleted);
            }
            this.InvokeAsync("getCutomerPicture", new object[] {
                        accountNumber}, this.getCutomerPictureOperationCompleted, userState);
        }
        
        private void OngetCutomerPictureOperationCompleted(object arg) {
            if ((this.getCutomerPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCutomerPictureCompleted(this, new getCutomerPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAverageLodgement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal getAverageLodgement(string accountNumber) {
            object[] results = this.Invoke("getAverageLodgement", new object[] {
                        accountNumber});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void getAverageLodgementAsync(string accountNumber) {
            this.getAverageLodgementAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void getAverageLodgementAsync(string accountNumber, object userState) {
            if ((this.getAverageLodgementOperationCompleted == null)) {
                this.getAverageLodgementOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAverageLodgementOperationCompleted);
            }
            this.InvokeAsync("getAverageLodgement", new object[] {
                        accountNumber}, this.getAverageLodgementOperationCompleted, userState);
        }
        
        private void OngetAverageLodgementOperationCompleted(object arg) {
            if ((this.getAverageLodgementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAverageLodgementCompleted(this, new getAverageLodgementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLodgementOverage4Customer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal getLodgementOverage4Customer(string accountNumber) {
            object[] results = this.Invoke("getLodgementOverage4Customer", new object[] {
                        accountNumber});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void getLodgementOverage4CustomerAsync(string accountNumber) {
            this.getLodgementOverage4CustomerAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void getLodgementOverage4CustomerAsync(string accountNumber, object userState) {
            if ((this.getLodgementOverage4CustomerOperationCompleted == null)) {
                this.getLodgementOverage4CustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLodgementOverage4CustomerOperationCompleted);
            }
            this.InvokeAsync("getLodgementOverage4Customer", new object[] {
                        accountNumber}, this.getLodgementOverage4CustomerOperationCompleted, userState);
        }
        
        private void OngetLodgementOverage4CustomerOperationCompleted(object arg) {
            if ((this.getLodgementOverage4CustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLodgementOverage4CustomerCompleted(this, new getLodgementOverage4CustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCautionAmount4Customer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal getCautionAmount4Customer(string accountNumber) {
            object[] results = this.Invoke("getCautionAmount4Customer", new object[] {
                        accountNumber});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void getCautionAmount4CustomerAsync(string accountNumber) {
            this.getCautionAmount4CustomerAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void getCautionAmount4CustomerAsync(string accountNumber, object userState) {
            if ((this.getCautionAmount4CustomerOperationCompleted == null)) {
                this.getCautionAmount4CustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCautionAmount4CustomerOperationCompleted);
            }
            this.InvokeAsync("getCautionAmount4Customer", new object[] {
                        accountNumber}, this.getCautionAmount4CustomerOperationCompleted, userState);
        }
        
        private void OngetCautionAmount4CustomerOperationCompleted(object arg) {
            if ((this.getCautionAmount4CustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCautionAmount4CustomerCompleted(this, new getCautionAmount4CustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCautionNoticeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCautionNoticeList() {
            object[] results = this.Invoke("getCautionNoticeList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCautionNoticeListAsync() {
            this.getCautionNoticeListAsync(null);
        }
        
        /// <remarks/>
        public void getCautionNoticeListAsync(object userState) {
            if ((this.getCautionNoticeListOperationCompleted == null)) {
                this.getCautionNoticeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCautionNoticeListOperationCompleted);
            }
            this.InvokeAsync("getCautionNoticeList", new object[0], this.getCautionNoticeListOperationCompleted, userState);
        }
        
        private void OngetCautionNoticeListOperationCompleted(object arg) {
            if ((this.getCautionNoticeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCautionNoticeListCompleted(this, new getCautionNoticeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLargeAmountCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLargeAmountCode() {
            object[] results = this.Invoke("getLargeAmountCode", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLargeAmountCodeAsync() {
            this.getLargeAmountCodeAsync(null);
        }
        
        /// <remarks/>
        public void getLargeAmountCodeAsync(object userState) {
            if ((this.getLargeAmountCodeOperationCompleted == null)) {
                this.getLargeAmountCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLargeAmountCodeOperationCompleted);
            }
            this.InvokeAsync("getLargeAmountCode", new object[0], this.getLargeAmountCodeOperationCompleted, userState);
        }
        
        private void OngetLargeAmountCodeOperationCompleted(object arg) {
            if ((this.getLargeAmountCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLargeAmountCodeCompleted(this, new getLargeAmountCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCautionAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal getCautionAmount() {
            object[] results = this.Invoke("getCautionAmount", new object[0]);
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void getCautionAmountAsync() {
            this.getCautionAmountAsync(null);
        }
        
        /// <remarks/>
        public void getCautionAmountAsync(object userState) {
            if ((this.getCautionAmountOperationCompleted == null)) {
                this.getCautionAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCautionAmountOperationCompleted);
            }
            this.InvokeAsync("getCautionAmount", new object[0], this.getCautionAmountOperationCompleted, userState);
        }
        
        private void OngetCautionAmountOperationCompleted(object arg) {
            if ((this.getCautionAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCautionAmountCompleted(this, new getCautionAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountNewlyOpenedCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAccountNewlyOpenedCode() {
            object[] results = this.Invoke("getAccountNewlyOpenedCode", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountNewlyOpenedCodeAsync() {
            this.getAccountNewlyOpenedCodeAsync(null);
        }
        
        /// <remarks/>
        public void getAccountNewlyOpenedCodeAsync(object userState) {
            if ((this.getAccountNewlyOpenedCodeOperationCompleted == null)) {
                this.getAccountNewlyOpenedCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountNewlyOpenedCodeOperationCompleted);
            }
            this.InvokeAsync("getAccountNewlyOpenedCode", new object[0], this.getAccountNewlyOpenedCodeOperationCompleted, userState);
        }
        
        private void OngetAccountNewlyOpenedCodeOperationCompleted(object arg) {
            if ((this.getAccountNewlyOpenedCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountNewlyOpenedCodeCompleted(this, new getAccountNewlyOpenedCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUnusualLodgementCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUnusualLodgementCode() {
            object[] results = this.Invoke("getUnusualLodgementCode", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUnusualLodgementCodeAsync() {
            this.getUnusualLodgementCodeAsync(null);
        }
        
        /// <remarks/>
        public void getUnusualLodgementCodeAsync(object userState) {
            if ((this.getUnusualLodgementCodeOperationCompleted == null)) {
                this.getUnusualLodgementCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnusualLodgementCodeOperationCompleted);
            }
            this.InvokeAsync("getUnusualLodgementCode", new object[0], this.getUnusualLodgementCodeOperationCompleted, userState);
        }
        
        private void OngetUnusualLodgementCodeOperationCompleted(object arg) {
            if ((this.getUnusualLodgementCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnusualLodgementCodeCompleted(this, new getUnusualLodgementCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNewAccountAgeThreshold", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getNewAccountAgeThreshold() {
            object[] results = this.Invoke("getNewAccountAgeThreshold", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getNewAccountAgeThresholdAsync() {
            this.getNewAccountAgeThresholdAsync(null);
        }
        
        /// <remarks/>
        public void getNewAccountAgeThresholdAsync(object userState) {
            if ((this.getNewAccountAgeThresholdOperationCompleted == null)) {
                this.getNewAccountAgeThresholdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewAccountAgeThresholdOperationCompleted);
            }
            this.InvokeAsync("getNewAccountAgeThreshold", new object[0], this.getNewAccountAgeThresholdOperationCompleted, userState);
        }
        
        private void OngetNewAccountAgeThresholdOperationCompleted(object arg) {
            if ((this.getNewAccountAgeThresholdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewAccountAgeThresholdCompleted(this, new getNewAccountAgeThresholdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/allowCautionReasonsOverride", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool allowCautionReasonsOverride() {
            object[] results = this.Invoke("allowCautionReasonsOverride", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void allowCautionReasonsOverrideAsync() {
            this.allowCautionReasonsOverrideAsync(null);
        }
        
        /// <remarks/>
        public void allowCautionReasonsOverrideAsync(object userState) {
            if ((this.allowCautionReasonsOverrideOperationCompleted == null)) {
                this.allowCautionReasonsOverrideOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallowCautionReasonsOverrideOperationCompleted);
            }
            this.InvokeAsync("allowCautionReasonsOverride", new object[0], this.allowCautionReasonsOverrideOperationCompleted, userState);
        }
        
        private void OnallowCautionReasonsOverrideOperationCompleted(object arg) {
            if ((this.allowCautionReasonsOverrideCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allowCautionReasonsOverrideCompleted(this, new allowCautionReasonsOverrideCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CardAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AccountDetails4POS[] CardAuthentication(authenticationData Data) {
            object[] results = this.Invoke("CardAuthentication", new object[] {
                        Data});
            return ((AccountDetails4POS[])(results[0]));
        }
        
        /// <remarks/>
        public void CardAuthenticationAsync(authenticationData Data) {
            this.CardAuthenticationAsync(Data, null);
        }
        
        /// <remarks/>
        public void CardAuthenticationAsync(authenticationData Data, object userState) {
            if ((this.CardAuthenticationOperationCompleted == null)) {
                this.CardAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardAuthenticationOperationCompleted);
            }
            this.InvokeAsync("CardAuthentication", new object[] {
                        Data}, this.CardAuthenticationOperationCompleted, userState);
        }
        
        private void OnCardAuthenticationOperationCompleted(object arg) {
            if ((this.CardAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardAuthenticationCompleted(this, new CardAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AccountDetails4POS[] GetCustomerAccounts(string acctNo) {
            object[] results = this.Invoke("GetCustomerAccounts", new object[] {
                        acctNo});
            return ((AccountDetails4POS[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAccountsAsync(string acctNo) {
            this.GetCustomerAccountsAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetCustomerAccountsAsync(string acctNo, object userState) {
            if ((this.GetCustomerAccountsOperationCompleted == null)) {
                this.GetCustomerAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAccountsOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAccounts", new object[] {
                        acctNo}, this.GetCustomerAccountsOperationCompleted, userState);
        }
        
        private void OnGetCustomerAccountsOperationCompleted(object arg) {
            if ((this.GetCustomerAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAccountsCompleted(this, new GetCustomerAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostPOStransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostPOStransaction(POSTransactionDetails details) {
            this.Invoke("PostPOStransaction", new object[] {
                        details});
        }
        
        /// <remarks/>
        public void PostPOStransactionAsync(POSTransactionDetails details) {
            this.PostPOStransactionAsync(details, null);
        }
        
        /// <remarks/>
        public void PostPOStransactionAsync(POSTransactionDetails details, object userState) {
            if ((this.PostPOStransactionOperationCompleted == null)) {
                this.PostPOStransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostPOStransactionOperationCompleted);
            }
            this.InvokeAsync("PostPOStransaction", new object[] {
                        details}, this.PostPOStransactionOperationCompleted, userState);
        }
        
        private void OnPostPOStransactionOperationCompleted(object arg) {
            if ((this.PostPOStransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostPOStransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrieveAccountNumberfromPOS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void retrieveAccountNumberfromPOS(string terminalID, ref string[] accountNo, ref string PAN) {
            object[] results = this.Invoke("retrieveAccountNumberfromPOS", new object[] {
                        terminalID,
                        accountNo,
                        PAN});
            accountNo = ((string[])(results[0]));
            PAN = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void retrieveAccountNumberfromPOSAsync(string terminalID, string[] accountNo, string PAN) {
            this.retrieveAccountNumberfromPOSAsync(terminalID, accountNo, PAN, null);
        }
        
        /// <remarks/>
        public void retrieveAccountNumberfromPOSAsync(string terminalID, string[] accountNo, string PAN, object userState) {
            if ((this.retrieveAccountNumberfromPOSOperationCompleted == null)) {
                this.retrieveAccountNumberfromPOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveAccountNumberfromPOSOperationCompleted);
            }
            this.InvokeAsync("retrieveAccountNumberfromPOS", new object[] {
                        terminalID,
                        accountNo,
                        PAN}, this.retrieveAccountNumberfromPOSOperationCompleted, userState);
        }
        
        private void OnretrieveAccountNumberfromPOSOperationCompleted(object arg) {
            if ((this.retrieveAccountNumberfromPOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveAccountNumberfromPOSCompleted(this, new retrieveAccountNumberfromPOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrieveMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public authenticationData retrieveMessage(string terminalID) {
            object[] results = this.Invoke("retrieveMessage", new object[] {
                        terminalID});
            return ((authenticationData)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveMessageAsync(string terminalID) {
            this.retrieveMessageAsync(terminalID, null);
        }
        
        /// <remarks/>
        public void retrieveMessageAsync(string terminalID, object userState) {
            if ((this.retrieveMessageOperationCompleted == null)) {
                this.retrieveMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveMessageOperationCompleted);
            }
            this.InvokeAsync("retrieveMessage", new object[] {
                        terminalID}, this.retrieveMessageOperationCompleted, userState);
        }
        
        private void OnretrieveMessageOperationCompleted(object arg) {
            if ((this.retrieveMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveMessageCompleted(this, new retrieveMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePrintJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PrintJob RetrievePrintJob(string POSId) {
            object[] results = this.Invoke("RetrievePrintJob", new object[] {
                        POSId});
            return ((PrintJob)(results[0]));
        }
        
        /// <remarks/>
        public void RetrievePrintJobAsync(string POSId) {
            this.RetrievePrintJobAsync(POSId, null);
        }
        
        /// <remarks/>
        public void RetrievePrintJobAsync(string POSId, object userState) {
            if ((this.RetrievePrintJobOperationCompleted == null)) {
                this.RetrievePrintJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePrintJobOperationCompleted);
            }
            this.InvokeAsync("RetrievePrintJob", new object[] {
                        POSId}, this.RetrievePrintJobOperationCompleted, userState);
        }
        
        private void OnRetrievePrintJobOperationCompleted(object arg) {
            if ((this.RetrievePrintJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePrintJobCompleted(this, new RetrievePrintJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendReceipt4Printing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendReceipt4Printing(string terminalID, PrintJob receipt) {
            this.Invoke("SendReceipt4Printing", new object[] {
                        terminalID,
                        receipt});
        }
        
        /// <remarks/>
        public void SendReceipt4PrintingAsync(string terminalID, PrintJob receipt) {
            this.SendReceipt4PrintingAsync(terminalID, receipt, null);
        }
        
        /// <remarks/>
        public void SendReceipt4PrintingAsync(string terminalID, PrintJob receipt, object userState) {
            if ((this.SendReceipt4PrintingOperationCompleted == null)) {
                this.SendReceipt4PrintingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendReceipt4PrintingOperationCompleted);
            }
            this.InvokeAsync("SendReceipt4Printing", new object[] {
                        terminalID,
                        receipt}, this.SendReceipt4PrintingOperationCompleted, userState);
        }
        
        private void OnSendReceipt4PrintingOperationCompleted(object arg) {
            if ((this.SendReceipt4PrintingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendReceipt4PrintingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validateUserExternally", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool validateUserExternally(string sUserID, string sPassword, ref string sBranchCode, ref string sBranchName, ref string sUserOrgID, ref string sUserFullName, ref string sUserEmail, ref string sMsg) {
            object[] results = this.Invoke("validateUserExternally", new object[] {
                        sUserID,
                        sPassword,
                        sBranchCode,
                        sBranchName,
                        sUserOrgID,
                        sUserFullName,
                        sUserEmail,
                        sMsg});
            sBranchCode = ((string)(results[1]));
            sBranchName = ((string)(results[2]));
            sUserOrgID = ((string)(results[3]));
            sUserFullName = ((string)(results[4]));
            sUserEmail = ((string)(results[5]));
            sMsg = ((string)(results[6]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validateUserExternallyAsync(string sUserID, string sPassword, string sBranchCode, string sBranchName, string sUserOrgID, string sUserFullName, string sUserEmail, string sMsg) {
            this.validateUserExternallyAsync(sUserID, sPassword, sBranchCode, sBranchName, sUserOrgID, sUserFullName, sUserEmail, sMsg, null);
        }
        
        /// <remarks/>
        public void validateUserExternallyAsync(string sUserID, string sPassword, string sBranchCode, string sBranchName, string sUserOrgID, string sUserFullName, string sUserEmail, string sMsg, object userState) {
            if ((this.validateUserExternallyOperationCompleted == null)) {
                this.validateUserExternallyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateUserExternallyOperationCompleted);
            }
            this.InvokeAsync("validateUserExternally", new object[] {
                        sUserID,
                        sPassword,
                        sBranchCode,
                        sBranchName,
                        sUserOrgID,
                        sUserFullName,
                        sUserEmail,
                        sMsg}, this.validateUserExternallyOperationCompleted, userState);
        }
        
        private void OnvalidateUserExternallyOperationCompleted(object arg) {
            if ((this.validateUserExternallyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateUserExternallyCompleted(this, new validateUserExternallyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validateUserExternallyNoPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool validateUserExternallyNoPassword(string sUserID, ref string sBranchCode, ref string sBranchName, ref string sUserOrgID, ref string sUserFullName, ref string sUserEmail, ref string sMsg) {
            object[] results = this.Invoke("validateUserExternallyNoPassword", new object[] {
                        sUserID,
                        sBranchCode,
                        sBranchName,
                        sUserOrgID,
                        sUserFullName,
                        sUserEmail,
                        sMsg});
            sBranchCode = ((string)(results[1]));
            sBranchName = ((string)(results[2]));
            sUserOrgID = ((string)(results[3]));
            sUserFullName = ((string)(results[4]));
            sUserEmail = ((string)(results[5]));
            sMsg = ((string)(results[6]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validateUserExternallyNoPasswordAsync(string sUserID, string sBranchCode, string sBranchName, string sUserOrgID, string sUserFullName, string sUserEmail, string sMsg) {
            this.validateUserExternallyNoPasswordAsync(sUserID, sBranchCode, sBranchName, sUserOrgID, sUserFullName, sUserEmail, sMsg, null);
        }
        
        /// <remarks/>
        public void validateUserExternallyNoPasswordAsync(string sUserID, string sBranchCode, string sBranchName, string sUserOrgID, string sUserFullName, string sUserEmail, string sMsg, object userState) {
            if ((this.validateUserExternallyNoPasswordOperationCompleted == null)) {
                this.validateUserExternallyNoPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateUserExternallyNoPasswordOperationCompleted);
            }
            this.InvokeAsync("validateUserExternallyNoPassword", new object[] {
                        sUserID,
                        sBranchCode,
                        sBranchName,
                        sUserOrgID,
                        sUserFullName,
                        sUserEmail,
                        sMsg}, this.validateUserExternallyNoPasswordOperationCompleted, userState);
        }
        
        private void OnvalidateUserExternallyNoPasswordOperationCompleted(object arg) {
            if ((this.validateUserExternallyNoPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateUserExternallyNoPasswordCompleted(this, new validateUserExternallyNoPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCBAuserid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCBAuserid(string userid) {
            object[] results = this.Invoke("getCBAuserid", new object[] {
                        userid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCBAuseridAsync(string userid) {
            this.getCBAuseridAsync(userid, null);
        }
        
        /// <remarks/>
        public void getCBAuseridAsync(string userid, object userState) {
            if ((this.getCBAuseridOperationCompleted == null)) {
                this.getCBAuseridOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCBAuseridOperationCompleted);
            }
            this.InvokeAsync("getCBAuserid", new object[] {
                        userid}, this.getCBAuseridOperationCompleted, userState);
        }
        
        private void OngetCBAuseridOperationCompleted(object arg) {
            if ((this.getCBAuseridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCBAuseridCompleted(this, new getCBAuseridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReversalDetails {
        
        private string debitAmountField;
        
        private string customerAcctField;
        
        private string chequeNoField;
        
        private string branchCodeField;
        
        private string bankCodeField;
        
        private string narrationField;
        
        private string beneficiaryNameField;
        
        private string sortCodeField;
        
        /// <remarks/>
        public string DebitAmount {
            get {
                return this.debitAmountField;
            }
            set {
                this.debitAmountField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAcct {
            get {
                return this.customerAcctField;
            }
            set {
                this.customerAcctField = value;
            }
        }
        
        /// <remarks/>
        public string ChequeNo {
            get {
                return this.chequeNoField;
            }
            set {
                this.chequeNoField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Narration {
            get {
                return this.narrationField;
            }
            set {
                this.narrationField = value;
            }
        }
        
        /// <remarks/>
        public string BeneficiaryName {
            get {
                return this.beneficiaryNameField;
            }
            set {
                this.beneficiaryNameField = value;
            }
        }
        
        /// <remarks/>
        public string SortCode {
            get {
                return this.sortCodeField;
            }
            set {
                this.sortCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AuditDatas", Namespace="http://thepfs.biz/ApplauseGL")]
    public partial class AuditDatas1 {
        
        private int appIDField;
        
        private System.DateTime dateField;
        
        private string eventField;
        
        private string machineIDField;
        
        private string moduleUsedField;
        
        private string userIDField;
        
        /// <remarks/>
        public int AppID {
            get {
                return this.appIDField;
            }
            set {
                this.appIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        public string MachineID {
            get {
                return this.machineIDField;
            }
            set {
                this.machineIDField = value;
            }
        }
        
        /// <remarks/>
        public string ModuleUsed {
            get {
                return this.moduleUsedField;
            }
            set {
                this.moduleUsedField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://thepfs.biz/ApplauseGL")]
    public partial class GLAccounts {
        
        private string acctNoField;
        
        private string acctTitleField;
        
        private string affliateField;
        
        private string alternate_Account_NumberField;
        
        private string categoryField;
        
        private string connectionStringField;
        
        private System.DateTime creationDateField;
        
        private AuditDatas1 dataField;
        
        private string groupField;
        
        private int groupWideField;
        
        private string intrestAccrualAcctField;
        
        private bool isControlField;
        
        private string nativeCurrencyField;
        
        private string ownerSBUField;
        
        private string swingGLAcctField;
        
        /// <remarks/>
        public string acctNo {
            get {
                return this.acctNoField;
            }
            set {
                this.acctNoField = value;
            }
        }
        
        /// <remarks/>
        public string acctTitle {
            get {
                return this.acctTitleField;
            }
            set {
                this.acctTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Affliate {
            get {
                return this.affliateField;
            }
            set {
                this.affliateField = value;
            }
        }
        
        /// <remarks/>
        public string Alternate_Account_Number {
            get {
                return this.alternate_Account_NumberField;
            }
            set {
                this.alternate_Account_NumberField = value;
            }
        }
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string ConnectionString {
            get {
                return this.connectionStringField;
            }
            set {
                this.connectionStringField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public AuditDatas1 Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public int GroupWide {
            get {
                return this.groupWideField;
            }
            set {
                this.groupWideField = value;
            }
        }
        
        /// <remarks/>
        public string intrestAccrualAcct {
            get {
                return this.intrestAccrualAcctField;
            }
            set {
                this.intrestAccrualAcctField = value;
            }
        }
        
        /// <remarks/>
        public bool isControl {
            get {
                return this.isControlField;
            }
            set {
                this.isControlField = value;
            }
        }
        
        /// <remarks/>
        public string nativeCurrency {
            get {
                return this.nativeCurrencyField;
            }
            set {
                this.nativeCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string ownerSBU {
            get {
                return this.ownerSBUField;
            }
            set {
                this.ownerSBUField = value;
            }
        }
        
        /// <remarks/>
        public string swingGLAcct {
            get {
                return this.swingGLAcctField;
            }
            set {
                this.swingGLAcctField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://thepfs.biz/ApplauseGL")]
    public partial class CustomerBalances {
        
        private decimal bookBalField;
        
        private decimal closingField;
        
        private decimal lcy_BookBalField;
        
        private decimal lCY_OpeningBalField;
        
        /// <remarks/>
        public decimal BookBal {
            get {
                return this.bookBalField;
            }
            set {
                this.bookBalField = value;
            }
        }
        
        /// <remarks/>
        public decimal Closing {
            get {
                return this.closingField;
            }
            set {
                this.closingField = value;
            }
        }
        
        /// <remarks/>
        public decimal Lcy_BookBal {
            get {
                return this.lcy_BookBalField;
            }
            set {
                this.lcy_BookBalField = value;
            }
        }
        
        /// <remarks/>
        public decimal LCY_OpeningBal {
            get {
                return this.lCY_OpeningBalField;
            }
            set {
                this.lCY_OpeningBalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://thepfs.biz/ApplauseGL")]
    public partial class CUSTACCOUNT {
        
        private string acctNoField;
        
        private int acctStatusField;
        
        private string affiliateField;
        
        private decimal cotCrField;
        
        private decimal cotDrField;
        
        private string crAcctNoField;
        
        private float crRateField;
        
        private string currencyField;
        
        private string custNoField;
        
        private string drAcctNoField;
        
        private float drRateField;
        
        private string extAcctNoField;
        
        private int maxWithdrawalField;
        
        private string paymentInstructionField;
        
        private string productCodeField;
        
        private string relationMgrField;
        
        private int skipableChequesField;
        
        private string titleField;
        
        private string userField;
        
        /// <remarks/>
        public string acctNo {
            get {
                return this.acctNoField;
            }
            set {
                this.acctNoField = value;
            }
        }
        
        /// <remarks/>
        public int AcctStatus {
            get {
                return this.acctStatusField;
            }
            set {
                this.acctStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Affiliate {
            get {
                return this.affiliateField;
            }
            set {
                this.affiliateField = value;
            }
        }
        
        /// <remarks/>
        public decimal cotCr {
            get {
                return this.cotCrField;
            }
            set {
                this.cotCrField = value;
            }
        }
        
        /// <remarks/>
        public decimal cotDr {
            get {
                return this.cotDrField;
            }
            set {
                this.cotDrField = value;
            }
        }
        
        /// <remarks/>
        public string crAcctNo {
            get {
                return this.crAcctNoField;
            }
            set {
                this.crAcctNoField = value;
            }
        }
        
        /// <remarks/>
        public float crRate {
            get {
                return this.crRateField;
            }
            set {
                this.crRateField = value;
            }
        }
        
        /// <remarks/>
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string custNo {
            get {
                return this.custNoField;
            }
            set {
                this.custNoField = value;
            }
        }
        
        /// <remarks/>
        public string drAcctNo {
            get {
                return this.drAcctNoField;
            }
            set {
                this.drAcctNoField = value;
            }
        }
        
        /// <remarks/>
        public float drRate {
            get {
                return this.drRateField;
            }
            set {
                this.drRateField = value;
            }
        }
        
        /// <remarks/>
        public string ExtAcctNo {
            get {
                return this.extAcctNoField;
            }
            set {
                this.extAcctNoField = value;
            }
        }
        
        /// <remarks/>
        public int MaxWithdrawal {
            get {
                return this.maxWithdrawalField;
            }
            set {
                this.maxWithdrawalField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentInstruction {
            get {
                return this.paymentInstructionField;
            }
            set {
                this.paymentInstructionField = value;
            }
        }
        
        /// <remarks/>
        public string productCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string relationMgr {
            get {
                return this.relationMgrField;
            }
            set {
                this.relationMgrField = value;
            }
        }
        
        /// <remarks/>
        public int SkipableCheques {
            get {
                return this.skipableChequesField;
            }
            set {
                this.skipableChequesField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://thepfs.biz/ApplauseGL")]
    public partial class FeedMessage {
        
        private int codeField;
        
        private string errorMessageField;
        
        private string messageField;
        
        /// <remarks/>
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PrintJob {
        
        private string accountNoField;
        
        private string accountTitleField;
        
        private decimal amountField;
        
        private string pANField;
        
        private string pOSIdField;
        
        private System.DateTime dateField;
        
        private string footerMessageField;
        
        private string amountInWordField;
        
        private string tellerNameField;
        
        private string currencyNemonicsField;
        
        private string transTypeField;
        
        /// <remarks/>
        public string AccountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTitle {
            get {
                return this.accountTitleField;
            }
            set {
                this.accountTitleField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string PAN {
            get {
                return this.pANField;
            }
            set {
                this.pANField = value;
            }
        }
        
        /// <remarks/>
        public string POSId {
            get {
                return this.pOSIdField;
            }
            set {
                this.pOSIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string footerMessage {
            get {
                return this.footerMessageField;
            }
            set {
                this.footerMessageField = value;
            }
        }
        
        /// <remarks/>
        public string AmountInWord {
            get {
                return this.amountInWordField;
            }
            set {
                this.amountInWordField = value;
            }
        }
        
        /// <remarks/>
        public string TellerName {
            get {
                return this.tellerNameField;
            }
            set {
                this.tellerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyNemonics {
            get {
                return this.currencyNemonicsField;
            }
            set {
                this.currencyNemonicsField = value;
            }
        }
        
        /// <remarks/>
        public string TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AccountDetails4POS {
        
        private string accountNoField;
        
        private AccountType accountTypeField;
        
        private string accounTitleField;
        
        private decimal availableBalanceField;
        
        /// <remarks/>
        public string accountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public AccountType accountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string accounTitle {
            get {
                return this.accounTitleField;
            }
            set {
                this.accounTitleField = value;
            }
        }
        
        /// <remarks/>
        public decimal availableBalance {
            get {
                return this.availableBalanceField;
            }
            set {
                this.availableBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum AccountType {
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        Savings,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class authenticationData {
        
        private string expiryDateField;
        
        private string nameField;
        
        private string pANField;
        
        private string pOSIdField;
        
        private short statusField;
        
        private string[] accountNoField;
        
        /// <remarks/>
        public string ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string PAN {
            get {
                return this.pANField;
            }
            set {
                this.pANField = value;
            }
        }
        
        /// <remarks/>
        public string POSId {
            get {
                return this.pOSIdField;
            }
            set {
                this.pOSIdField = value;
            }
        }
        
        /// <remarks/>
        public short Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string[] accountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TransferDetails {
        
        private string amountField;
        
        private string beneficiaryAccountField;
        
        private string beneficaryAcctNameField;
        
        private string branchcodeField;
        
        private string creditCurrencyField;
        
        private string debitAcctNumberField;
        
        private string debitCurrencyField;
        
        private string requestTypeField;
        
        private string chequeInstantCreditField;
        
        private string narrationField;
        
        /// <remarks/>
        public string Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string BeneficiaryAccount {
            get {
                return this.beneficiaryAccountField;
            }
            set {
                this.beneficiaryAccountField = value;
            }
        }
        
        /// <remarks/>
        public string BeneficaryAcctName {
            get {
                return this.beneficaryAcctNameField;
            }
            set {
                this.beneficaryAcctNameField = value;
            }
        }
        
        /// <remarks/>
        public string Branchcode {
            get {
                return this.branchcodeField;
            }
            set {
                this.branchcodeField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCurrency {
            get {
                return this.creditCurrencyField;
            }
            set {
                this.creditCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string DebitAcctNumber {
            get {
                return this.debitAcctNumberField;
            }
            set {
                this.debitAcctNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DebitCurrency {
            get {
                return this.debitCurrencyField;
            }
            set {
                this.debitCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string RequestType {
            get {
                return this.requestTypeField;
            }
            set {
                this.requestTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ChequeInstantCredit {
            get {
                return this.chequeInstantCreditField;
            }
            set {
                this.chequeInstantCreditField = value;
            }
        }
        
        /// <remarks/>
        public string Narration {
            get {
                return this.narrationField;
            }
            set {
                this.narrationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerDetail {
        
        private string addressField;
        
        private string affliateField;
        
        private string categoryField;
        
        private string countryField;
        
        private string custIDField;
        
        private System.DateTime dateOfBirthField;
        
        private string emailAddressField;
        
        private string faxField;
        
        private bool isactiveField;
        
        private string landnoField;
        
        private string lastNameField;
        
        private string mobilenoField;
        
        private string nextKinAddField;
        
        private string nextKinNameField;
        
        private string nextKinPhoneField;
        
        private string nextKinRshipField;
        
        private string otherNamesField;
        
        private byte[] photoField;
        
        private string sexField;
        
        private byte[] signatureField;
        
        private string stateOfOriginField;
        
        private string statusField;
        
        private string telephoneField;
        
        private byte[] thumbPrintField;
        
        private string titleField;
        
        private string userField;
        
        private string branchNameField;
        
        private string productNameField;
        
        private string customerNameField;
        
        private string currencyCodeField;
        
        private string custIDField1;
        
        private string accountStatusField;
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Affliate {
            get {
                return this.affliateField;
            }
            set {
                this.affliateField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string CustID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public bool Isactive {
            get {
                return this.isactiveField;
            }
            set {
                this.isactiveField = value;
            }
        }
        
        /// <remarks/>
        public string Landno {
            get {
                return this.landnoField;
            }
            set {
                this.landnoField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Mobileno {
            get {
                return this.mobilenoField;
            }
            set {
                this.mobilenoField = value;
            }
        }
        
        /// <remarks/>
        public string NextKinAdd {
            get {
                return this.nextKinAddField;
            }
            set {
                this.nextKinAddField = value;
            }
        }
        
        /// <remarks/>
        public string NextKinName {
            get {
                return this.nextKinNameField;
            }
            set {
                this.nextKinNameField = value;
            }
        }
        
        /// <remarks/>
        public string NextKinPhone {
            get {
                return this.nextKinPhoneField;
            }
            set {
                this.nextKinPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string NextKinRship {
            get {
                return this.nextKinRshipField;
            }
            set {
                this.nextKinRshipField = value;
            }
        }
        
        /// <remarks/>
        public string OtherNames {
            get {
                return this.otherNamesField;
            }
            set {
                this.otherNamesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
            }
        }
        
        /// <remarks/>
        public string Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        public string StateOfOrigin {
            get {
                return this.stateOfOriginField;
            }
            set {
                this.stateOfOriginField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ThumbPrint {
            get {
                return this.thumbPrintField;
            }
            set {
                this.thumbPrintField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string branchName {
            get {
                return this.branchNameField;
            }
            set {
                this.branchNameField = value;
            }
        }
        
        /// <remarks/>
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string customerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string currencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField1;
            }
            set {
                this.custIDField1 = value;
            }
        }
        
        /// <remarks/>
        public string accountStatus {
            get {
                return this.accountStatusField;
            }
            set {
                this.accountStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AuditDatas {
        
        private int appIDField;
        
        private System.DateTime dateField;
        
        private string eventField;
        
        private string machineIDField;
        
        private string moduleUsedField;
        
        private string userIDField;
        
        /// <remarks/>
        public int AppID {
            get {
                return this.appIDField;
            }
            set {
                this.appIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        public string MachineID {
            get {
                return this.machineIDField;
            }
            set {
                this.machineIDField = value;
            }
        }
        
        /// <remarks/>
        public string ModuleUsed {
            get {
                return this.moduleUsedField;
            }
            set {
                this.moduleUsedField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class JournalStruct {
        
        private string accountNoField;
        
        private string affiliateField;
        
        private decimal amountField;
        
        private string analCode1Field;
        
        private string analCode10Field;
        
        private string analCode11Field;
        
        private string analCode12Field;
        
        private string analCode2Field;
        
        private string analCode3Field;
        
        private string analCode4Field;
        
        private string analCode5Field;
        
        private string analCode6Field;
        
        private string analCode7Field;
        
        private string analCode8Field;
        
        private string analCode9Field;
        
        private int appIDField;
        
        private int aUTOField;
        
        private int batchIDField;
        
        private string bCodeField;
        
        private bool checkerField;
        
        private CRDR cR_DRField;
        
        private string currField;
        
        private System.DateTime expiryField;
        
        private decimal fCYAmountField;
        
        private string glAccountField;
        
        private decimal lCYAmountField;
        
        private string narrationField;
        
        private int onHoldField;
        
        private System.DateTime postDateField;
        
        private int postedField;
        
        private decimal rateField;
        
        private string referenceField;
        
        private bool reoccurenceField;
        
        private string revaluationAccountField;
        
        private string revaluationNarrationField;
        
        private string sBUField;
        
        private System.DateTime startDateField;
        
        private System.DateTime transactionDateField;
        
        private decimal transRateField;
        
        private int transRefField;
        
        private string transTypeField;
        
        private string userIDField;
        
        private System.DateTime valueDateField;
        
        /// <remarks/>
        public string AccountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public string Affiliate {
            get {
                return this.affiliateField;
            }
            set {
                this.affiliateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode1 {
            get {
                return this.analCode1Field;
            }
            set {
                this.analCode1Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode10 {
            get {
                return this.analCode10Field;
            }
            set {
                this.analCode10Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode11 {
            get {
                return this.analCode11Field;
            }
            set {
                this.analCode11Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode12 {
            get {
                return this.analCode12Field;
            }
            set {
                this.analCode12Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode2 {
            get {
                return this.analCode2Field;
            }
            set {
                this.analCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode3 {
            get {
                return this.analCode3Field;
            }
            set {
                this.analCode3Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode4 {
            get {
                return this.analCode4Field;
            }
            set {
                this.analCode4Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode5 {
            get {
                return this.analCode5Field;
            }
            set {
                this.analCode5Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode6 {
            get {
                return this.analCode6Field;
            }
            set {
                this.analCode6Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode7 {
            get {
                return this.analCode7Field;
            }
            set {
                this.analCode7Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode8 {
            get {
                return this.analCode8Field;
            }
            set {
                this.analCode8Field = value;
            }
        }
        
        /// <remarks/>
        public string AnalCode9 {
            get {
                return this.analCode9Field;
            }
            set {
                this.analCode9Field = value;
            }
        }
        
        /// <remarks/>
        public int AppID {
            get {
                return this.appIDField;
            }
            set {
                this.appIDField = value;
            }
        }
        
        /// <remarks/>
        public int AUTO {
            get {
                return this.aUTOField;
            }
            set {
                this.aUTOField = value;
            }
        }
        
        /// <remarks/>
        public int BatchID {
            get {
                return this.batchIDField;
            }
            set {
                this.batchIDField = value;
            }
        }
        
        /// <remarks/>
        public string BCode {
            get {
                return this.bCodeField;
            }
            set {
                this.bCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool checker {
            get {
                return this.checkerField;
            }
            set {
                this.checkerField = value;
            }
        }
        
        /// <remarks/>
        public CRDR CR_DR {
            get {
                return this.cR_DRField;
            }
            set {
                this.cR_DRField = value;
            }
        }
        
        /// <remarks/>
        public string curr {
            get {
                return this.currField;
            }
            set {
                this.currField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Expiry {
            get {
                return this.expiryField;
            }
            set {
                this.expiryField = value;
            }
        }
        
        /// <remarks/>
        public decimal FCYAmount {
            get {
                return this.fCYAmountField;
            }
            set {
                this.fCYAmountField = value;
            }
        }
        
        /// <remarks/>
        public string glAccount {
            get {
                return this.glAccountField;
            }
            set {
                this.glAccountField = value;
            }
        }
        
        /// <remarks/>
        public decimal LCYAmount {
            get {
                return this.lCYAmountField;
            }
            set {
                this.lCYAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Narration {
            get {
                return this.narrationField;
            }
            set {
                this.narrationField = value;
            }
        }
        
        /// <remarks/>
        public int onHold {
            get {
                return this.onHoldField;
            }
            set {
                this.onHoldField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PostDate {
            get {
                return this.postDateField;
            }
            set {
                this.postDateField = value;
            }
        }
        
        /// <remarks/>
        public int posted {
            get {
                return this.postedField;
            }
            set {
                this.postedField = value;
            }
        }
        
        /// <remarks/>
        public decimal rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public bool Reoccurence {
            get {
                return this.reoccurenceField;
            }
            set {
                this.reoccurenceField = value;
            }
        }
        
        /// <remarks/>
        public string RevaluationAccount {
            get {
                return this.revaluationAccountField;
            }
            set {
                this.revaluationAccountField = value;
            }
        }
        
        /// <remarks/>
        public string RevaluationNarration {
            get {
                return this.revaluationNarrationField;
            }
            set {
                this.revaluationNarrationField = value;
            }
        }
        
        /// <remarks/>
        public string SBU {
            get {
                return this.sBUField;
            }
            set {
                this.sBUField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal transRate {
            get {
                return this.transRateField;
            }
            set {
                this.transRateField = value;
            }
        }
        
        /// <remarks/>
        public int TransRef {
            get {
                return this.transRefField;
            }
            set {
                this.transRefField = value;
            }
        }
        
        /// <remarks/>
        public string TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ValueDate {
            get {
                return this.valueDateField;
            }
            set {
                this.valueDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CRDR {
        
        /// <remarks/>
        Debit,
        
        /// <remarks/>
        Credit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerAccountDetails {
        
        private string accountNameField;
        
        private string aTMStatusField;
        
        private string accountStatusField;
        
        private decimal amountHoldField;
        
        private string availableBalanceField;
        
        private decimal bookBalanceField;
        
        private string branchCodeField;
        
        private string branchNameField;
        
        private string currencyField;
        
        private string currencyCodeField;
        
        private string custField;
        
        private string customerNameField;
        
        private string oDLimitField;
        
        private string phoneField;
        
        private string productCodeField;
        
        private string productNameField;
        
        private decimal unavailableBalanceField;
        
        private string sweepAccountField;
        
        private string sweepAmountField;
        
        private string custIDField;
        
        /// <remarks/>
        public string accountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string aTMStatus {
            get {
                return this.aTMStatusField;
            }
            set {
                this.aTMStatusField = value;
            }
        }
        
        /// <remarks/>
        public string accountStatus {
            get {
                return this.accountStatusField;
            }
            set {
                this.accountStatusField = value;
            }
        }
        
        /// <remarks/>
        public decimal amountHold {
            get {
                return this.amountHoldField;
            }
            set {
                this.amountHoldField = value;
            }
        }
        
        /// <remarks/>
        public string availableBalance {
            get {
                return this.availableBalanceField;
            }
            set {
                this.availableBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal bookBalance {
            get {
                return this.bookBalanceField;
            }
            set {
                this.bookBalanceField = value;
            }
        }
        
        /// <remarks/>
        public string branchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string branchName {
            get {
                return this.branchNameField;
            }
            set {
                this.branchNameField = value;
            }
        }
        
        /// <remarks/>
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string currencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string cust {
            get {
                return this.custField;
            }
            set {
                this.custField = value;
            }
        }
        
        /// <remarks/>
        public string customerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string oDLimit {
            get {
                return this.oDLimitField;
            }
            set {
                this.oDLimitField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string productCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal unavailableBalance {
            get {
                return this.unavailableBalanceField;
            }
            set {
                this.unavailableBalanceField = value;
            }
        }
        
        /// <remarks/>
        public string sweepAccount {
            get {
                return this.sweepAccountField;
            }
            set {
                this.sweepAccountField = value;
            }
        }
        
        /// <remarks/>
        public string sweepAmount {
            get {
                return this.sweepAmountField;
            }
            set {
                this.sweepAmountField = value;
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class POSTransactionDetails {
        
        private string accountNoField;
        
        private decimal amountField;
        
        private TransactionType transTypeField;
        
        private string pOSIdField;
        
        /// <remarks/>
        public string accountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public TransactionType transType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
        
        /// <remarks/>
        public string POSId {
            get {
                return this.pOSIdField;
            }
            set {
                this.pOSIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TransactionType {
        
        /// <remarks/>
        Deposit,
        
        /// <remarks/>
        Withdrawal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class mandateInfo {
        
        private string signatoryNameField;
        
        private string signatoryImagePhotoField;
        
        private string signatoryImageSignField;
        
        private string signatoryOperatingInstructionField;
        
        private byte[] signatoryImagePhotoByteField;
        
        private byte[] signatoryImageSignByteField;
        
        /// <remarks/>
        public string signatoryName {
            get {
                return this.signatoryNameField;
            }
            set {
                this.signatoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string signatoryImagePhoto {
            get {
                return this.signatoryImagePhotoField;
            }
            set {
                this.signatoryImagePhotoField = value;
            }
        }
        
        /// <remarks/>
        public string signatoryImageSign {
            get {
                return this.signatoryImageSignField;
            }
            set {
                this.signatoryImageSignField = value;
            }
        }
        
        /// <remarks/>
        public string signatoryOperatingInstruction {
            get {
                return this.signatoryOperatingInstructionField;
            }
            set {
                this.signatoryOperatingInstructionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] signatoryImagePhotoByte {
            get {
                return this.signatoryImagePhotoByteField;
            }
            set {
                this.signatoryImagePhotoByteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] signatoryImageSignByte {
            get {
                return this.signatoryImageSignByteField;
            }
            set {
                this.signatoryImageSignByteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ISOCurrency {
        
        private string connectionStringField;
        
        private string nameField;
        
        private int codeField;
        
        private string abbreviationField;
        
        /// <remarks/>
        public string connectionString {
            get {
                return this.connectionStringField;
            }
            set {
                this.connectionStringField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Abbreviation {
            get {
                return this.abbreviationField;
            }
            set {
                this.abbreviationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerDetails {
        
        private ISOCurrency iSOCurrencyField;
        
        private string accountNumberField;
        
        private string accountTitleField;
        
        private string account_GroupField;
        
        private string account_typeField;
        
        private decimal availableBalanceField;
        
        private decimal bookBalanceField;
        
        private string branchField;
        
        private System.DateTime dateOpenedField;
        
        private string emailAddressField;
        
        private string phoneNumberField;
        
        private string productTypeField;
        
        private string remarksField;
        
        private byte[][] signatureField;
        
        private string[] signatoryField;
        
        private string contactNameField;
        
        private string lastMovementDateField;
        
        private mandateInfo[] mandateInfoField;
        
        private bool hasMandateField;
        
        private string accountStatusField;
        
        private string sweepAccountField;
        
        private string sweepAmountField;
        
        private string accountOfficerField;
        
        private string chequeStatusField;
        
        private decimal lienAmountField;
        
        private decimal overdraftField;
        
        private string branchCodeField;
        
        private string custIdField;
        
        private bool validForClearingChequeField;
        
        private string customer_ledgerField;
        
        private string customerBVNField;
        
        /// <remarks/>
        public ISOCurrency ISOCurrency {
            get {
                return this.iSOCurrencyField;
            }
            set {
                this.iSOCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string accountTitle {
            get {
                return this.accountTitleField;
            }
            set {
                this.accountTitleField = value;
            }
        }
        
        /// <remarks/>
        public string account_Group {
            get {
                return this.account_GroupField;
            }
            set {
                this.account_GroupField = value;
            }
        }
        
        /// <remarks/>
        public string account_type {
            get {
                return this.account_typeField;
            }
            set {
                this.account_typeField = value;
            }
        }
        
        /// <remarks/>
        public decimal availableBalance {
            get {
                return this.availableBalanceField;
            }
            set {
                this.availableBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal bookBalance {
            get {
                return this.bookBalanceField;
            }
            set {
                this.bookBalanceField = value;
            }
        }
        
        /// <remarks/>
        public string branch {
            get {
                return this.branchField;
            }
            set {
                this.branchField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateOpened {
            get {
                return this.dateOpenedField;
            }
            set {
                this.dateOpenedField = value;
            }
        }
        
        /// <remarks/>
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string productType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
            }
        }
        
        /// <remarks/>
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        public byte[][] signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        public string[] signatory {
            get {
                return this.signatoryField;
            }
            set {
                this.signatoryField = value;
            }
        }
        
        /// <remarks/>
        public string contactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastMovementDate {
            get {
                return this.lastMovementDateField;
            }
            set {
                this.lastMovementDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public mandateInfo[] MandateInfo {
            get {
                return this.mandateInfoField;
            }
            set {
                this.mandateInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool hasMandate {
            get {
                return this.hasMandateField;
            }
            set {
                this.hasMandateField = value;
            }
        }
        
        /// <remarks/>
        public string accountStatus {
            get {
                return this.accountStatusField;
            }
            set {
                this.accountStatusField = value;
            }
        }
        
        /// <remarks/>
        public string sweepAccount {
            get {
                return this.sweepAccountField;
            }
            set {
                this.sweepAccountField = value;
            }
        }
        
        /// <remarks/>
        public string sweepAmount {
            get {
                return this.sweepAmountField;
            }
            set {
                this.sweepAmountField = value;
            }
        }
        
        /// <remarks/>
        public string accountOfficer {
            get {
                return this.accountOfficerField;
            }
            set {
                this.accountOfficerField = value;
            }
        }
        
        /// <remarks/>
        public string chequeStatus {
            get {
                return this.chequeStatusField;
            }
            set {
                this.chequeStatusField = value;
            }
        }
        
        /// <remarks/>
        public decimal lienAmount {
            get {
                return this.lienAmountField;
            }
            set {
                this.lienAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal overdraft {
            get {
                return this.overdraftField;
            }
            set {
                this.overdraftField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string custId {
            get {
                return this.custIdField;
            }
            set {
                this.custIdField = value;
            }
        }
        
        /// <remarks/>
        public bool validForClearingCheque {
            get {
                return this.validForClearingChequeField;
            }
            set {
                this.validForClearingChequeField = value;
            }
        }
        
        /// <remarks/>
        public string customer_ledger {
            get {
                return this.customer_ledgerField;
            }
            set {
                this.customer_ledgerField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerBVN {
            get {
                return this.customerBVNField;
            }
            set {
                this.customerBVNField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class chequeDetails {
        
        private int iSOCurrencyCodeField;
        
        private string accountNumberField;
        
        private decimal amountField;
        
        private string beneficiaryField;
        
        private string[] cautionReasonsField;
        
        private System.DateTime chequeDateField;
        
        private string chequeNumberField;
        
        private int chequeRefField;
        
        private string chequetypeField;
        
        private byte[] frontGrayTIFFField;
        
        private byte[] frontImageField;
        
        private byte[] frontImageBWTIFFField;
        
        private byte[] frontImageUVField;
        
        private byte[] rearImageField;
        
        private byte[] rearImageBWTIFFField;
        
        private byte[] rearImageUVField;
        
        private string scannerIDField;
        
        private string sortCodeField;
        
        private string tranCodeField;
        
        private System.DateTime valueDateField;
        
        private string narrationField;
        
        private int floatDaysField;
        
        private string drawerField;
        
        private string bVNField;
        
        private string mICRRepairField;
        
        private string expiryDateField;
        
        private string checkDigitField;
        
        private byte[] qRCodeField;
        
        /// <remarks/>
        public int ISOCurrencyCode {
            get {
                return this.iSOCurrencyCodeField;
            }
            set {
                this.iSOCurrencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string beneficiary {
            get {
                return this.beneficiaryField;
            }
            set {
                this.beneficiaryField = value;
            }
        }
        
        /// <remarks/>
        public string[] cautionReasons {
            get {
                return this.cautionReasonsField;
            }
            set {
                this.cautionReasonsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime chequeDate {
            get {
                return this.chequeDateField;
            }
            set {
                this.chequeDateField = value;
            }
        }
        
        /// <remarks/>
        public string chequeNumber {
            get {
                return this.chequeNumberField;
            }
            set {
                this.chequeNumberField = value;
            }
        }
        
        /// <remarks/>
        public int chequeRef {
            get {
                return this.chequeRefField;
            }
            set {
                this.chequeRefField = value;
            }
        }
        
        /// <remarks/>
        public string chequetype {
            get {
                return this.chequetypeField;
            }
            set {
                this.chequetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] frontGrayTIFF {
            get {
                return this.frontGrayTIFFField;
            }
            set {
                this.frontGrayTIFFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] frontImage {
            get {
                return this.frontImageField;
            }
            set {
                this.frontImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] frontImageBWTIFF {
            get {
                return this.frontImageBWTIFFField;
            }
            set {
                this.frontImageBWTIFFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] frontImageUV {
            get {
                return this.frontImageUVField;
            }
            set {
                this.frontImageUVField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] rearImage {
            get {
                return this.rearImageField;
            }
            set {
                this.rearImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] rearImageBWTIFF {
            get {
                return this.rearImageBWTIFFField;
            }
            set {
                this.rearImageBWTIFFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] rearImageUV {
            get {
                return this.rearImageUVField;
            }
            set {
                this.rearImageUVField = value;
            }
        }
        
        /// <remarks/>
        public string scannerID {
            get {
                return this.scannerIDField;
            }
            set {
                this.scannerIDField = value;
            }
        }
        
        /// <remarks/>
        public string sortCode {
            get {
                return this.sortCodeField;
            }
            set {
                this.sortCodeField = value;
            }
        }
        
        /// <remarks/>
        public string tranCode {
            get {
                return this.tranCodeField;
            }
            set {
                this.tranCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime valueDate {
            get {
                return this.valueDateField;
            }
            set {
                this.valueDateField = value;
            }
        }
        
        /// <remarks/>
        public string narration {
            get {
                return this.narrationField;
            }
            set {
                this.narrationField = value;
            }
        }
        
        /// <remarks/>
        public int floatDays {
            get {
                return this.floatDaysField;
            }
            set {
                this.floatDaysField = value;
            }
        }
        
        /// <remarks/>
        public string Drawer {
            get {
                return this.drawerField;
            }
            set {
                this.drawerField = value;
            }
        }
        
        /// <remarks/>
        public string BVN {
            get {
                return this.bVNField;
            }
            set {
                this.bVNField = value;
            }
        }
        
        /// <remarks/>
        public string MICRRepair {
            get {
                return this.mICRRepairField;
            }
            set {
                this.mICRRepairField = value;
            }
        }
        
        /// <remarks/>
        public string expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        public string checkDigit {
            get {
                return this.checkDigitField;
            }
            set {
                this.checkDigitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QRCode {
            get {
                return this.qRCodeField;
            }
            set {
                this.qRCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FeedbackMessage {
        
        private string returncodeField;
        
        private string returnMessageField;
        
        /// <remarks/>
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        public string returnMessage {
            get {
                return this.returnMessageField;
            }
            set {
                this.returnMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class transactionDetails {
        
        private decimal accountCurrencyRateField;
        
        private string accountNoField;
        
        private decimal amountField;
        
        private string beneficiaryAccountNoField;
        
        private string beneficiaryNameField;
        
        private string branchCodeField;
        
        private string chequeNumberField;
        
        private int clearingTypeField;
        
        private int controlBatchNumberField;
        
        private System.DateTime instrumentDateField;
        
        private string narrationField;
        
        private System.DateTime postDateField;
        
        private int productCodeField;
        
        private int responseCodeField;
        
        private string sortCodeField;
        
        private string presentingsortCodeField;
        
        private int transCurrencyCodeField;
        
        private decimal transCurrencyRateField;
        
        private System.DateTime transDateField;
        
        private string userIDField;
        
        private System.DateTime timeApprovedField;
        
        private string approvalReasonField;
        
        private string approverIDField;
        
        private string instrumentTypeField;
        
        private string gUIDField;
        
        private string depositorField;
        
        /// <remarks/>
        public decimal accountCurrencyRate {
            get {
                return this.accountCurrencyRateField;
            }
            set {
                this.accountCurrencyRateField = value;
            }
        }
        
        /// <remarks/>
        public string accountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string beneficiaryAccountNo {
            get {
                return this.beneficiaryAccountNoField;
            }
            set {
                this.beneficiaryAccountNoField = value;
            }
        }
        
        /// <remarks/>
        public string beneficiaryName {
            get {
                return this.beneficiaryNameField;
            }
            set {
                this.beneficiaryNameField = value;
            }
        }
        
        /// <remarks/>
        public string branchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string chequeNumber {
            get {
                return this.chequeNumberField;
            }
            set {
                this.chequeNumberField = value;
            }
        }
        
        /// <remarks/>
        public int clearingType {
            get {
                return this.clearingTypeField;
            }
            set {
                this.clearingTypeField = value;
            }
        }
        
        /// <remarks/>
        public int controlBatchNumber {
            get {
                return this.controlBatchNumberField;
            }
            set {
                this.controlBatchNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime instrumentDate {
            get {
                return this.instrumentDateField;
            }
            set {
                this.instrumentDateField = value;
            }
        }
        
        /// <remarks/>
        public string narration {
            get {
                return this.narrationField;
            }
            set {
                this.narrationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime postDate {
            get {
                return this.postDateField;
            }
            set {
                this.postDateField = value;
            }
        }
        
        /// <remarks/>
        public int productCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public int responseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sortCode {
            get {
                return this.sortCodeField;
            }
            set {
                this.sortCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PresentingsortCode {
            get {
                return this.presentingsortCodeField;
            }
            set {
                this.presentingsortCodeField = value;
            }
        }
        
        /// <remarks/>
        public int transCurrencyCode {
            get {
                return this.transCurrencyCodeField;
            }
            set {
                this.transCurrencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal transCurrencyRate {
            get {
                return this.transCurrencyRateField;
            }
            set {
                this.transCurrencyRateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime transDate {
            get {
                return this.transDateField;
            }
            set {
                this.transDateField = value;
            }
        }
        
        /// <remarks/>
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeApproved {
            get {
                return this.timeApprovedField;
            }
            set {
                this.timeApprovedField = value;
            }
        }
        
        /// <remarks/>
        public string approvalReason {
            get {
                return this.approvalReasonField;
            }
            set {
                this.approvalReasonField = value;
            }
        }
        
        /// <remarks/>
        public string approverID {
            get {
                return this.approverIDField;
            }
            set {
                this.approverIDField = value;
            }
        }
        
        /// <remarks/>
        public string InstrumentType {
            get {
                return this.instrumentTypeField;
            }
            set {
                this.instrumentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
            }
        }
        
        /// <remarks/>
        public string depositor {
            get {
                return this.depositorField;
            }
            set {
                this.depositorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://paymentdata.com/xsd")]
    public partial class ManagersChequeDetails {
        
        private string accountNoField;
        
        private string amountField;
        
        private string beneficiaryField;
        
        private string chequeNoField;
        
        private string sortCodeField;
        
        private string tranCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string beneficiary {
            get {
                return this.beneficiaryField;
            }
            set {
                this.beneficiaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string chequeNo {
            get {
                return this.chequeNoField;
            }
            set {
                this.chequeNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sortCode {
            get {
                return this.sortCodeField;
            }
            set {
                this.sortCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string tranCode {
            get {
                return this.tranCodeField;
            }
            set {
                this.tranCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://paymentdata.com/xsd")]
    public partial class AccountMemo {
        
        private string cod_last_mnt_chkridField;
        
        private string cod_last_mnt_makeridField;
        
        private string custidField;
        
        private string datlastmntField;
        
        private string memotextField;
        
        private string severityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cod_last_mnt_chkrid {
            get {
                return this.cod_last_mnt_chkridField;
            }
            set {
                this.cod_last_mnt_chkridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cod_last_mnt_makerid {
            get {
                return this.cod_last_mnt_makeridField;
            }
            set {
                this.cod_last_mnt_makeridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string custid {
            get {
                return this.custidField;
            }
            set {
                this.custidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string datlastmnt {
            get {
                return this.datlastmntField;
            }
            set {
                this.datlastmntField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string memotext {
            get {
                return this.memotextField;
            }
            set {
                this.memotextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://paymentdata.com/xsd")]
    public partial class AccountMemoInfo {
        
        private AccountMemo[] accountMemoField;
        
        private string accountNumberField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accountMemo", IsNullable=true)]
        public AccountMemo[] accountMemo {
            get {
                return this.accountMemoField;
            }
            set {
                this.accountMemoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ChequeOperation {
        
        /// <remarks/>
        Logement,
        
        /// <remarks/>
        withdrawal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CashOperation {
        
        /// <remarks/>
        Logement,
        
        /// <remarks/>
        Withdrawal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Operation {
        
        /// <remarks/>
        CashLogement,
        
        /// <remarks/>
        CashWithdrawal,
        
        /// <remarks/>
        ChequeLogement,
        
        /// <remarks/>
        ChequeWithdrawal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateAccountNumber2AvoidRestrictionCompletedEventHandler(object sender, ValidateAccountNumber2AvoidRestrictionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAccountNumber2AvoidRestrictionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAccountNumber2AvoidRestrictionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostReturnOutwardSterlingCompletedEventHandler(object sender, PostReturnOutwardSterlingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostReturnOutwardSterlingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostReturnOutwardSterlingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReverseOutwardChequePostingCompletedEventHandler(object sender, ReverseOutwardChequePostingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseOutwardChequePostingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseOutwardChequePostingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostReturnInwardCompletedEventHandler(object sender, PostReturnInwardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostReturnInwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostReturnInwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckIfAlreadyPostedCompletedEventHandler(object sender, CheckIfAlreadyPostedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckIfAlreadyPostedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckIfAlreadyPostedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostReturnInward4AcknowledgmentCompletedEventHandler(object sender, PostReturnInward4AcknowledgmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostReturnInward4AcknowledgmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostReturnInward4AcknowledgmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void newperformTokenAuthenticationCompletedEventHandler(object sender, newperformTokenAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newperformTokenAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newperformTokenAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getListReset4ReturnRequestCompletedEventHandler(object sender, getListReset4ReturnRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListReset4ReturnRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListReset4ReturnRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PassReturnedList2ConfirmationPortalCompletedEventHandler(object sender, PassReturnedList2ConfirmationPortalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PassReturnedList2ConfirmationPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PassReturnedList2ConfirmationPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertChequeIntoConfirmationPortalTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteTodayChequeFromConfirmationPortalTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateReturnInwardChequeStraightThroughCompletedEventHandler(object sender, generateReturnInwardChequeStraightThroughCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateReturnInwardChequeStraightThroughCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateReturnInwardChequeStraightThroughCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateReturnOutwardChequeStraightThroughCompletedEventHandler(object sender, generateReturnOutwardChequeStraightThroughCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateReturnOutwardChequeStraightThroughCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateReturnOutwardChequeStraightThroughCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateNEFTInwardStraightThroughCompletedEventHandler(object sender, generateNEFTInwardStraightThroughCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateNEFTInwardStraightThroughCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateNEFTInwardStraightThroughCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateInwardChequeStraightThroughCompletedEventHandler(object sender, generateInwardChequeStraightThroughCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateInwardChequeStraightThroughCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateInwardChequeStraightThroughCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void performTokenAuthenticationCompletedEventHandler(object sender, performTokenAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class performTokenAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal performTokenAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendClearingChequeEmails2CustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendClearingChequeEmails2CustomersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerEmailCompletedEventHandler(object sender, getCustomerEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerIDFromAccountCompletedEventHandler(object sender, getCustomerIDFromAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerIDFromAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerIDFromAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isUserAuthorised2PostCompletedEventHandler(object sender, isUserAuthorised2PostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isUserAuthorised2PostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isUserAuthorised2PostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendEmailIfCollateralExceedsThresholdCompletedEventHandler(object sender, SendEmailIfCollateralExceedsThresholdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailIfCollateralExceedsThresholdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailIfCollateralExceedsThresholdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendSMS4OutwardChequeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransmitOutwardItemsCompletedEventHandler(object sender, TransmitOutwardItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransmitOutwardItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransmitOutwardItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransmitReturnItemsCompletedEventHandler(object sender, TransmitReturnItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransmitReturnItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransmitReturnItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void StartUsingSUCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsConnectedCompletedEventHandler(object sender, IsConnectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestInwardDownloadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetInwardMessageListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerBVNAndNameCompletedEventHandler(object sender, getCustomerBVNAndNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerBVNAndNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerBVNAndNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerBVNCompletedEventHandler(object sender, GetCustomerBVNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerBVNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerBVNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDepositLimitCompletedEventHandler(object sender, getDepositLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDepositLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDepositLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDepositCompletedEventHandler(object sender, getDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetBanksBWThresholdsCompletedEventHandler(object sender, GetBanksBWThresholdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBanksBWThresholdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBanksBWThresholdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isCustomerBlacklistedCompletedEventHandler(object sender, isCustomerBlacklistedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCustomerBlacklistedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isCustomerBlacklistedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BuildCHQNarrationCompletedEventHandler(object sender, BuildCHQNarrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildCHQNarrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildCHQNarrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDEStatsSterlingCompletedEventHandler(object sender, GetDEStatsSterlingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDEStatsSterlingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDEStatsSterlingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestMyQueryCompletedEventHandler(object sender, TestMyQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestMyQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestMyQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getConfigurationTableCompletedEventHandler(object sender, getConfigurationTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConfigurationTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConfigurationTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateMICRCompletedEventHandler(object sender, ValidateMICRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateMICRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateMICRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateBeneficiaryNameFromCBAThreadedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateBeneficiaryNameFromCBACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDataSetCompletedEventHandler(object sender, GetDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EncrptStringCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertChequeIntoConfirmationPortalNewThreadedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertChequeIntoConfirmationPortalNewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAssemblyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetIPFromUrlCompletedEventHandler(object sender, GetIPFromUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIPFromUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIPFromUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTableDataCompletedEventHandler(object sender, GetTableDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetConnectionStringCompletedEventHandler(object sender, GetConnectionStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUrlForRemoteUserCompletedEventHandler(object sender, GetUrlForRemoteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUrlForRemoteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUrlForRemoteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserRoleCompletedEventHandler(object sender, GetUserRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTokenForRemoteUserCompletedEventHandler(object sender, GetTokenForRemoteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTokenForRemoteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTokenForRemoteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendEMailCompletedEventHandler(object sender, sendEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isEmailValidCompletedEventHandler(object sender, isEmailValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isEmailValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isEmailValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestConvertToObjCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAccountTitleWithAccNoCompletedEventHandler(object sender, getAccountTitleWithAccNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountTitleWithAccNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountTitleWithAccNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isAGuestUserCompletedEventHandler(object sender, isAGuestUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAGuestUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAGuestUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getExternalUserEmailCompletedEventHandler(object sender, getExternalUserEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExternalUserEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExternalUserEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getExternalUserFullNameCompletedEventHandler(object sender, getExternalUserFullNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExternalUserFullNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExternalUserFullNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserRoleCompletedEventHandler(object sender, getUserRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getReturnedChequeAccountCompletedEventHandler(object sender, getReturnedChequeAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReturnedChequeAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReturnedChequeAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetListPostingChequesStatusCompletedEventHandler(object sender, GetListPostingChequesStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListPostingChequesStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListPostingChequesStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountMemoInfoCompletedEventHandler(object sender, GetAccountMemoInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountMemoInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountMemoInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountMemoInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountMemoInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getManagerChequeInfoCompletedEventHandler(object sender, getManagerChequeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getManagerChequeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getManagerChequeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ManagersChequeDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagersChequeDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateDBECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateALLDBECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void postChequesCompletedEventHandler(object sender, postChequesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postChequesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postChequesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FeedbackMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedbackMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transactionDetails[] cheques {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transactionDetails[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateDoubleEntriesMultiple4SterlingCompletedEventHandler(object sender, generateDoubleEntriesMultiple4SterlingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateDoubleEntriesMultiple4SterlingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateDoubleEntriesMultiple4SterlingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DecryptEncryptCompletedEventHandler(object sender, DecryptEncryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptEncryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptEncryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostChequeInwardMCTestCompletedEventHandler(object sender, PostChequeInwardMCTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostChequeInwardMCTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostChequeInwardMCTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateDivWarrantPortalCompletedEventHandler(object sender, UpdateDivWarrantPortalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDivWarrantPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDivWarrantPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDividendWarrantPaidStatusCompletedEventHandler(object sender, GetDividendWarrantPaidStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDividendWarrantPaidStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDividendWarrantPaidStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReverseApprovedChequesCompletedEventHandler(object sender, ReverseApprovedChequesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseApprovedChequesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseApprovedChequesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PopulateNeftRecordsCompletedEventHandler(object sender, PopulateNeftRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateNeftRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateNeftRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PassInwardReturn2ConfirmationPortalCompletedEventHandler(object sender, PassInwardReturn2ConfirmationPortalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PassInwardReturn2ConfirmationPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PassInwardReturn2ConfirmationPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void readOuwardNEFTFilesCompletedEventHandler(object sender, readOuwardNEFTFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readOuwardNEFTFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readOuwardNEFTFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void importOutwardNEFTCompletedEventHandler(object sender, importOutwardNEFTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importOutwardNEFTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importOutwardNEFTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateInwardNEFTDoubleEntriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateReturnInwardNEFTDoubleEntriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateCBAFile4OutwardChequesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateReturnInwardChequeDoubleEntriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void validateControlNumberCompletedEventHandler(object sender, validateControlNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateControlNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateControlNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountBranchCompletedEventHandler(object sender, GetAccountBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void validateInwardItemSortCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveScannedChequesCompletedEventHandler(object sender, saveScannedChequesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveScannedChequesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveScannedChequesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public chequeDetails[] transDetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((chequeDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveScannedCheques08082018CompletedEventHandler(object sender, saveScannedCheques08082018CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveScannedCheques08082018CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveScannedCheques08082018CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public chequeDetails[] transDetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((chequeDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveScannedChequesUVCompletedEventHandler(object sender, saveScannedChequesUVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveScannedChequesUVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveScannedChequesUVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public chequeDetails[] transDetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((chequeDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveScannedChequesOldCompletedEventHandler(object sender, saveScannedChequesOldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveScannedChequesOldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveScannedChequesOldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public chequeDetails[] transDetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((chequeDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getConfigurationValueCompletedEventHandler(object sender, getConfigurationValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConfigurationValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConfigurationValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBankNemonicsCompletedEventHandler(object sender, getBankNemonicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBankNemonicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBankNemonicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBrachNnemonicsCompletedEventHandler(object sender, getBrachNnemonicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBrachNnemonicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBrachNnemonicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTranIDCompletedEventHandler(object sender, getTranIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTranIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTranIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getHeaderCompletedEventHandler(object sender, getHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetValueDateStringCompletedEventHandler(object sender, GetValueDateStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValueDateStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValueDateStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void verifyBankCodeCompletedEventHandler(object sender, verifyBankCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyBankCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyBankCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadTransTypeExcemptionCompletedEventHandler(object sender, LoadTransTypeExcemptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTransTypeExcemptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTransTypeExcemptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetIQAParametersCompletedEventHandler(object sender, GetIQAParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIQAParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIQAParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void validateScannerCompletedEventHandler(object sender, validateScannerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateScannerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateScannerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBranchesCompletedEventHandler(object sender, getBranchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBranchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBranchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PassReturnRequestDatatable2ConfirmationPortalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBenNameCompletedEventHandler(object sender, getBenNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBenNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBenNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Verifimi_BroadcastMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Verifimi_AddCustomerAccountsCompletedEventHandler(object sender, Verifimi_AddCustomerAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Verifimi_AddCustomerAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Verifimi_AddCustomerAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostNEFTOutwardDoubleEntryCompletedEventHandler(object sender, PostNEFTOutwardDoubleEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostNEFTOutwardDoubleEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostNEFTOutwardDoubleEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostNEFTOutwardDoubleEntry2CompletedEventHandler(object sender, PostNEFTOutwardDoubleEntry2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostNEFTOutwardDoubleEntry2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostNEFTOutwardDoubleEntry2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostNeftInwardCompletedEventHandler(object sender, PostNeftInwardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostNeftInwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostNeftInwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetBankNameCompletedEventHandler(object sender, GetBankNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsValidDateTimeCompletedEventHandler(object sender, IsValidDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void postinwardNeftTestCompletedEventHandler(object sender, postinwardNeftTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postinwardNeftTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postinwardNeftTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestConnectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReturnInwardPostTestCompletedEventHandler(object sender, ReturnInwardPostTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnInwardPostTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnInwardPostTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GenerateDEReturnRequestCompletedEventHandler(object sender, GenerateDEReturnRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDEReturnRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDEReturnRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserBranchCompletedEventHandler(object sender, getUserBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateEncryptedSerialNumberCompletedEventHandler(object sender, generateEncryptedSerialNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateEncryptedSerialNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateEncryptedSerialNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void decryptConnectionStringCompletedEventHandler(object sender, decryptConnectionStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class decryptConnectionStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal decryptConnectionStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserTEmplateCompletedEventHandler(object sender, GetUserTEmplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTEmplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTEmplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEffectiveBalanceCompletedEventHandler(object sender, GetEffectiveBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEffectiveBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEffectiveBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RetrievePOSTransactionMessageCompletedEventHandler(object sender, RetrievePOSTransactionMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePOSTransactionMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrievePOSTransactionMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public POSTransactionDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((POSTransactionDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsThereMemoCompletedEventHandler(object sender, IsThereMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsThereMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsThereMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAccountCustomerDetailsCompletedEventHandler(object sender, getAccountCustomerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAccountDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAccountDetails)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void padLeftCompletedEventHandler(object sender, padLeftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class padLeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal padLeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void postCashCompletedEventHandler(object sender, postCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FeedbackMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedbackMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transactionDetails[] cash {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transactionDetails[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void requireChequeDateCompletedEventHandler(object sender, requireChequeDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class requireChequeDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal requireChequeDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void validateIfChequeAlreadyExistsCompletedEventHandler(object sender, validateIfChequeAlreadyExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateIfChequeAlreadyExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateIfChequeAlreadyExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendReturnInwardMailNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserCurrenciesCompletedEventHandler(object sender, getUserCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ISOCurrency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ISOCurrency[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void postInternalChequeCompletedEventHandler(object sender, postInternalChequeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postInternalChequeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postInternalChequeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAccountTitleCompletedEventHandler(object sender, getAccountTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerAccountListCompletedEventHandler(object sender, getCustomerAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerAccountDetailsCompletedEventHandler(object sender, getCustomerAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CUSTACCOUNT Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CUSTACCOUNT)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerAccountDetails2CompletedEventHandler(object sender, getCustomerAccountDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerAccountDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerAccountDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CUSTACCOUNT Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CUSTACCOUNT)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostJournalCompletedEventHandler(object sender, PostJournalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FeedMessage feedback {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerAccountBalanceCompletedEventHandler(object sender, getCustomerAccountBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerAccountBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerAccountBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerBalances Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerBalances)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void checkCustomerAccountExistenceCompletedEventHandler(object sender, checkCustomerAccountExistenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkCustomerAccountExistenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkCustomerAccountExistenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void checkCustomerAccountExistence2CompletedEventHandler(object sender, checkCustomerAccountExistence2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkCustomerAccountExistence2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkCustomerAccountExistence2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGLAccountListCompletedEventHandler(object sender, getGLAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGLAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGLAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGLAccountDetailsCompletedEventHandler(object sender, getGLAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGLAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGLAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GLAccounts Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GLAccounts)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGLAccountBalanceCompletedEventHandler(object sender, getGLAccountBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGLAccountBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGLAccountBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getACustomerDetailsCompletedEventHandler(object sender, getACustomerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getACustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getACustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDetail)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getExternalRoleCompletedEventHandler(object sender, getExternalRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExternalRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExternalRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticatefromCBACompletedEventHandler(object sender, AuthenticatefromCBACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticatefromCBACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticatefromCBACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGLAccountListofACurrencyCompletedEventHandler(object sender, getGLAccountListofACurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGLAccountListofACurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGLAccountListofACurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void get_CA_GL_AccountListCompletedEventHandler(object sender, get_CA_GL_AccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_CA_GL_AccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_CA_GL_AccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FeedMessage Feed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeedMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAccountsFromPANCompletedEventHandler(object sender, getAccountsFromPANCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountsFromPANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountsFromPANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDrawalLimitCompletedEventHandler(object sender, getDrawalLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDrawalLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDrawalLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValiDateUserTillCompletedEventHandler(object sender, ValiDateUserTillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValiDateUserTillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValiDateUserTillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSeverityCompletedEventHandler(object sender, getSeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAccountNameFromPANCompletedEventHandler(object sender, getAccountNameFromPANCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountNameFromPANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountNameFromPANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void validateAccountNoCompletedEventHandler(object sender, validateAccountNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateAccountNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateAccountNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void validateNubanAcctCompletedEventHandler(object sender, validateNubanAcctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateNubanAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateNubanAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void useUBANCompletedEventHandler(object sender, useUBANCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class useUBANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal useUBANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void checkAccountNoCompletedEventHandler(object sender, checkAccountNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAccountNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAccountNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void checkSortCodeCompletedEventHandler(object sender, checkSortCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSortCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSortCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateDoubleEntriesMultipleCompletedEventHandler(object sender, generateDoubleEntriesMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateDoubleEntriesMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateDoubleEntriesMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void generateDoubleEntriesCompletedEventHandler(object sender, generateDoubleEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateDoubleEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateDoubleEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerDetailsCompletedEventHandler(object sender, getCustomerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerDetails2CompletedEventHandler(object sender, getCustomerDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void QuotedStringCompletedEventHandler(object sender, QuotedStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuotedStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuotedStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerBVNOnIBSCompletedEventHandler(object sender, getCustomerBVNOnIBSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerBVNOnIBSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerBVNOnIBSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAccountTitleOnlyCompletedEventHandler(object sender, getAccountTitleOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountTitleOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountTitleOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCustomerDetailsFromCBACompletedEventHandler(object sender, UpdateCustomerDetailsFromCBACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerDetailsFromCBACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerDetailsFromCBACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PushCustomerDetailsCompletedEventHandler(object sender, PushCustomerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PushCashDepositCompletedEventHandler(object sender, PushCashDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushCashDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushCashDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PushCashWithdrawalCompletedEventHandler(object sender, PushCashWithdrawalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushCashWithdrawalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushCashWithdrawalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getChequeStatusCompletedEventHandler(object sender, getChequeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChequeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChequeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerGlobalBalanceCompletedEventHandler(object sender, GetCustomerGlobalBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerGlobalBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerGlobalBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DoInstantTransferCompletedEventHandler(object sender, DoInstantTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoInstantTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoInstantTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCustomerDetails3CompletedEventHandler(object sender, getCustomerDetails3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerDetails3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerDetails3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getMandateInfoCompletedEventHandler(object sender, getMandateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMandateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMandateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public mandateInfo[] lstTmp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mandateInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllCustomersCompletedEventHandler(object sender, getAllCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessAcctDetailsServiceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setAcctDetailsServiceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getStatementCompletedEventHandler(object sender, getStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAccountOpeningDateCompletedEventHandler(object sender, getAccountOpeningDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountOpeningDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountOpeningDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCutomerPictureCompletedEventHandler(object sender, getCutomerPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCutomerPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCutomerPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAverageLodgementCompletedEventHandler(object sender, getAverageLodgementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAverageLodgementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAverageLodgementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getLodgementOverage4CustomerCompletedEventHandler(object sender, getLodgementOverage4CustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLodgementOverage4CustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLodgementOverage4CustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCautionAmount4CustomerCompletedEventHandler(object sender, getCautionAmount4CustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCautionAmount4CustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCautionAmount4CustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCautionNoticeListCompletedEventHandler(object sender, getCautionNoticeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCautionNoticeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCautionNoticeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getLargeAmountCodeCompletedEventHandler(object sender, getLargeAmountCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLargeAmountCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLargeAmountCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCautionAmountCompletedEventHandler(object sender, getCautionAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCautionAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCautionAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAccountNewlyOpenedCodeCompletedEventHandler(object sender, getAccountNewlyOpenedCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountNewlyOpenedCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountNewlyOpenedCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUnusualLodgementCodeCompletedEventHandler(object sender, getUnusualLodgementCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnusualLodgementCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnusualLodgementCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getNewAccountAgeThresholdCompletedEventHandler(object sender, getNewAccountAgeThresholdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewAccountAgeThresholdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewAccountAgeThresholdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void allowCautionReasonsOverrideCompletedEventHandler(object sender, allowCautionReasonsOverrideCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allowCautionReasonsOverrideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allowCautionReasonsOverrideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CardAuthenticationCompletedEventHandler(object sender, CardAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountDetails4POS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDetails4POS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerAccountsCompletedEventHandler(object sender, GetCustomerAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountDetails4POS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDetails4POS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostPOStransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void retrieveAccountNumberfromPOSCompletedEventHandler(object sender, retrieveAccountNumberfromPOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveAccountNumberfromPOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveAccountNumberfromPOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] accountNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string PAN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void retrieveMessageCompletedEventHandler(object sender, retrieveMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public authenticationData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authenticationData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RetrievePrintJobCompletedEventHandler(object sender, RetrievePrintJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePrintJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrievePrintJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PrintJob Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PrintJob)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendReceipt4PrintingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void validateUserExternallyCompletedEventHandler(object sender, validateUserExternallyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateUserExternallyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateUserExternallyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sBranchCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string sBranchName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string sUserOrgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string sUserFullName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string sUserEmail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void validateUserExternallyNoPasswordCompletedEventHandler(object sender, validateUserExternallyNoPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateUserExternallyNoPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateUserExternallyNoPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sBranchCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string sBranchName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string sUserOrgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string sUserFullName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string sUserEmail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCBAuseridCompletedEventHandler(object sender, getCBAuseridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCBAuseridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCBAuseridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591